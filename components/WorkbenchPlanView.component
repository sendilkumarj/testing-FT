<apex:component controller="WorkbenchPlanView" id="workBenchPlanView" allowDML="true" >

<!--------------- Planview Content --------------->

<div id="planSelectedView">
<apex:outputPanel id="PlanData">
        <script type="text/javascript">
            $(function (){
                $('#tabs').tabs();
                $('#tabs').css('display','block');
            });
        </script>
        <style>
            #userEditingPermission{
                display:none;
            }
        </style>
        <apex:outputPanel id="PlanHeader">    
          <div class = "page-head">
              <div class = "object-icon ft-left">
                  <img src = "{!URLFOR($Resource.Images, 'plan/icon-plan-32x32.png')}" />
              </div>
              <div class = "headers ft-left">
                  <span class = "page-subhead ft-left">Plan</span><div id="userEditingPermission">{!canUserEditThisPlan}</div><br />
                  <h2><apex:outputField value="{!planDetail.Name}" /></h2>
              </div>
          </div>
        </apex:outputPanel>
      <!--------- Begin Tabs Area -----------> 
      <div id="tabs">
            <ul>
                <li><a onclick="window.setTimeout('setPosition()',200)" href="#tabs-ite">Items <span class="items-tab"></span> </a></li>
                <li><a href="#tabs-cha">Feed</a></li>
                <li><a href="#tabs-gen">Details</a></li>
            </ul>
                <!----------- Items Tab -------------->
            <div id="tabs-ite">
                <div class = "view-btns-hold">
                <div class = "tabs-block-right ft-right">
                    <a onclick="showItemView(1);" href = "javascript:void(0)" class = "btn-view1 ft-left view-btns" id = "view1"></a>
                    <a onclick="showItemView(2);" href = "javascript:void(0)" class = "btn-view2 ft-left view-btns" id = "view2"></a>
                    <a onclick="showItemView(3);" href = "javascript:void(0)" class = "btn-view3 ft-left view-btns" id = "view3"></a>
                    <a onclick="showItemView(4);" href = "javascript:void(0)" class = "btn-view4 ft-left view-btns" id = "view4"></a>
                </div> 
            </div>       
                <div class = "tabs-block border-pink">
                    <div class = "tabs-block-head">
                        <div class = "tabs-block-left">
                            <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-items-24x24.png')}" />
                            <h3 class = "ft-left">Items</h3>
                        </div>
                        <apex:outputPanel id="addnotePanel">     
                            <script>
                                var peopleEditPermission = {!peopleEditPermission};
                            </script>
                            <apex:panelGroup id="addnotePanelEdit" rendered="{!IF(OR(socialInput.Accountable__c, socialInput.Responsible__c,socialInput.Backup_for_Accountable__c,chkRecPermission==true),TRUE,FALSE)}">
                                <button type = "button" onclick="showModal('note-header','note-body','plan-footer-note')">Add New Note</button>
                            </apex:panelGroup>
                            <apex:panelGroup id="addnotePanelDis" rendered="{!IF(AND(socialInput.Accountable__c==false, socialInput.Responsible__c==false,socialInput.Backup_for_Accountable__c==false,chkRecPermission!=true),True,False)}">
                                <button type = "button" class="btn-disabled">Add New Note</button>
                            </apex:panelGroup>
                        </apex:outputPanel>                       
                            <!------------- Info View1 ----------------->
                        <div class = "tabs-block-right items-hover-area ft-right" id = "items-callout" onmouseover = "showInformationOnItems()" onmouseout = "hideInformationOnItems()">
                            <div class = "popover-gen-arrow items-hover" id = "people-arrow"></div>
                            <div class = "popover-gen items-hover items-hover-area" onmouseout = "hideInformationOnItems()">                                    
                                <div class = "popover-icon ft-left">
                                    <img src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
                                </div>
                               <div class = "popover-gen-content ft-right" id  = "items-content">
                                    In this section, you can organize the various business items on the plan and add the duration for each item.
                                </div>
                            </div>                           
                            <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
                        </div>
                            <!------------- End Info View1 ----------------->
                            <!------------- Info View4 ----------------->
                        <div class = "tabs-block-right items-hover-area1 ft-right" id = "items-callout1" onmouseover = "showInformationOnItemsCompare()" onmouseout = "hideInformationOnItemsCompare()">
                            <div class = "popover-gen-arrow items-hover1" id = "people-arrow"></div>
                            <div class = "popover-gen items-hover1 items-hover-area1" onmouseout = "hideInformationOnItemsCompare()">                                    
                                <div class = "popover-icon ft-left">
                                    <img src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
                                </div>
                                <div class = "popover-gen-content ft-right" id  = "items-content">
                                    You can compare decisions of the plan with the estimated financial details
                                </div>
                            </div>                           
                            <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
                        </div>
                            <!------------- End Info View4 ----------------->
                    </div>
                    
                    <div id="itemView1"> 
                        <div class = "action-disable"></div>
                        <div class = "duration-top" onload="setPosition()">Duration</div>  
                        <div id="planItemView1"></div><!--
                       
                       <div class = "page-block-bottom">                       
                            <div class = "duration-bottom ft-left">
                                <span class = "ft-left">Duration Sum &nbsp;</span>
                                <div id="durationSum" class = "sum-hold ft-left"></div>
                            </div>
                        </div>
                        
                    --></div>
                    <div id="itemView2" class = "workbench-planviews">
                        <div id="planItemView2"></div>
                        
                    </div>
                    <div id="itemView3" class = "workbench-planviews">
                        <div class = "stance-top" onload="setPositionStance()">Stance</div>
                        <div id="planItemView3"></div>
                          
                    </div>
                    <div id="itemView4" class = "workbench-planviews">
                        <div id="planItemView4"></div>
                        
                    </div> 
                    
                </div>      
               
            </div>
                <!----------- Items Tab --------------> 
                <!----------- Chatter Tab -------------->
            <div id="tabs-cha">
                <div class = "tabs-block border-pink">                    
                    <div class = "tabs-block-head">
                        <div class = "tabs-block-left">
                            <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-chatter-24x24.png')}" />
                            <h3 class = "ft-left">Chatter</h3>
                        </div>
                    </div>     
                    <apex:outputPanel id="chatterPanel">
                        <apex:iframe src="/apex/chatterFeed?id={!planDetail.Id}"/>
                    </apex:outputPanel>
                </div>    
            </div> 
            <!----------- End Chatter Tab -------------->
            <!----------- Begin General Tab -------------->
            <div id="tabs-gen">
                <div class = "tabs-block border-pink">
                    <!------------ View Plan section ------------->  
                    <div class="workbench-view-plan">
                        <apex:outputPanel id="viewPlanTab">
                            <div class = "tabs-block-head">
                                <div class = "tabs-block-left">
                                    <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-general-24x24.png')}" />
                                    <h3 class = "ft-left">Plan Details</h3>
                                </div>
                                    <!-- Begin Plan Button Area (Above) -->
                                    <apex:panelGroup rendered="{!IF(OR(socialInput.Accountable__c, socialInput.Responsible__c,socialInput.Backup_for_Accountable__c,chkRecPermission==true),TRUE,FALSE)}">
                                        <button type="button" onclick="showEdit()" >Edit</button>
                                    </apex:panelGroup>
                                     <apex:panelGroup rendered="{!IF(AND(socialInput.Accountable__c == false, socialInput.Responsible__c == false, socialInput.Backup_for_Accountable__c == false,chkRecPermission!=true),True,False)}">
                                        <button type = "button" class="btn-disabled">Edit</button>
                                    </apex:panelGroup> 
                                    <!-- End Plan Button Area (Above) -->
                            </div>
                            <!-------------- Begin General Section ----------------->
                            <div class = "tabs-gen-block border-pink">
                                <h3>General</h3>
                                <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                    <tr>
                                        <td class = "cell-left gen-block-cell">
                                            Subject
                                        </td>
                                        <td class = "gen-block-cell"> 
                                            <apex:outputField value="{!planDetail.Name}" /> 
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class = "cell-left gen-block-cell">
                                            Description
                                        </td>
                                        <td class = "gen-block-cell"> 
                                            <apex:outputField value="{!planDetail.Description__c}" /> 
                                        </td>
                                    </tr>
                                </table>                                
                            </div> 
                            <!-------------- End General Section ----------------->
                            <!-------------- Begin Other Information ----------------->   
                            <div class = "tabs-gen-block border-pink">
                                <h3>Other Information</h3>
                                <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                    <tr>
                                        <td class = "cell-left gen-block-cell">
                                            All Day Event
                                        </td>
                                        <td class = "gen-block-cell"> 
                                            <apex:outputField value="{!planDetail.All_Day_Event__c}" /> 
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class = "cell-left gen-block-cell">
                                            Start
                                        </td>
                                        <td class = "gen-block-cell"> 
                                            <apex:outputField value="{!planDetail.Start_Time__c}" /> 
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class = "cell-left gen-block-cell">
                                            End
                                        </td>
                                        <td class = "gen-block-cell"> 
                                           <!-- <apex:outputText value="{!plan.End_Time__c}" /> -->
                                            <apex:outputField value="{!planDetail.End_Time__c}"/>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class = "cell-left gen-block-cell">
                                            Location
                                        </td>
                                        <td class = "gen-block-cell"> 
                                            <apex:outputField value="{!planDetail.Location__c}" /> 
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class = "cell-left gen-block-cell"> 
                                            Show Time As 
                                        </td>
                                        <td class = "gen-block-cell"> 
                                            <apex:outputField value="{!planDetail.Show_Time_As__c}" /> 
                                        </td>
                                    </tr>
                                </table>
                            </div>  
                            <!-------------- End Other Information -----------------> 
                            <!-- Begin Plan Button Area (Below) -->
                            <div class = "gen-bottom-btns border-btm-pink">
                                <apex:panelGroup rendered="{!IF(OR(socialInput.Accountable__c, socialInput.Responsible__c,socialInput.Backup_for_Accountable__c,chkRecPermission==true),TRUE,FALSE)}">
                                    <button type="button" onclick="showEdit()" >Edit</button>
                                </apex:panelGroup>
                                <apex:panelGroup rendered="{!IF(OR(socialInput.Accountable__c, socialInput.Responsible__c,socialInput.Backup_for_Accountable__c,chkRecPermission==true),FALSE,TRUE)}">
                                    <button type = "button" class="btn-disabled">Edit</button>
                                </apex:panelGroup>
                            </div> 
                            <!-- End Plan Button Area (Below) --> 
                        </apex:outputPanel>
                    </div>
                    <!-- End view plan section --> 
                
                <!-- Begin edit plan section --> 
                <div class="workbench-edit-plan">
                    <apex:form id="editMode" >
                        <div class = "tabs-block-head">
                            <div class = "tabs-block-left">
                                <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-general-24x24.png')}" />
                                <h3 class = "ft-left">Plan Edit</h3>                            
                            </div>
                            <!-- Begin Plan Button Area (Above) --> 
                            <button type="button" onclick="saveThisPlan()">Save</button>
                            <button type = "button" onclick="editModeAction();showView()"> Cancel </button>
                            <!-- End Plan Button Area (Above) --> 
                        </div>
                        <apex:outputPanel id="editPlanTab">
                        <!-------------- Begin General Section ----------------->
                        <div class = "tabs-gen-block border-pink">
                            <h3>General</h3>
                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        Subject
                                    </td>
                                    <td class = "gen-block-cell"> 
                                        <apex:inputField styleClass="plan-input-text"  id="planName" value="{!planDetail.Name}" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        Description
                                    </td>
                                    <td class = "gen-block-cell">
                                        <apex:inputField styleClass="plan-input-textarea" id="planDesc" value="{!planDetail.Description__c}" /><br/>
                                        <strong>Max 255 chars.</strong>
                                    </td>
                                </tr>
                            </table>
                         </div> 
                         <!-------------- End General Section ----------------->
                         <!-------------- Begin Other Information -----------------> 
                         <div class = "tabs-gen-block border-pink">
                            <h3>Other Information</h3>
                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">    
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        All Day Event
                                    </td>
                                    <td class = "gen-block-cell">
                                        <apex:inputField value="{!planDetail.All_Day_Event__c}" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        Start
                                    </td>
                                    <td class = "gen-block-cell">
                                        <apex:inputField value="{!planDetail.Start_Time__c}" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        End
                                    </td>
                                    <td class = "gen-block-cell">
                                        <apex:inputField value="{!planDetail.End_Time__c}" />
                                    </td>
                                </tr>  
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        Location
                                    </td>
                                    <td class = "gen-block-cell">
                                        <apex:inputField styleClass="plan-input-text" value="{!planDetail.Location__c}" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class = "cell-left gen-block-cell">
                                        Show Time As
                                    </td>
                                    <td class = "gen-block-cell">
                                        <apex:inputField value="{!planDetail.Show_Time_As__c}" />
                                    </td>
                                </tr>
                            </table>
                         </div> 
                         <!-------------- End Other Information -----------------> 
                        </apex:outputPanel>
                        <!-- Begin Plan Button Area (Below) -->
                        <div class = "gen-bottom-btns border-btm-pink">
                            <button type="button" onclick="saveThisPlan()">Save</button>
                            <button type = "button" onclick="editModeAction();showView()"> Cancel </button>
                            <apex:actionFunction name="editModeAction" action="{!dummyCall}"  reRender="editPlanTab" >
                                <apex:param name="planid" id="plnId" value="" />
                            </apex:actionFunction>
                            <apex:actionFunction name="savePlan" action="{!savePlan}" oncomplete="showView();" reRender="PlanHeader,viewPlanTab" >
                                <apex:param name="planid" id="planid" value="" />
                            </apex:actionFunction>
                        </div>    
                        <!-- End Plan Button Area (Below) -->
                   </apex:form>
                </div>
                <!-- End edit plan section -->
                </div>    
            </div> 
            <!------------- End General Tab --------------->  
        </div>
        <!--------- End Tabs Area -----------> 
     
        <div class = "popover-sf border-pink" id = "item-call">
            <div class = "popover-sf-arrow"></div>
            <div class = "popover-title border-btm-pink">
            </div>
            <table cellspacing = "0" cellpadding = "0" class = "page-block-tbl" id = "item-hover-tbl">
                <tr>
                    <td class = "cell-left gen-block-cell fld-title1 left-width popover-label"></td>
                    <td class = "gen-block-cell fld-value1"></td>
                </tr>
                <tr>
                    <td class = "cell-left gen-block-cell fld-title2 left-width popover-label"></td>
                    <td class = "gen-block-cell fld-value2"></td>
                </tr>
            </table>
        </div> 
</apex:outputPanel>
</div>

    <!------------ End Planview -------------->
     
<div id="hidePlanView" class = "workbench-plan-select">
    Select a Plan from the <b>"Plans"</b> table.<br />
    <apex:image url="{!URLFOR($Resource.Images, 'common/thumb-select-100x81.png')}"/>   
</div>

    <!--------- Popup ----------->
    <div class = "bg-fade"></div>
    <div class = "modal-window">
        <div class = "modal-head">
            <!--------- Popup Note Header -----------> 
            <div class = "modal-plan-header ft-left" id = "note-header">
                Add Note
            </div>
            <!--------- End Popup Note Header -----------> 
            
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideModal()"></a>
        </div>
        <div class = "modal-content">
            
            <!--------- Popup Note Content -----------> 
            <div class = "modal-plan-content" id = "note-body">
                <table cellspacing = "0" cellpadding = "6" class = "modal-tbl">
                    
                    <tr>
                        <td class = "cell-left">
                            Subject
                        </td>
                        <td class="cell-right required-input">
                            <div class="requiredInput">
                                <div class="requiredBlock"></div>
                                <input type = "text" id="noteSubject" maxlength="80" class = "note-input-text" />
                            </div> 
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left">
                            Body
                        </td>
                        <td class = "cell-right">
                            <textarea id="noteBody" class = "note-input-textarea"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left">
                            Private
                        </td>
                        <td class = "cell-right">
                            <input type = "checkbox" disabled="true" />
                        </td>
                    </tr>
                </table>
            </div> 
                <!--------- End Popup Note Content ----------->
        </div>
        <div class = "modal-btm">
                <!--------- Popup Note Footer ----------->  
            <div class = "modal-footer" id = "plan-footer-note">
                <button type = "button" onclick="validateAddNote();" oncomplete="setTextAreaSize();">Add Note</button>
                <button type = "button" onclick = "hideModal();clearValue();" oncomplete="setTextAreaSize();">Cancel</button>
            </div>    
                <!--------- End Popup Note Footer -----------> 
        </div>
    </div>  
    <script>
        var eleId;
        function planSeletedId(ele){
            eleId = ele;
            selectPlan(ele);
            $('#hidePlanView').css('display','none');
            $('#planSelectedView').css('display','block');
        }
        
        function setTextAreaSize(){
            document.getElementById('noteBody').style.width='520px';    
            document.getElementById('noteBody').style.height='80px';    
        }
        
        function saveThisPlan(){
            var planName = document.getElementById('workBenchHomePage:workBenchPlanViewComponent:workBenchPlanView:editMode:planName').value ;
            var planDesc = document.getElementById('workBenchHomePage:workBenchPlanViewComponent:workBenchPlanView:editMode:planDesc').value ;
            if(planName == '' || planName == null){
                alert('Please enter the subject for plan');
                return false;
            }
            if(planDesc.length > 255){
                alert('Plan description cannot be more than 255 chars');
                return false;
            }
            savePlan(eleId);    
        }
        
        function clearValue(){
            document.getElementById('noteSubject').value = '';
            document.getElementById('noteBody').value = '';
            setTextAreaSize();
            
        }
        
        function addNoteItem(subject,body){
            hideModal();
            
            WorkbenchPlanView.addNoteItems(eleId, subject,body, function(result, event)
            {
                if (event.status)
                {  
                    var newItemViewOne = removeQuotes(result);
                    //kendoItemView1(newItemViewOne);
                    kendoItemView2(newItemViewOne);
                    kendoItemView3(newItemViewOne);
                    kendoItemView4(newItemViewOne); 
                    document.getElementById('noteSubject').value = '';
                    document.getElementById('noteBody').value = ''; 
                    var grid = $("#planItemView1").data("kendoGrid");
                    grid.dataSource.data(newItemViewOne);
                    $(".items-tab").html( '('+ newItemViewOne.length +')' );
                    //grid.dataSource.update();
                }
            }, {escape:true});
            
        }
        
        function showEdit() {
                $('.workbench-view-plan').css('display','none');
                $('.workbench-edit-plan').css('display','block');
        }
        function showView() {
                $('.workbench-edit-plan').css('display','none');
                $('.workbench-view-plan').css('display','block');
        }
        function planItemData(ele){
           // planItemDataRemote(ele);;        
        }
        function planSeletedItemId(ele1,ele2,ele3){
            if(eleId == null){
                alert('Please select the plan first');
                return false;
            }
            //alert(1);
            WorkbenchPlanView.addItemToPlan(ele1,ele2,ele3,eleId,function(result, event) 
            {
                if (event.status)
                {
                    if(result != 'no permission'){
                        var newItemViewOne = removeQuotes(result);
                        //kendoItemView1(newItemViewOne);
                        kendoItemView2(newItemViewOne);
                        kendoItemView3(newItemViewOne);
                        kendoItemView4(newItemViewOne);
                        var grid = $("#planItemView1").data("kendoGrid");
                        grid.dataSource.data(newItemViewOne);
                        $(".items-tab").html( '('+ newItemViewOne.length +')' );
                    }else{
                        alert('You do not have permission to add items for this plan');
                    }
                }
            }, {escape:true});    
        }
        
        function planItemDataRemote(ele) {
            WorkbenchPlanView.itemView(ele,function(result, event) 
            {
                if (event.status)
                {
                    var newItemViewOne = removeQuotes(result);
                    kendoItemView1(newItemViewOne);
                    kendoItemView2(newItemViewOne);
                    kendoItemView3(newItemViewOne);
                    kendoItemView4(newItemViewOne);   
                    WorkbenchPlanView.calTotalMins(ele, function(result, event)
                    {
                        if (event.status)
                        {   
                            //var newItemViewOne = removeQuotes(result);
                            //$('#durationSum').html(result);
                            document.getElementById('durationSum').innerHTML = result;
                        }
                   }, {escape:true}); 
                }
            }, {escape:true});
        }
        
        function parseDeleteItemViewOne(id) {
            WorkbenchPlanView.DeleteItem(eleId, id , function(result, event)
            {
                
                if (event.status)
                {   
                    var newItemViewOne = removeQuotes(result);
                    //kendoItemView1(newItemViewOne);
                    kendoItemView2(newItemViewOne);
                    kendoItemView3(newItemViewOne);
                    kendoItemView4(newItemViewOne);
                    var grid = $("#planItemView1").data("kendoGrid");
                    grid.dataSource.data(newItemViewOne);
                    $(".items-tab").html( '('+ newItemViewOne.length +')' ); 
                    WorkbenchPlanView.calTotalMins(eleId, function(result, event)
                    {
                        if (event.status)
                        {   
                            //var newItemViewOne = removeQuotes(result);
                            //$('#durationSum').html(result);
                            document.getElementById('durationSum').innerHTML = result;
                        }
                    }, {escape:true});
                    
                    //grid.dataSource.update();
                }
            }, {escape:true});
        }
        
        function parseUpItemViewOne(id) {
            WorkbenchPlanView.moveUp(eleId, id , function(result, event)
            {
                if (event.status)
                {   
                    var newItemViewOne = removeQuotes(result);
                    //kendoItemView1(newItemViewOne);
                    kendoItemView2(newItemViewOne);
                    kendoItemView3(newItemViewOne);
                    kendoItemView4(newItemViewOne);
                    var grid = $("#planItemView1").data("kendoGrid");
                    grid.dataSource.data(newItemViewOne);
                    //grid.dataSource.update();
                }
            }, {escape:true});
        }
        
        function parseDownItemViewOne(id) {
            WorkbenchPlanView.moveDown(eleId, id , function(result, event)
            {
                if (event.status)
                {   
                    var newItemViewOne = removeQuotes(result);
                    //kendoItemView1(newItemViewOne);
                    kendoItemView2(newItemViewOne);
                    kendoItemView3(newItemViewOne);
                    kendoItemView4(newItemViewOne);
                    var grid = $("#planItemView1").data("kendoGrid");
                    grid.dataSource.data(newItemViewOne);
                    //grid.dataSource.update();
                 //itemViewUpdate();
                }
            }, {escape:true});
        }
        
        function parseItemModifiedData(modifiedData){
            WorkbenchPlanView.saveItemModifiedData(eleId,modifiedData, function(result, event)
            {
                if (event.status)
                {   
                    var newItemViewOne = removeQuotes(result);
                    //kendoItemView1(newItemViewOne);
                    var grid = $("#planItemView1").data("kendoGrid");
                    grid.dataSource.data(newItemViewOne);
                    WorkbenchPlanView.calTotalMins(eleId, function(result, event)
                    {
                        if (event.status)
                        {   
                            //var newItemViewOne = removeQuotes(result);
                            //$('#durationSum').html(result);
                            document.getElementById('durationSum').innerHTML = result;
                        }
                    }, {escape:true});
                    $('.action-disable').css('display','none');
                    return newItemViewOne;
                }
                
            }, {escape:true});
        }
        
        // remove quotes from json string 
        function removeQuotes(mystring) {
                
            newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
                return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
            });
            
            var newJ= $.parseJSON(newString);
            return newJ;
        }
        
        var kendoViewOneGridData;
      
        function  kendoItemView1 (gridData) {
            kendoViewOneGridData = gridData;
            $('.items-tab').html('('+gridData.length+')');
            
            //$('#durTotal').css('display','none');
            var data1 = gridData;
            function SortByValue1(x,y) {
                                  return x.Position- y.Position; 
                           }
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            
            $.ajaxSetup({ cache: false }); 
            
            // new way or style
            var dataSource = new kendo.data.DataSource({
                
                transport: {
                    read: function(e) {  
                        dataSource.sync();
                        e.success(data1);
                    },
                    update: function(e) {
                              
                        var t = JSON.stringify(e);
                        //alert(t);
                        parsingModifieData(t);
                        e.success();
                    }
                 },
                 batch : true,
                 schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            Name: { type: "string" , editable: false},
                            Type: {type:"string",editable:false},
                            isDeletable: {type:"Boolean",editable:false},
                            Minutes: { type: "number" ,validation: { max: 59, min : 0 } },
                            Hours: { type: "number" ,validation: { max: 23, min : 0 } },
                            Days : { type: "number" ,validation: { max: 999, min : 0 } },   
                            
                            Owner: { type: "string", editable: false },
                             
                            //Type: { type: "string", editable: false },
                            OwnerId: { type: "string", editable: false },
                            //Position: { type: "string" },
                            description: { type: "string", 
                                validation: { 
                                    maxlength:
                                        function(input) { 
                                            if (input.val().length > 255) {
                                               input.attr("data-maxlength-msg", "Max length is 255");
                                               return false;
                                            }                                   
                                            return true;
                                        }
                                } 
                          }
                        }
                    }
                }
            });
            
            var isEdit = false;
            
            var grid = $("#planItemView1").kendoGrid({
                
                dataSource: dataSource, 
                //save:planItemView1GridDirtyRowCheck, 
                scrollable: true,
                navigatable: true,
                editable: peopleEditPermission,
                //pageable: true,
                /* toolbar:  ["save","cancel"], */ /* ---------------- commented this code to remove duration column and its contents ---- sendil --- 08-07-2014 */
                //pageSize: 50,                            
                columns: [
                    {
                        field: "Id",
                        title: "Action",
                        template: "<div class='grid-action' id='Delete'><img onclick=\"deleteItemViewOne('#:Id#','#:isDeletable#')\"; src=/#:delItem# title='Delete'></div><div class = 'grid-action' id='UpArrow'><img src=/#:moveUp# onclick=\"upItemViewOne('#:Id#','#:isDeletable#')\";  title='Move up'></div> <div class='grid-action' id='DownArrow'><img src=/#:moveDown#  onclick=\"downItemViewOne('#:Id#','#:isDeletable#')\"; title='Move down'></div>",
                        width: 80
                    },
                    {
                        field: "Name",
                        title: "Name/Title",
                        template: '<a class="decisionLink"  onmouseout=\'hideItemDetails()\'; onmouseover=\'showItemDetails(event,"#:Type#","#:Name#","#:popupField1#","#:popupField2#","#:popupField3#","#:popupFieldName1#","#:popupFieldName2#","#:popupFieldName3#")\'; href=/#:itemRecordId# target="_parent"><span class = "#:typeClass#">#=Name#</span></a><div id = "decHidden">#:Type#</div><div id = "decHidden">#=Name#</div><div id = "decHidden">#=popupField1#</div><div id = "decHidden">#=popupField2#</div><div id = "decHidden">#=popupField3#</div><div id = "decHidden">#=popupFieldName1#</div><div id = "decHidden">#=popupFieldName2#</div><div id = "decHidden">#=popupFieldName3#</div>'
                    }
                    ,
                    {
                        field: "Type",
                        title: "Item Type",
                        width: 80,
                        template: "#:Type#"
                    },
                    {
                        field: "Days",
                        title: "<br/>Days",
                        template: '<div align = "center">#:Days#</div>',
                        width: 70
                    },
                    {
                        field: "Hours",
                        title: "<br/>Hours",
                        template: '<div align = "center">#:Hours#</div>',
                        width: 70
                        
                    },
                    {
                        field: "Minutes",
                        title: "<br/>Minutes",
                        template: '<div align = "center">#:Minutes#</div>',
                        width: 70
                    },
                    {
                        field: "Owner",
                        title: "Accountable/<br />Owner",
                        template: "#:Owner#"
                    },
                    {
                       field: "description",
                        title: "Description",
                        template: "#:description#"
                    }]
            }).data("kendoGrid");   
            
            if(!convertStringToBoolean(peopleEditPermission)) {
                $('#itemView1 .k-button').css('visibility','hidden');
                $('#itemView1 .k-grid-content .item-editable').removeAttr('title');
                $('#itemView1 .k-grid-content .item-editable').css('cursor','default');
            }else {
                $('#itemView1 .k-button').css('visibility','visible');
                $('#itemView1 .k-grid-content .item-editable').attr('title','Edit');
                $('#itemView1 .k-grid-content .item-editable').css('cursor','text');
            }
           
            $(function() {
                $('.decisionLink123').hover(function(e) {
                    $('#item-hover-tbl tr:nth-child(2)').show();
                    $('#item-hover-tbl tr:nth-child(3)').show();
                    var itemType = $(this).next().html();
                    var itemTitle = $(this).next().next().html();
                    var itemField1 = $(this).next().next().next().html();
                    var itemField2 = $(this).next().next().next().next().html();
                    var itemField3 = $(this).next().next().next().next().next().html();
                    var itemTitle1 = $(this).next().next().next().next().next().next().html();
                    var itemTitle2 = $(this).next().next().next().next().next().next().next().html();
                    var itemTitle3 = $(this).next().next().next().next().next().next().next().next().html();
                    if(itemType == "Note") {
                        $('#item-hover-tbl tr:nth-child(2)').hide();
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    if(itemType == "Account" || itemType == "Decision" || itemType == "Task" || itemType == "Issue") {
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    
                    $('.popover-title').html(itemTitle);
                    if(itemTitle1 == 'Problem Statement'){
                        $('.fld-title1').html('Description');
                    }else{
                        $('.fld-title1').html(itemTitle1);
                    }
                    $('.fld-title2').html(itemTitle2);
                    $('.fld-title3').html(itemTitle3);
                    $('.fld-value1').html(itemField1);
                    $('.fld-value2').html(itemField2);
                    $('.fld-value3').html(itemField3);
                    $('#item-call').show()
                      .css('top', e.pageY - 45)
                      .css('left', e.pageX + 30)
                      .appendTo('body');
                    
                }, function() {
                    $('#item-call').hide();
                });
              });
              setPosition();
        }
        
        function showItemDetails(e,itemType,Name,popupField1,popupField2,popupField3,popupFieldName1,popupFieldName2,popupFieldName3){
          $('#item-hover-tbl tr:nth-child(2)').show();
          $('#item-hover-tbl tr:nth-child(3)').show();
          var itemType = itemType; //$(this).next().html();
          var itemTitle = Name;//$(this).next().next().html();
          var itemField1 = popupField1;//$(this).next().next().next().html();
          var itemField2 = popupField2; //$(this).next().next().next().next().html();
          var itemField3 = popupField3;//$(this).next().next().next().next().next().html();
          var itemTitle1 = popupFieldName1;//$(this).next().next().next().next().next().next().html();
          var itemTitle2 = popupFieldName2;//$(this).next().next().next().next().next().next().next().html();
          var itemTitle3 = popupFieldName3;//$(this).next().next().next().next().next().next().next().next().html();
          if(itemType == "Note") {
              $('#item-hover-tbl tr:nth-child(2)').hide();
              $('#item-hover-tbl tr:nth-child(3)').hide();
          }
          if(itemType == "Account" || itemType == "Decision" || itemType == "Task" || itemType == "Issue") {
              $('#item-hover-tbl tr:nth-child(3)').hide();
          }
          
          $('.popover-title').html(itemTitle);
          if(itemTitle1 == 'Problem Statement'){
              $('.fld-title1').html('Description');
          }else{
              $('.fld-title1').html(itemTitle1);
          }
          $('.fld-title1').html(itemTitle1);
          $('.fld-title2').html(itemTitle2);
          $('.fld-title3').html(itemTitle3);
          $('.fld-value1').html(itemField1);
          $('.fld-value2').html(itemField2);
          $('.fld-value3').html(itemField3);
          $('#item-call').show()
            .css('top', e.clientY - 45 + $(document).scrollTop())
            .css('left', e.clientX + 30)
            .appendTo('body');
                    
             
        }
        
        function hideItemDetails(){
            $('#item-call').hide();
        }
        
        function kendoItemView2 (gridData) {
            var data2 = gridData; 
            $('.items-tab').html('('+gridData.length+')');
            function SortByValue2(x,y) {
                                  return x.Position- y.Position; 
                           }
            if(data2 != null){
                data2.sort(SortByValue2);
            }
            var dataSource = new kendo.data.DataSource({
                data: data2,        
                schema: {
                    model: {
                        Id: "Id",
                        fields: {
                            Id: { type: "string"},
                            Title: { type: "string" },
                            predictionResult : { type: "string"},       
                            approve: { type: "string" },
                            nostance : { type: "string"},
                            disapprove : { type: "string"},
                            status : { type: "string" },
                            phase : { type: "string" },
                            veto : { type: "string"}
                        }
                    }
                }
            });
            
            var grid = $("#planItemView2").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                
                sortable: false,
                columns: [
                   
                    {
                        field: "Name",
                        title: "Name/Title",
                        template: '<a class="decisionLink2" href=/#:itemRecordId# target="_parent"><span class = "#:typeClass#">#=Name#</span></a><div id = "decHidden">#:Type#</div><div id = "decHidden">#:Name#</div><div id = "decHidden">#=popupField1#</div><div id = "decHidden">#=popupField2#</div><div id = "decHidden">#=popupField3#</div><div id = "decHidden">#=popupFieldName1#</div><div id = "decHidden">#=popupFieldName2#</div><div id = "decHidden">#=popupFieldName3#</div>'
                    }
                    ,{
                        field: "Type",
                        title: "Item Type",
                        width: 77,
                        template: "#:Type#"
                    }
                    ,{
                        field: "approve",
                        title: "Approve",
                        width: 71,
                        template: "#:approve#"
                    },
                    {
                        field: "nostance",
                        title: "No<br />Stance",
                        width: 65,
                        template: "#:nostance#"
                    },
                     {
                        field: "disapprove",
                        title: "Disapprove",
                        width: 85,
                        template: "#:disapprove#"
                    },
                    {
                        field: "veto",
                        title: "Veto",
                        width: 45,
                        template: "#:veto#"
                    },
                    {
                        field: "status",
                        title: "Status",
                        width: 80,
                        template: "#:status#"
                    },
                    {
                        field: "predictionResult",
                        title: "Predicted<br />Result",
                        template: '<div align = "center"><img src=/#:predictionResult# /><div>',
                        width: 75
                    },
                    {
                        field: "phase",
                        title: "Phase",
                        width: 80,
                        template: "#:phase#"
                    }]
                                    
            }).data("kendoGrid");
            $(function() {
                $('.decisionLink2').hover(function(e) {
                    $('#item-hover-tbl tr:nth-child(2)').show();
                    $('#item-hover-tbl tr:nth-child(3)').show();
                    var itemType = $(this).next().html();
                    var itemTitle = $(this).next().next().html();
                    var itemField1 = $(this).next().next().next().html();
                    var itemField2 = $(this).next().next().next().next().html();
                    var itemField3 = $(this).next().next().next().next().next().html();
                    var itemTitle1 = $(this).next().next().next().next().next().next().html();
                    var itemTitle2 = $(this).next().next().next().next().next().next().next().html();
                    var itemTitle3 = $(this).next().next().next().next().next().next().next().next().html();
                    if(itemType == "Note") {
                        $('#item-hover-tbl tr:nth-child(2)').hide();
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    if(itemType == "Account" || itemType == "Decision" || itemType == "Task" || itemType == "Issue") {
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    
                    $('.popover-title').html(itemTitle);
                    if(itemTitle1 == 'Problem Statement'){
                        $('.fld-title1').html('Description');
                    }else{
                        $('.fld-title1').html(itemTitle1);
                    }
                    $('.fld-title2').html(itemTitle2);
                    $('.fld-title3').html(itemTitle3);
                    $('.fld-value1').html(itemField1);
                    $('.fld-value2').html(itemField2);
                    $('.fld-value3').html(itemField3);
                    $('#item-call').show()
                      .css('top', e.pageY - 45)
                      .css('left', e.pageX + 30)
                      .appendTo('body');
                    
                }, function() {
                    $('#item-call').hide();
                });
              });
            
        }
        
        function kendoItemView3 (gridData) {
            var itemdata3= gridData; 
            
            var dataSource = new kendo.data.DataSource({
                data: itemdata3,        
                schema: {
                    model:{ 
                        Id: "Id",
                        fields: {
                            Id: { type: "string"},
                            Title: { type: "string"},
                            approve: { type: "string"},
                            nostance: { type: "string"},
                            disapprove: { type: "string"},
                            veto: { type: "string"},
                            issue: { type: "string"},
                            status : { type: "string" },
                            mood: { type: "string"},
                            moodClass: { type: "string"}
                        }
                    }
                }
            });
            var grid = $("#planItemView3").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,    
                editable: false,
                
                sortable: false,
                columns: [
               
                {
                    field: "Name",
                    title: "Name/Title",
                    template: '<a class="decisionLink3" href=/#:itemRecordId# target="_parent"><span class = "#:typeClass#">#=Name#</span></a><div id = "decHidden">#:Type#</div><div id = "decHidden">#:Name#</div><div id = "decHidden">#=popupField1#</div><div id = "decHidden">#=popupField2#</div><div id = "decHidden">#=popupField3#</div><div id = "decHidden">#=popupFieldName1#</div><div id = "decHidden">#=popupFieldName2#</div><div id = "decHidden">#=popupFieldName3#</div>'
                }
                ,
                    
                {
                    field: "Type",
                    title: "Item Type",
                    width: 80,
                    template: "#:Type#"
                }
                ,
                {
                    field: "approve",
                    headerTemplate: '<div align = "center"><br /><img src = "{!URLFOR($Resource.Images, "common/icon-approved-16x16.png")}" /><div>',
                    //title: "Approve",
                    width: 50,
                    template: "#:approve#"
                },
                {
                    field: "nostance",
                    headerTemplate: '<div align = "center"><br /><img src = "{!URLFOR($Resource.Images, "common/icon-pending-16x16.png")}" /><div>',
                    //title: "No<br />Stance",
                    width: 50,
                    template: "#:nostance#"
                },
                {
                    field: "disapprove",
                    headerTemplate: '<div align = "center"><br /><img src = "{!URLFOR($Resource.Images, "common/icon-rejected-16x16.png")}" /><div>',
                    //title: "Disapprove",
                    width: 50,
                    template: "#:disapprove#"
                },
                {
                    field: "veto",
                    title: "Veto",
                    width: 45,
                    template: "#:veto#"
                },
                /*{
                    field: "issue",
                    title: "Issue",
                    template: '<div align = "center"><img src=/#:IssueImg# title=#:issue# /><div>',
                    width: 50
                },*/
                {
                    field: "mood",
                    title: "Mood",
                    template: '<div align = "center"><div class=#:moodClass# title=#:mood# /><div>',
                    width: 60
                },
                {
                    field: "status",
                    title: "Status",
                    width: 80,
                    template: "#:status#"
                },
                {
                    field: "phase",
                    title: "Phase",
                    width: 80,
                    template: "#:phase#"
                }]
            }).data("kendoGrid");
            $(function() {
                $('.decisionLink3').hover(function(e) {
                    $('#item-hover-tbl tr:nth-child(2)').show();
                    $('#item-hover-tbl tr:nth-child(3)').show();
                    var itemType = $(this).next().html();
                    var itemTitle = $(this).next().next().html();
                    var itemField1 = $(this).next().next().next().html();
                    var itemField2 = $(this).next().next().next().next().html();
                    var itemField3 = $(this).next().next().next().next().next().html();
                    var itemTitle1 = $(this).next().next().next().next().next().next().html();
                    var itemTitle2 = $(this).next().next().next().next().next().next().next().html();
                    var itemTitle3 = $(this).next().next().next().next().next().next().next().next().html();
                    if(itemType == "Note") {
                        $('#item-hover-tbl tr:nth-child(2)').hide();
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    if(itemType == "Account" || itemType == "Decision" || itemType == "Task" || itemType == "Issue") {
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    
                    $('.popover-title').html(itemTitle);
                    if(itemTitle1 == 'Problem Statement'){
                        $('.fld-title1').html('Description');
                    }else{
                        $('.fld-title1').html(itemTitle1);
                    }
                    $('.fld-title2').html(itemTitle2);
                    $('.fld-title3').html(itemTitle3);
                    $('.fld-value1').html(itemField1);
                    $('.fld-value2').html(itemField2);
                    $('.fld-value3').html(itemField3);
                    $('#item-call').show()
                      .css('top', e.pageY - 45)
                      .css('left', e.pageX + 30)
                      .appendTo('body');
                    
                }, function() {
                    $('#item-call').hide();
                });
              });
        }
        
        function  kendoItemView4 (gridData) {
        var itemdata4 =  gridData;
            
            var dataSource = new kendo.data.DataSource({
                data: itemdata4,        
                schema: {
                    model: {
                        Id: "Id",
                        fields: {
                            Id: { type: "string"},
                            Title: { type: "string"},
                            Investment : {type: "string"},         
                            DirectCost : { type: "string"},
                            Revenue : { type: "string"},
                            NetPresentValue : { type: "string"},
                            PeopleInvolved : { type: "string" },
                            FTE: { type: "string"}
                        }
                    }
                }
            });
            var grid = $("#planItemView4").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                sortable: false,
                columns: [
                  
                    {
                        field: "Name",
                        title: "Name/Title",
                        template: '<a class="decisionLink4" href=/#:itemRecordId# target="_parent"><span class = "#:typeClass#">#=Name#</span></a><div id = "decHidden">#:Type#</div><div id = "decHidden">#:Name#</div><div id = "decHidden">#=popupField1#</div><div id = "decHidden">#=popupField2#</div><div id = "decHidden">#=popupField3#</div><div id = "decHidden">#=popupFieldName1#</div><div id = "decHidden">#=popupFieldName2#</div><div id = "decHidden">#=popupFieldName3#</div>'
                    }
                    ,
                    
                    {
                        field: "Type",
                        title: "Item Type",
                        width: 80,
                        template: "#:Type#"
                    }
                    ,
                    {
                        field: "Investment",
                        title: "Investment",
                        width: 100,
                        template: "#:Investment#"
                    },
                     {
                        field: "DirectCost",
                        title: "Direct<br />Cost",
                        width: 70,
                        template: "#:DirectCost#"
                        
                    },
                    {
                        field: "Revenue",
                        title: "Revenue",
                        width: 70,
                        template: "#:Revenue#"
                    },
                    {
                        field: "NetPresentValue",
                        title: "Net Present<br />Value",
                        width: 95,
                        template: "#:NetPresentValue#"
                    },
                    {
                       field: "PeopleInvolved",
                       title: "People<br />Involved",
                       width: 75,
                       template: "#:PeopleInvolved#"
                    },
                    {
                        field: "FTE",
                        title: "Full-time<br />Equivalent(FTE)",
                        width: 125,
                        template: "#:FTE#"
                    }],
                    
                    
                                    
            }).data("kendoGrid");
            $(function() {
                $('.decisionLink4').hover(function(e) {
                    $('#item-hover-tbl tr:nth-child(2)').show();
                    $('#item-hover-tbl tr:nth-child(3)').show();
                    var itemType = $(this).next().html();
                    var itemTitle = $(this).next().next().html();
                    var itemField1 = $(this).next().next().next().html();
                    var itemField2 = $(this).next().next().next().next().html();
                    var itemField3 = $(this).next().next().next().next().next().html();
                    var itemTitle1 = $(this).next().next().next().next().next().next().html();
                    var itemTitle2 = $(this).next().next().next().next().next().next().next().html();
                    var itemTitle3 = $(this).next().next().next().next().next().next().next().next().html();
                    if(itemType == "Note") {
                        $('#item-hover-tbl tr:nth-child(2)').hide();
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    if(itemType == "Account" || itemType == "Decision" || itemType == "Task" || itemType == "Issue") {
                        $('#item-hover-tbl tr:nth-child(3)').hide();
                    }
                    
                    $('.popover-title').html(itemTitle);
                    if(itemTitle1 == 'Problem Statement'){
                        $('.fld-title1').html('Description');
                    }else{
                        $('.fld-title1').html(itemTitle1);
                    }
                    $('.fld-title2').html(itemTitle2);
                    $('.fld-title3').html(itemTitle3);
                    $('.fld-value1').html(itemField1);
                    $('.fld-value2').html(itemField2);
                    $('.fld-value3').html(itemField3);
                    $('#item-call').show()
                      .css('top', e.pageY - 45)
                      .css('left', e.pageX + 30)
                      .appendTo('body');
                    
                }, function() {
                    $('#item-call').hide();
                });
              });
            
        }
        
        function deleteItemViewOne(id,permission){
            if(permission == 'false'){
                return false;
            }
            parseDeleteItemViewOne(id);
        }
        
        function upItemViewOne(id,permission){
            if(permission == 'false'){
                return false;
            }
            parseUpItemViewOne(id);
        }
        
        function downItemViewOne(id,permission){
            if(permission == 'false'){
                return false;
            }
            parseDownItemViewOne(id);
        } 
        
        function parsingModifieData(t){
            parseItemModifiedData(t);
        }  
        
        function setPosition(){            
            var w1 = $('#itemView1 .k-grid-header tr th:nth-child(1)').width();
            var w2 = $('#itemView1 .k-grid-header tr th:nth-child(2)').width();
            var w3 = $('#itemView1 .k-grid-header tr th:nth-child(3)').width();
            wSum = w1+w2+w3+54;
            wSum1 = w1+w2+w3-40;
            $('.duration-bottom').css('margin-left',wSum1+'px');
            $('#durLeft').css('width',wSum+'px');
            $('.duration-top').css('margin-left',wSum+'px');
            $('.duration-top').css('display','block');
            $('.duration-bottom').css('display','block');
        } 
        function setPositionStance(){            
            var w1 = $('#itemView3 .k-grid-header tr th:nth-child(1)').width();
            var w2 = $('#itemView3 .k-grid-header tr th:nth-child(2)').width();
            var w3 = $('#itemView3 .k-grid-header tr th:nth-child(3)').width();
            wSum = w1+w2+w3+5;
            wSum1 = w1+w2+w3-40;
            $('.stance-top').css('margin-left',wSum+'px');
            $('.stance-top').css('display','block');
        } 
        
        function showItemView(num){
                
            $('#itemView'+num).css('display','block');
            if(num == 1){
                $('#items-callout').css('display','block');
                setPosition();
            }else{
                $('#items-callout').css('display','none');
            }
            if(num == 3){
                setPositionStance();
            }
            if(num == 4){
                $('#items-callout1').css('display','block');
            }else{
                $('#items-callout1').css('display','none');
            }
            $('.view-btns').css('backgroundPosition','0 0');
            $('#view'+num).css('backgroundPosition','0 -48px');
            for(i=1;i<5;i++){
                if(i!=num){
                    $('#itemView'+i).css('display','none');    
                }
            }
        }
        
        function showInformationOnItems(){
            $('.items-hover').css('display','block');
        }
        function hideInformationOnItems(){
            $('.items-hover').css('display','none');
        } 
        function showInformationOnItemsCompare(){
            $('.items-hover1').css('display','block');
        }
        function hideInformationOnItemsCompare(){
            $('.items-hover1').css('display','none');
        }
        
        function showModal(header,body,footer){ 
            var scrollPos = $(window).scrollTop();
            scrollPos =  scrollPos-50;
            $('.modal-window').css('top',scrollPos+'px');             
            $('.modal-plan-content').hide();
            $('.modal-footer').hide();
            $('.modal-plan-header').hide();
            $('#'+header).show();
            $('#'+body).show();
            $('#'+footer).show();
            $('body').css('overflow','hidden');
            $('.bg-fade').fadeIn('slow');
            $('.modal-window').slideDown('slow');
        }
        function hideModal(){
           //$('.modal-content').html('');
            //$('.modal-btm').html('');
            $('.modal-window').css('display','none');                
            $('.bg-fade').fadeOut('slow');
            $('body').css('overflow','auto');
            clearValue();
            setTextAreaSize();
        }
        
        // convert string to boolean 
        function convertStringToBoolean(srcValue) {
            
            var destinationValue;
            if(srcValue == 'true') {
                destinationValue = true;
            }
            else if (srcValue == 'True') {
                destinationValue = true;
            }
            else if  (srcValue == true) {
                destinationValue = true;
            }
            else if  (srcValue == '1') {
                destinationValue = true;
            }
            else if  (srcValue == '0') {
                destinationValue = false;
            }
            else if(srcValue == 'false') {
                destinationValue = false;
            }
            else if (srcValue == 'False') {
                destinationValue = false;
            }
            else if  (srcValue == false) {
                destinationValue = false;
            }
            return destinationValue;
        } 
        
        function validateAddNote(){
            var noteSubjectEntered = $('#noteSubject').val();
            if(noteSubjectEntered == null || noteSubjectEntered == ''){
                alert('Please enter the subject');
                return false;
            }
            addNoteItem($('#noteSubject').val(),$('#noteBody').val());
            setTextAreaSize();
        }
        $(window).resize(function() {
	      setPosition();
	      setPositionStance();
	    });
    </script>
    <apex:form >
        <apex:actionFunction name="selectPlan" action="{!planData}" oncomplete="getChatterFeed();planItemDataRemote(eleId)" reRender="PlanHeader,addnotePanel,editMode,viewPlanTab,chatterFeed" >
            <apex:param name="planId" Id="planId" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="getChatterFeed" action="{!chatterFeedMethod}" reRender="chatterPanel" />
    </apex:form>   
</apex:component>