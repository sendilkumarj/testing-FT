<apex:component controller="RelatedList">
    <apex:attribute name="objType" description="This is used to get the type of object." type="String" required="true" assignTo="{!objTypeLabel}"/>
    <apex:attribute name="recId" description="This is used to get the related object parent record Id." type="Id" required="true" assignTo="{!recordId}"/>
    <apex:attribute name="recName" description="This is used to get name of the object." type="String" />
    <c:CommonLibraries userLocaleSidKey="{!userLocaleSidKey}" /> 
    <apex:stylesheet value="{!$Page.OverrideStyles}" />
    <apex:stylesheet value="{!$Page.CommonStyles}" />
    <style>
        a.objectHelp:link {text-decoration:none;}
        a.objectHelp:visited {text-decoration:none;}
        a.objectHelp:hover {text-decoration:underline;}
        .tableRowColor td{
            border-bottom: 1px solid #ececec !important;
        }
        .tableScroll{
            //overflow-y: scroll;
            height: 250px;
            width: 100%;
            clear: both;
        }
        #indicatorDropDownComm{
		    min-height:100px;
		    width: 180px;
		    border: 1px solid #ccc;
		    z-index: 999;
		    margin: 25px 0px 0px 142px;
		    position: absolute;
		    background:#f6f6f6;
		}
        .body{
            overflow:hidden;
        }
        .k-state-selected, .k-state-selected:link, .k-list > .k-state-selected, .k-list > .k-state-focused, .k-list > .k-state-highlight, .k-panel > .k-state-selected, .k-button:active, .k-ghost-splitbar-vertical, .k-ghost-splitbar-horizontal {
            background-color: #999 !important;
            border-color: #999 !important;
        }
        .indicatorPlan{
		    width:15px;
		    height:15px;
		    background: url("{!URLFOR($Resource.Images,'kanbanImages/indicators-60x15.png')}") 0px 0px no-repeat;
		    margin: auto;
		}
		#notGiven, #good, #minorChallenges, #critical, #completed, #completedProb{
		    width:100%;
		    min-height:25px;
		    background:#f6f6f6;
		}
		.floatLeft {
			float: left;
		}
		.toClear {
			clear: both;
		}
		.topBorder {
			border-top: 1px solid #b8b8b8;
		}
		.notGiven{
		   margin : 6px 0px 3px 5px;
		   color : #dedbd7;
		}
		.good{
			margin : 6px 0px 3px 5px;
		    color : #009940;
		}
		.minorChallenges{
			margin : 6px 0px 3px 5px;
		    color : #ffca30;
		}
		.critical{
			margin : 6px 0px 3px 5px;
		    color : #ff0000;
		}
		.completed{
			margin : 6px 0px 3px 5px;
		    color : #0099ff;
		}
		.completedProb{
			margin : 6px 0px 3px 5px;
		    color : #993399;
		}
		.indicatorLable{
		    padding: 6px 0px 0px 5px;
		}
    </style>
    <script>
        function callQCD(){
            window.top.location.href = "/apex/DecisionQuickCreate?addAsRealtion=true&objType={!objType}&recId={!recId}";
        }
        
        function callAddItems(){
            window.top.location.href = "/apex/AddItemcrmobjects?Id={!recId}&recName={!recName}&objType={!objType}&crmObj=true";
        }
    </script>
     <!-- Table to display the related list -->
    <apex:pageBlock >
        <apex:facet name="header">
          <div style="padding-top:10px;padding-bottom:5px;padding-left:11px; float:left;" >
              <img  src="{!URLFOR($Resource.Images, '/common/Fingertip_icon_32x32.png')}" height="16px" width="16px" />
              <h3 class="mainTitle" style="font-size: 1.3em;">&nbsp;Decisions and Plans</h3>
              <button type="button" style="margin-left:138px;" onclick="callAddItems();">Add Item</button>
              <button type="button" onclick="callQCD();">New Decision</button>
          </div>
          <!--<div style="float:right; padding: 8px 10px 0px 0px;">
                <a href="/apex/EmailThankYouForm" class="objectHelp" style="color:#015ba7;padding-right: 8px;" target="_blank">Fingertip object relations help</a><img src="/s.gif" alt="Fingertip Help (New Window)" class="helpIcon" title="Fingertip Help (New Window)"> </img>
          </div>--> 
       </apex:facet>
       <div class = "popover-sf border-pink" id = "item-call">
            <div class = "popover-sf-arrow"></div>
            <div class = "popover-title border-btm-pink" id="callout-border">
            </div>
            <table cellspacing = "0" cellpadding = "0" class = "page-block-tbl" id = "item-hover-tbl">
                <tr>
                    <td class = "cell-left gen-block-cell fld-title1 left-width popover-label"></td>
                    <td class = "gen-block-cell fld-value1"></td>
                </tr>
                <tr>
                    <td class = "cell-left gen-block-cell fld-title2 left-width popover-label"></td>
                    <td class = "gen-block-cell fld-value2"></td>
                </tr>
            </table>
        </div>
        
        <div id="indicatorDropDownComm" class=" floatRight"  style="display:none;">
            <div id="notGiven" class="toClear " onclick="selectIndicator(this.id)">
                <div class="floatLeft notGiven icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Not Given</div>
            </div>
            <div id="good" class="toClear topBorder" onclick="selectIndicator(this.id)">
                <div class="floatLeft good icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Good</div>
                </div>
            <div id="minorChallenges" class="toClear topBorder" onclick="selectIndicator(this.id)">
                <div class="floatLeft minorChallenges icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Minor Challenges</div>
                </div>
            <div id="critical" class="toClear topBorder" onclick="selectIndicator(this.id)">
                <div class="floatLeft critical icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Critical</div>
            </div>
            <div id="completed" class="toClear topBorder" onclick="selectIndicator(this.id)">
                <div class="floatLeft completed icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Completed</div>
            </div>
            <div id="completedProb" class="toClear topBorder" onclick="selectIndicator(this.id)">
                <div class="floatLeft completedProb icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Completed with Problems</div>
            </div>
        </div>
        
         <div id="relationGrid" class="tableScroll"></div>
         <script>
              $(document).ready(function () {
                  KendoRelations($.parseJSON('{!JSENCODE(jsonRelation)}'));
              });
              
              function KendoRelations(gridData) {
                  $("#relationGrid").kendoGrid({
                     dataSource:{
                         data:gridData,
                         schema: {
                             model: {
                                name: "recordId",
                                fields: {
                                    objectIcon : { type: "string" },
                                    relation : { type: "string" },
                                    strength : { type: "string" },
                                    phase : { type: "string" },
                                    recordId : { type: "string" },
                                    recordName : { type: "string" },
                                    objectName : { type: "string" },
                                    progressValue : { type: "string" },
                                    notes : { type: "string" }
                                }
                            }
                         },
                         pageSize: 5
                     },
                     sortable: true,
                     columns: [ 
                         {
                             field: "recordName",
                             title: "Object Name",  
                             template:  '<div style="text-align:left;margin-top:5px;"> <a href=/#:recordId# target="_blank" onmouseout=hideCallout() onmouseover=\'showItemDetails(event,"#:objectName#","#:recordName#","#:popupField1#","#:popupField2#","#:popupFieldName1#","#:popupFieldName2#")\'; ><img src=/#:objectIcon# class="ft-left"></img> <span style="margin-left:2px"> #=recordName# </span></a></div>',
                             width: 80,
                             sortable:true
                         }, 
                         {
                             field: "progressValue",
                             title: "Progress",
                             width: 20,
                             template : "#=progressColor(e,progressValue,objectName)#",
                             sortable:true
                         } , 
                         {
                             field: "relation",
                             title: "Relation",
                             width: 20,
                             sortable:true
                         } 
                         ,
                         {
                             field: "strength",
                             title: "Strength", 
                             width: 20,
                             sortable:true
                         },
                         {
                             field: "phase",
                             title: "Phase", 
                             width: 20,
                             sortable:true
                         },
                         {
                             field: "notes",
                             title: "Notes", 
                             width: 50,
                             sortable:true
                         }
                    ],
                    pageable: true
                 });
              }
              
              // Js function to display progress indicator color dynamically.
              function progressColor(event,val,objName){
              	if(objName == 'Decision'){
	              	var bgColor;
	              	if(val == 'Not Given' || val == ''){
	              		bgColor = 'dedbd7';
	              	} else if(val == 'Good'){
	              		bgColor = '009940';
	              	} else if(val == 'Minor Challenges'){
	              		bgColor = 'ffca30';
	              	} else if(val == 'Critical'){
	              		bgColor = 'ff0000';
	              	} else if(val == 'Completed'){
	              		bgColor = '0099ff';
	              	} else if(val == 'Completed with Problems'){
	              		bgColor = '993399';
	              	}
	              	return '<div style="position:relative;width: 15px;margin-left: 30px;"><div class="icon-circle" style="text-align: center;color: #'+bgColor+'" onmouseover=\'showIndicator(event)\' onmouseout=\'hideIndicator()\' ></div></div>';
	             } else {
	             	return '';
	             }
              }
              
              function hideIndicator(){
              	document.getElementById("indicatorDropDownComm").style.display="none";
              }
              
              function showIndicator(e){
                  if(document.getElementById("indicatorDropDownComm").style.display=="none"){
                  	if( $(window).height() + 15 > ( e.clientY + 160 +  $(document).scrollTop())){
                        $('#indicatorDropDownComm').show()
                            .css('position','absolute')
                            .css('z-index','9000')
                            .css('top', e.clientY - 25 + $(document).scrollTop())
                            .css('left', e.clientX - 135)
                            .css('bottom', 'auto')
                     } else {
                     	$('#indicatorDropDownComm').show()
	                            .css('position','absolute')
	                            .css('z-index','9000')  
	                            .css('bottom',  $(window).height() - e.clientY ) 
	                            .css('left', e.clientX - 135)
	                            .css('top', 'auto')
                     }
                   }
              }
              
              function hideCallout(){
                  document.getElementById('item-call').style.display = 'none';
              }
              
              function showItemDetails(e,itemType,Name,popupField1,popupField2,popupFieldName1,popupFieldName2){
                $('#item-hover-tbl tr:nth-child(2)').show();
                $('#item-hover-tbl tr:nth-child(3)').show();
                var itemType = itemType; //$(this).next().html();
                var itemTitle = Name;//$(this).next().next().html();
                var itemField1 = popupField1;//$(this).next().next().next().html();
                var itemField2 = popupField2; //$(this).next().next().next().next().html();
                var itemTitle1 = popupFieldName1;//$(this).next().next().next().next().next().next().html();
                var itemTitle2 = popupFieldName2;//$(this).next().next().next().next().next().next().next().html();
                if(itemType == "Note") {
                    $('#item-hover-tbl tr:nth-child(2)').hide();
                    $('#item-hover-tbl tr:nth-child(3)').hide();
                }
                if(itemType == "Decision"){
                  $('#item-call').css('border-top-color','#333333');
                  $('#callout-border').css('border-bottom-color','#333333');
                } else if(itemType == "Plan") {
                      $('#item-call').css('border-top-color','#993399');
                      $('#callout-border').css('border-bottom-color','#993399');
                }
                $('.popover-title').html(itemTitle);
                $('.fld-title1').html(itemTitle1);
                $('.fld-title2').html(itemTitle2); 
                $('.fld-value1').html(itemField1);
                $('.fld-value2').html(itemField2);
                $('#item-call').show()
                  .css('top', e.clientY - 45 + $(document).scrollTop())
                  .css('left', e.clientX + 30)
                  .appendTo('body');
              }
         </script>
    </apex:pageBlock>
</apex:component>