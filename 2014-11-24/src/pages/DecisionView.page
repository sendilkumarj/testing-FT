<apex:page id="pg"  standardController="Decision__c" docType="html-5.0" extensions="DecisionView,NetworkView" title="Fingertip" tabStyle="Decision__c">
    <apex:includeScript value="{!$Page.CommonScripts}" />  
    <script type='text/javascript' src="{!URLFOR($Resource.networkjs,'/js/jquery.history.js')}" > </script>
    <div class = "preloader"></div>
    <div class = "bg-fade"></div>
    <script>
    //FT Favicon
       (function() {
        var link = document.createElement('link');
        link.type = 'image/x-icon';
        link.rel = 'shortcut icon';
        link.href = '{!$Resource.Favicon}';
        document.getElementsByTagName('head')[0].appendChild(link);
         $(document).prop('title', 'Decision: '+'{!Decision__c.title__c}');
    }());
       showLoader(); 
  </script>      
   <script type='text/javascript' src="{!$Resource.fullscreen}" > </script>
     <c:CommonLibraries userLocaleSidKey="{!userLocaleSidKey}" /> 
    <script>
       kendo.culture('{!userLocaleSidKey}'); // set kendo locale for  current user.
       var dateFormat = '{0:'+kendo.culture().calendar.patterns.d+'}';  // Hold dateformat for kendo grids
       var dateTimeFormat =  '{0:'+kendo.culture().calendar.patterns.g+'}'; // Hold datetime format for kedo grids
     </script>
    <apex:outputPanel id="sourceId"></apex:outputPanel> 
<html>
    <head>
    <script>
        var decisionRTFUpdateComplete  = false; 
        var decisonSaveStatus;
        var roleAcceptanceStatusGolbal = '{!socialInput.Role_Acceptance_Status__c}';
        function formatNumber(number,element){
            var formattednumber = kendo.toString(number, "n");
           $("#"+element).html( formattednumber );
        }
        function displayUploadImageDiv(){
            $('.update-image').css('display','block');
        }
        function hideUploadImageDiv(){
            $('.update-image').css('display','none');
        }
        
        function displayUpdateImageDiv(){
            $('.change-image').css('display','block');
        }
        
        function hideUpdateImageDiv(){ 
            $('.change-image').css('display','none'); 
        } 
        
    </script>
    <!-- <meta http-equiv="Content-Script-Type" content="text/javascript" /> -->
    
        <!--------- FT Stylesheets ----------->
        <apex:stylesheet value="{!$Page.CommonStyles}" />
        <apex:stylesheet value="{!$Page.DecisionStyles}" /> 
        <apex:stylesheet value="{!$Page.OverrideStyles}" />
        
        <!--------- jQueryUI ----------->     
        <apex:includeScript value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.min.js')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.css')}"/>   
        <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-ui-1.10.3.js')}"/> 
         <c:WalkMeAndSupportButton /> 
        
        
      <script src="http://cdn.kendostatic.com/2014.2.716/js/kendo.all.min.js"></script>
        
          
        <!--  styles used to revert back kendo UI table styles for tabs -->
        <style type="text/css">
                #decisionDate .k-header, #executionDate .k-header, #evaluationDate .k-header{
                    margin-top: 3px;
                }
                .k-dropdown .k-input{
                    background: #fff;
                }
        
                 .k-header {
                    margin-top: 10px;
                    border-color:#fff ;
                }
               #tabs .k-content{
                font-weight: normal !important;
                color: #525252 !important;
                background: #fff !important;
                background-color: #fff !important;
             }
              .k-tabstrip .k-content{
                /* margin: 0em -.1em -.1em -.1em !important; */
                padding: 2em 1em !important;
                /* border-color: #d4d4d4 !important; */
                border-color: #a6afbe !important;
                min-height: 260px; 
                margin-left:-2px;
             } 
            .k-header{
                background: #fff ;
                background-color: #fff ; 
                /* background: #f3f3f4 !important;
                background-color: #f3f3f4 !important; 
                background: #d5d5d5 !important;
                background-color: #d5d5d5 !important; */
             }
             #tabstask .k-tabstrip-items .k-item, #newtabstask .k-tabstrip-items .k-item{
                margin-left: -2px;
                margin-right: -2px;
             }
              
             #gridTaskEvent .k-header{
                 margin-top:0px 
               
             }
             .k-tabstrip-items .k-item{
                margin-left: -2px;
                margin-right: -2px;
             }
             .k-tabstrip .k-tabstrip-items{
                padding: 0.3em 0 0 0 !important;
                /* border-color: #d4d4d4 !important; */
                /* border-color: #a6afbe !important; */
                /* border-color: #263248 !important; */
                border-color: #DFDFDF !important;
             }
             .k-tabstrip .k-link {
                /* border-color: #d4d4d4 !important; */
                /* border-color: #a6afbe !important; */
                /* border-color: #263248 !important; */
                border-color: #DFDFDF !important;
                font-weight: normal !important;
             }
            .k-tabstrip .k-state-active{
                /* background:#3399ff !important;
                background-color:#3399ff !important; */
                background:#fff !important;
                background-color:#fff !important;
                /* border-color: #d4d4d4 !important; */
                /* border-color: #a6afbe !important; */
                border-color: #ccc !important;
             }
             #tabs .k-state-hover{
                /* background: #66B3FF !important;
                background-color: #66B3FF !important; */
                /* background: #D8D8D8 !important;
                background-color: #D8D8D8 !important; */
                background: #f6f6f6 !important;
                background-color: #f6f6f6 !important;
                text-decoration: none !important;
                /* border-color: #d4d4d4 !important; */
                border-color: #DFDFDF !important;
                /* color: #919191 !important; */
                color: #333 ;
             }
             #tabs .k-state-default{
                /* border-color: #DFDFDF !important; */
             }
              #tabs .k-tabstrip-items .k-link:link{ 
                /* color: #C2C2C2 !important; */
                color: #333 ;
                background-color: #f6f6f6 !important;
                height: 10px ;
                padding: 1.0em 1.5em 1.3em 1.5em !important;
              }
              #tabs ul .k-state-active .k-link:link{
                 background: #fff !important;
                 background-color: #fff !important;
               /*  border-bottom: 1px solid #fff !important; */
              }
             #tabs .k-link:hover{
                /* color: #fff !important; */
                /* color: #515967 !important; */
                /* color: #263248 !important; */
                /* color: #919191 !important; */
                color: #333 ;
                /* background: #66B3FF !important;
                background-color: #66B3FF !important; */
                /* background: #b6bdca !important;
                background-color: #b6bdca !important; */
                background: #f0f0f0 !important;
                background-color: #f0f0f0 !important;
                text-decoration: none !important;
                /* border-color: #d4d4d4 !important; */
                border-color: #DFDFDF !important;
             }
             #tabs .k-link:active  {
                /* border-color: #d4d4d4 !important; */
                /* border-color: #a6afbe !important; */
                border-color: #DFDFDF !important;
                
             }
             #tabs .k-state-active>.k-link{
                /* color: #fff !important; */
                /* color: #515967 !important; */
                /* color: #8D8D8D !important;*/
                color: #333 ;
                background-color: #fff !important;
                border-bottom: 0px solid #fff !important;
             }
             #tabs .k-state-active .k-link:hover{
                /* background:#3399ff !important;
                background-color:#3399ff !important; */
                background:#fff !important;
                background-color:#fff !important;
             }
             .k-pager-wrap .k-dropdown {
                width: 4.4em !important;
            }
             .k-content .k-header{
                background: #eee !important;
                background-color: #eee !important;
                border-color:#dadada !important;
                color: #222 !important;
             }
            
             #tabs .k-content .k-link:link{
               /*  color: #222 !important; 
                font-weight: bold !important;
                background-color: #eee !important;
                display: block;
                min-height: 15px ;
                line-height: 13px ;
                margin: -0.5em -0.6em -0.4em -0.6em !important; 
                padding: .5em .6em .4em .6em !important;
                height: auto ;*/
             }
             
             #tabs .k-content .k-link:hover, .k-grid-header .k-header .k-link:hover{
                text-decoration: underline !important;
                background: #999 !important;
                background-color: #999 !important;
                color: #222 !important;
             }
                #tabs .k-content .k-pager-wrap>.k-link {
                /*margin: 0 1px ;
                padding: 0 3px !important;
                height: 22px ;
                line-height: 22px ;
                border-radius: 13px;
                cursor: pointer;*/
             }
              .k-pager-numbers .k-link:link{
                /*margin: 0 1px 0 0 !important;
                vertical-align: top !important;
                color: #dfdfdf !important;*/
                
              }
              .k-pager-numbers .k-link{
                /*color:#fff !important;*/
              }
              .k-grid-filter {
                padding: .3em .2em .4em !important;
              }
              .k-list-container li{
                margin-left:0px !important;
              }
              #gridTaskEvent .ui-widget {
                /*font-family: Arial,Helvetica,sans-serif !important;*/
                color: #222 !important;
              }
              #topicMultiSelectTd .k-floatwrap{
                background: #fff;
              }
              #topicMultiSelectTd .k-header{
                margin-top: -5px;
              }
              
              .modal-window-activitywarning {
                /*position : fixed !important;*/
              }
              #timingAndHistoryDiv .k-widget .k-state-focused
                {
                  box-shadow: none;
                }
                   .ui-tabs-nav .ui-state-default{
                    margin-right: -1px !important;
                    
               }
                .ui-tabs .ui-tabs-nav li{
                    top: 2px !important;
                    border-bottom: 1px solid #ccc !important;
                  }
                  .ui-tabs .ui-tabs-nav .ui-state-active li{
                    margin-right: -1px !important;
                    border-bottom-color: #fff !important; 
               }
               .ui-tabs .ui-tabs-nav li a{
                    border-bottom-width: 1px !important;
                    border-width: 0px;
               }
               
               .greyColor {
                    color : grey;
               }
               .blackColor {
                    color : black;
               }
               .k-popup .k-list-container, .k-popup{
                    border-color: rgb(204, 204, 204) !important;
                  }
                .k-dropdown-wrap .k-state-hover:hover{
                  background-color: #a99f9a !important;
                  border-color: #a99f9a !important;
                }
                #tabstask .ui-tabs-nav{
                  padding: 0px 0px 1px 0px !important;
                }
                .expandCollapseDetails{
                    background: url("{!URLFOR($Resource.Images, 'common/image-expandCollapse-black-sprite-8x16.png')}") 0 -8px no-repeat;
                    height : 8px;
                    width : 8px;
                    margin-top : 3px;
                    margin-right : 5px;
                }
                .complexity-label-div {
                    float:left;
                    margin-left: 47px;
                    margin-top: 3px;
                    font-weight:bold;
                    font-size:11px;
                    color:#4A4A56;
                }
                .skill-level-div {
                    float: left;
                    margin-right: 23px;
                    margin-top: 3px;
                    font-weight: bold;
                    font-size: 11px;
                    color: #4A4A56;
                }
                .estimated-hours {
                    float: left;
                    margin-left: 18px;
                    margin-top: 3px;
                    font-weight: bold;
                    font-size: 11px;
                    color: #4A4A56;
                }
                .actual-hours {
                    float: left;
                    margin-right: 18px;
                    margin-top: 3px;
                    font-weight: bold;
                    font-size: 11px;
                    color: #4A4A56;
                }
                .newtaskpopup-Name {
                    float: left;
                    margin-left: 72px;
                    margin-top: 13px;
                    font-weight: bold;
                    font-size: 11px;
                    color: #4A4A56;
                }
                .tasktabs-block{
                    height: 27em !important;
                }
                .section-head-matrix{
                 color: #2e2e2e;
                 background-color: #b8b8b8;
                 margin-bottom: 33px;
                 width: 100%;
                 height: 1px;
                 overflow: hidden; 
                }
                .section-matrix{
                   /*margin-left: 5px;*/
                }
                .icon-grid
                {
                 font-size:1.4em;
                 margin: 3px 0px;
                }
                 .k-state-selected, .k-state-selected:link, .k-list > .k-state-selected, .k-list > .k-state-focused, .k-list > .k-state-highlight, .k-panel > .k-state-selected, .k-button:active, .k-ghost-splitbar-vertical, .k-ghost-splitbar-horizontal {
                        background-color: #999 !important;
                        border-color: #999 !important;
                }
                .k-filter-menu .k-button{
                        font-weight:normal !important;
                }  
                .requestfullscreen, .requestfullscreen:hover{
                    /*top: -55px;
                    right: -2px;
                    float: right;
                    position: absolute;*/
                    text-decoration:none;
                    float:right;
                     margin: 10px 5px 5px 5px;
                }
                .exitfullscreen, .exitfullscreen:hover{
                    /*display: inline;
                     float: right; 
                    right: 5px;
                    top: 6px;
                    position: absolute;*/
                    text-decoration:none;
                    float:right;
                    margin: 10px 5px 5px 5px;
                }
                .requestfullscreen span, .exitfullscreen span{
                    background: #ccc;
                    padding: 5px;
                    margin: 5px 0px 5px 5px;
                }
                
                #fullscreen{
                 position:relative; 
                 background-color:white;
                } 
                #indicatorComm{
                 color:#dedbd7 !important;
                }
                #topicsSelection .k-header{
                  background:none;
                } 
        </style>
        <script type="text/javascript">
            $(document).ready(   function (){ 
                var params = {};
                window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str,key,value) {
                   params[key] = value;
                });
                var addCol = params.addCol;
                var addRelations = params.addRelations;
                var addNote = params.addNote;
                var addAct = params.addAct;
                var addTask = params.addTask;
                var addApprovals = params.addApprovals;
                var selectedtab = 0;
                var index = 0;
                var activeTab = $("#feedTab");//$( "#tabs" ).tabs({ active: 0 }); // changed to kendo tab
               
                if(window.location.href.indexOf("#") == -1) {
                    if(addCol == 'true'){
                       activeTab =  $("#peopleTab");//$( "#tabs" ).tabs({ active: 2 }); // changed to kendo tab
                    }
                    if(addRelations == 'true'){
                        activeTab = $("#relationsTab");//$( "#tabs" ).tabs({ active: 5 });  // changed to kendo tab
                    }
                    if(addNote == 'true'){
                        activeTab = $("#attachmentsTab");//$( "#tabs" ).tabs({ active: 6 }); // changed to kendo tab
                    }
                    if(addTask == 'true'){
                        activeTab = $("#activityTab");//$( "#tabs" ).tabs({ active: 3 });    // changed to kendo tab
                    }
                    if(addAct == 'true'){
                         activeTab = $("#activityTab");//$( "#tabs" ).tabs({ active: 3 });   // changed to kendo tab
                    }
                } 
                if(window.location.href.indexOf("#") != -1){
                    try{
                        var hrefSelected=window.location.hash;
                        var tabSelected = window.location.hash;
                        if(tabSelected == '#contributionTab_act'){
                            DecisionView.contributionTab('{!decision.Id}',function(result, event)
                              {
                                  if (event.status)
                                  {
                                    var newContribution = removeQuotes(result);
                                      kendoContribution(newContribution);
                                  }
                              }, {escape:false});
                        }
                        activeTab=$(tabSelected.substring(0,tabSelected.indexOf("_")));
                    }catch(e){
                        activeTab=$("#feedTab");
                    }
                }
                $("#tabs").kendoTabStrip().data("kendoTabStrip").activateTab(activeTab); // changed to kendo tab
                
              $('#tabs').css('display','block');
                changeFooterText();
                dragModal();
                dragModalApprove();
                dragModalUpload();
                dragModalRelation();
                dragModaldecisionWarning();
                dragModaldecisionActivitiesWarning();
                dragModaldecisionVetoRejectWarning();
            });
            
            function isNumber(event){
                var event = event || window.event //For IE
                var key = event.target;
                var key = window.event ? event.keyCode : event.which;
                if (event.keyCode == 8 || event.keyCode == 46 || event.keyCode == 37 || event.keyCode == 39) {
                    return true;
                }
                else if ( key < 48 || key > 57 ) {
                    return false;
                }
                else return true;
            }
        </script>  
    </head>
    <!-- ****** Very important line wrt to RTF fields! Don't include this in reRender. At any point of time this line should not get refreshed ****** -->     
    <input type="hidden" id="rtfEditor" value="" />     
    <input type="hidden" id="userRoleId" value="{! SUBSTITUTE(socialInput.Role__c,' ',', ') }"> </input> 
    <input type="hidden" id="userVeto" value="{!socialInput.Veto_Rights__c}" > </input>  
    <input type="hidden" id="userBackup" value="{!socialInput.Backup_for_Accountable__c}" > </input>   
    <input type="hidden" id="FT_walkme_loggedin_user_has_open_tasks" value="{!walkmeTaskVar}" ></input>
    <!-- ******************** --> 
    
    <!-- Component to call task popup -->
    <apex:panelGroup id="TaskpopupComponantId">  
        <apex:panelGroup rendered="{!showTaskPopup}" id="panelGroupId">
            <c:TaskViewPopup recId="{!taskId}" isEditable="{!taskEditable}" typeOfMode="{!modeType}"  chatDisable="true"  id="taskviewComponent"/> 
        </apex:panelGroup>
    </apex:panelGroup>
    <apex:panelGroup id="NewTaskpopupComponantId">
        <apex:panelGroup rendered="{!newShowTaskPopup}" id="NewpanelGroupId"> 
            <c:NewTaskViewPopup recId="{!decision.Id}" id="NewtaskviewComponent"/>
        </apex:panelGroup> 
    </apex:panelGroup>
    <body>
         <!-- New Decision Lifecycle begin  --> 
            <div id="mainFrame">
                <div id="sideDivs">
                <div id="profileDiv">
                    <div id="profilePic" class="generalStyle {! if( len(imageURLonDecision)>0,'','profilePic')}">
                       <div class  = "user-image" onmouseover="displayUploadImageDiv()" onmouseout="hideUploadImageDiv()" >
                            <apex:outputPanel rendered="{!if(len(imageURLonDecision)>0,true,false)}" >
                                <apex:image onmouseover="displayUpdateImageDiv()" onmouseout="hideUpdateImageDiv()" height="128px" width="128px" id="example" styleClass="imageUrl" url="{!imageURLonDecision}" />
                            </apex:outputPanel>
                            <div id="changeImageId">
                                <div onmouseover="displayUpdateImageDiv()" onmouseout="hideUpdateImageDiv()" class="change-image">
                                    <a class = "image-update-text" onmouseover="displayUpdateImageDiv()" onmouseout="hideUpdateImageDiv()" href="#update" onclick="showModalUpdate()">Change</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="#delete"  onclick="deleteDecisionImage();">Delete</a>
                                </div>  
                            </div>
                            <div id="updateImageId">
                                 <div  class="update-image"><a href="#upload"  class = "image-update-text" onclick = "showModalUpload()">Update Image</a></div> 
                            </div>
                        </div> 
                   </div>
                </div>
                <div id="commandCenter">
                    <div id="panelCenter" class="floatLeft generalStyle">
                                <div id="overViewTab" class="min-tab " onclick="showCurrentTab('overViewTab','lifeCycleOverView');">&nbsp;<div class="icon-cog subTabFontIcon" onmouseover="iconOver(this);" onmouseout="iconOut(this)" >&nbsp;<div class="icon-exclamation-circle" id="glyphOverview">&nbsp;</div></div></div>
                                <div id="socialTab"   class="min-tab " onclick="showCurrentTab('socialTab','lifeCycleSocial');">&nbsp;<div class="icon-happy subTabFontIcon" onmouseover="iconOver(this);" onmouseout="iconOut(this)">&nbsp;<div class="icon-exclamation-circle" id="glyphSocial">&nbsp;</div></div></div>
                                <div id="timingTab"  class="min-tab " onclick="showCurrentTab('timingTab','lifeCycleTiming');">&nbsp;<div class="icon-clock subTabFontIcon" onmouseover="iconOver(this);" onmouseout="iconOut(this)">&nbsp;<div class="icon-exclamation-circle" id="glyphTiming">&nbsp;</div></div></div>
                                <div id="classificationTab"  class="min-tab " onclick="showCurrentTab('classificationTab','lifeCycleClassification');">&nbsp;<div class="icon-cabinet subTabFontIcon" onmouseover="iconOver(this);" onmouseout="iconOut(this)">&nbsp;</div>  </div>
                                <div id="actionsTab"  class="min-tab " onclick="showCurrentTab('actionsTab','lifeCycleActions');">&nbsp; <div class="icon-pencil subTabFontIcon" onmouseover="iconOver(this);" onmouseout="iconOut(this)">&nbsp;</div></div>
                                <div id="evaluationTab"    class="min-tab " onclick="showCurrentTab('evaluationTab','lifeCycleEvaluations');">&nbsp;<div class="icon-stats2 subTabFontIcon" onmouseover="iconOver(this);" onmouseout="iconOut(this)">&nbsp;<div class="icon-exclamation-circle" id="glyphEvaluation">&nbsp;</div></div></div>
                            </div>
                            <script>
                            var selectedSubTab = 'overViewTab';
                            showCurrentTab('overViewTab','lifeCycleOverView');
                                function showCurrentTab(miniTabId,panelId){
                                selectedSubTab = miniTabId;
                                    var idArray = ["overViewTab","socialTab","timingTab", "actionsTab", "classificationTab", "evaluationTab"];
                                    var commandCenterPanel = ["lifeCycleOverView","lifeCycleSocial","lifeCycleTiming","lifeCycleActions","lifeCycleClassification","lifeCycleEvaluations"];
                                    for(i=0;i<idArray.length;i++){
                                        if(idArray[i] != miniTabId){
                                            $('#'+commandCenterPanel[i]).css('display','none');
                                            $('#'+idArray[i]).css('backgroundPosition','0px 0px').find('.subTabFontIcon').css('color','#b4b4b4');
                                            $('#'+idArray[i]).hover(function(){$(this).css('backgroundPosition','-37px 0px').find('.subTabFontIcon').css('color','#262626');});
                                            $('#'+idArray[i]).mouseout(function(){$(this).css('backgroundPosition','0px 0px').find('.subTabFontIcon').css('color','#b4b4b4');});
                                            //$('#'+idArray[i]).css('backgroundPosition','0px 0px');
                                             
                                        }   
                                    }
                                    $('#'+panelId).css('display','block');
                                    $('#'+miniTabId).css('backgroundPosition','-74px 0px').find('.subTabFontIcon').css('color','#ebeae7');
                                    $('#'+miniTabId).hover(function(){$(this).css('backgroundPosition','-74px 0px').find('.subTabFontIcon').css('color','#ebeae7');});
                                    $('#'+miniTabId).mouseout(function(){$(this).css('backgroundPosition','-74px 0px').find('.subTabFontIcon').css('color','#ebeae7');});
                                }
                                function iconOver(tab){
                                if($(tab).parent().attr("id") != selectedSubTab){
                                    $(tab).css('color','#262626');
                                    }
                                }
                                function iconOut(tab){
                                    $(tab).css('color','#b4b4b4');
                                }
                            </script>
                             
                            <div id="panelRight" class="floatLeft generalStyle">
                                <div id="lifeCycleOverView">
                                    <div id="commandCentreTop" class="">
                                        <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold"> COMMAND CENTER </div>
                                        <div id="indicatorDropDownComm" class=" floatRight"  style="display:none;">
                                            <div id="notGiven" class="toClear " onclick="selectIndicator(this.id)">
                                                <div class="floatLeft notGiven icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Not Given</div>
                                            </div>
                                            <div id="good" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft good icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Good</div>
                                                </div>
                                            <div id="minorChallenges" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft minorChallenges icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Minor Challenges</div>
                                                </div>
                                            <div id="critical" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft critical icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Critical</div>
                                            </div>
                                            <div id="completed" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft completed icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Completed</div>
                                            </div>
                                            <div id="completedProb" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft completedProb icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Completed with Problems</div>
                                            </div>
                                        </div>
                                         <div id="indicatorDropDownCommDisplay" class=" floatRight"  style="display:none;">
                                            <div id="notGiven" class="toClear " onclick="selectIndicator(this.id)">
                                                <div class="floatLeft notGiven icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Not Given</div>
                                            </div>
                                            <div id="good" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft good icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Good</div>
                                                </div>
                                            <div id="minorChallenges" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft minorChallenges icon-circle"> </div> <div class="floatLeft fontBold indicatorLable">Minor Challenges</div>
                                                </div>
                                            <div id="critical" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft critical icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Critical</div>
                                            </div>
                                            <div id="completed" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft completed icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Completed</div>
                                            </div>
                                            <div id="completedProb" class="toClear topBorder" onclick="selectIndicator(this.id)">
                                                <div class="floatLeft completedProb icon-circle"> </div><div class="floatLeft fontBold indicatorLable">Completed with Problems</div>
                                            </div>
                                        </div>
                                        <div id="indicatorComm" class="icon-circle floatRight" onclick="openIndicator()" onmouseover="showIndicator()" onmouseout="hideIndicator()">&nbsp;</div>
                                        <div id="lockIcon" class="floatLeft"><span id="privateImgSpan0"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                    </div>
                                    <div id="commandCentreMiddle" class="topBorder">
                                        <div class="middleHeight"> 
                                            <div class="floatLeft middleHeight " id="statusColor">&nbsp;</div>
                                            <div class="floatLeft middleHeight overCellWidth" id="statusGroup">
                                                <div class="commandCenterLabelFont paddingTextSetting1 ">Status</div>
                                                <div class="commandCenterValuesFont">
                                                    <span class="floatLeft stanceApproveCell" id="status-block"> </span>
                                                    <div class="floatLeft statuApproveCell" id="statusApprovalIcon" style="display:none;">
                                                        <img class="" src="{!URLFOR($Resource.Images, '/home/image-decisionApproval-51x28.png')}" title="Approve/Reject" style="cursor: pointer;" onclick="decisionApprovals('{!JSENCODE(decision.Id)}',$.parseJSON('{!JSENCODE(approvalJSON)}'));"/>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="floatLeft leftBorder middleHeight overCellWidth" id="dueDateGroup">
                                                <div class="commandCenterLabelFont paddingTextSetting1 ">Due Date</div> 
                                                <div class="commandCenterValuesFont"><apex:outputField id="commandCenterDueDate"  value="{!decision.Due_Date__c}" />  </div>
                                            </div>
                                        </div>
                                        <div class="topBorder middleHeight"> 
                                            <div class="floatLeft middleHeight" id="mystanceColor">&nbsp;</div>
                                            <div class="floatLeft middleHeight overCellWidth" id="mystanceGroup">
                                                <div class="commandCenterLabelFont mystanceTitleText">My Stance</div>
                                                <div class="commandCenterValuesFont">
                                                    <span id="stance-block" class="actionsDirect floatLeft stanceApproveCell"> </span>
                                                    <div class="floatLeft statuApproveCell" id="myStanceApprovalIcon" style="display:none;">
                                                        <img class="" src="{!URLFOR($Resource.Images, '/home/image-personalStance-51x28.png')}" title="Support/Oppose" onclick="decisionApprovals('{!JSENCODE(decision.Id)}',$.parseJSON('{!JSENCODE(approvalJSON)}'));" style="cursor: pointer;"/>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="floatLeft leftBorder middleHeight " id="myRoleGroup">
                                                <div class="commandCenterLabelFont " id="myRole">My Role</div>
                                                <div id="rolesIcon" class="actionsDirect">
                                                    <div class = "raci-block ft-left fontBold" id = "a-block">A</div>
                                                    <div class = "raci-block ft-left fontBold" id = "r-block">R</div>
                                                    <div class = "raci-block ft-left fontBold" id = "c-block">C</div>
                                                    <div class = "raci-block ft-left fontBold" id = "i-block">I</div>
                                                    <div class="ft-left" id="splitLine">&nbsp;</div>
                                                    <!-- b-block and v-block are inside a dive to show hide  with roleApprovalIcon  -->
                                                    <div id="backupVeto" class="ft-left">    
                                                        <div class = "raci-block ft-left fontBold" id = "b-block">B</div>
                                                        <div class = "raci-block ft-left" id = "v-block">V</div>
                                                    </div>                                                     
                                                    <img id="roleApproveIcon" src="{!URLFOR($Resource.Images, '/home/image-roleAccepatnce-51x28.png')}" width="50px" height="30px"> </img>                                              
                                               </div>  
                                            </div>
                                        </div>  
                                    </div>
                                    <div id="commandCentreBottom" class="topBorder bottomHeight">  
                                        <div  class="floatLeft  CCAverageRelevaceDiv">
                                            <div class="commandCenterLabelFont commandCenterAverage ">Average Relevance</div>
                                            <div class="floatLeft CCAverageStarDiv cursorPointer"><div class="avgstar socialdirect" style="background:url('/{!starImage}') {!starImagePosition};"></div></div>
                                            <div class="floatLeft CCAverageRating fontBold"><span class = "avg-relevance" id="avg-relevance" > </span></div>
                                        </div>
                                        <div id="likeDislikeGroup " class="floatLeft overCellWidth">
                                            <div class="CClikeDislikeDiv floatLeft" >
                                                    <div class="CClikeDislikeMargin socialdirect cursorPointer">
                                                         <div id="likeSpan" class="commandCenterDisabledLike icon-thumbs-up">&nbsp;</div>
                                                         <span  class = "like-val-CommandCenter"></span>
                                                    </div>
                                                    
                                                    <div class="likeDislike socialdirect cursorPointer">
                                                         <div id="disLikeSpan" class="commandCenterDisabledDisLike icon-thumbs-up2">&nbsp;</div>
                                                         <span  class = "dislike-val-CommandCenter"></span>
                                                    </div>  
                                             </div>
                                             <div class="CCsmileyMargin floatLeft">
                                                <div id="commandCentreSmiley" class="mood-avg ft-left commandCentreMood socialdirect cursorPointer" ></div>
                                                <div id="smielyRating " class="toClear fontBold CCsmileyRatingText cursorPointer" ><apex:outputText value="{!avgMood}" id="commandCenterMoodText" />&nbsp; <span class = "mood-avg-val"> </span></div>
                                             </div>
                                            </div>
                                        </div>
                                        <script>
                                            $('.socialdirect').click(function(){ showCurrentTab('socialTab','lifeCycleSocial');    });
                                        </script>
                                </div>
                                <div id="lifeCycleSocial" style="display:none">
                                    <div id="commandCentreTop" class="">
                                            <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold"> SOCIAL </div>
                                            <div id="undo" class="icon-stats floatRight social-graph-iconright"> </div>
                                            <div id="graphPopUp">
                                            <div class="demo-section k-content">
                                            <div class="icon-angry active-angry social-graph-icon-angry"></div>
                                            <div class="icon-Sad active-Sad social-graph-icon-Sad"></div>
                                            <div class="icon-neutral active-neutral social-graph-icon-neutral"></div>
                                            <div class="icon-smiley active-smiley social-graph-icon-smiley"></div>
                                            <div class="icon-happy active-happy social-graph-icon-happy"></div>
                                            <div id="chartsocial"></div> 
                                            <script>
          function setRange(e) {
                        var chart = e.sender;
                        var options = chart.options;

                        // Prevent document scrolling on mousewheel zoom
                        e.originalEvent.preventDefault();

                        var xRange = e.axisRanges.xAxis;
                        if (xRange) {
                            // Suggested axis ranges
                            var xMin = xRange.min;
                            var xMax = xRange.max;

                            // Limit maximum zoom-in
                            if (xMax - xMin < 2) {
                                return;
                            }

                            // Set X axis range
                            chart.setOptions({
                                xAxis: {
                                    min: xMin,
                                    max: xMax
                                }
                            });
                        }
                    }
                
        
        //Method to generate graph from remote call
        function createSocialChart(line){ 
          
            if( $("#chartsocial").data("kendoChart") != undefined )
           $("#chartsocial").data("kendoChart").destroy(); 
            var   lines = JSON.parse(line);  
            var seriesAvg=[];      //array to show average mood
            var seriesMood=[];     //array to show individual mood
            var plotBands=[];      // Display color for each phase
            var mindate = new Date(lines.graphMindate);   // x axis start point
            var maxdate  = new Date(lines.graphMaxdate);   // x axis end point           
            baseUnit = ''  ;  // base unit can be second , minute , hour, day, year  
            format ='';
            if( lines.graphMaxdate - lines.graphMindate <= 60000 ){
                baseUnit = 'seconds';
                format  = 'mm'+  kendo.culture().calendar[':']  +'ss';   // get format from kendo
                titletext = 'Time (mm'+kendo.culture().calendar[':']+'ss)';  // get format from kendo
            }
            else
            if( lines.graphMaxdate - lines.graphMindate <= 60000*60 ){
               baseUnit = 'minutes';
               format  = 'hh'+kendo.culture().calendar[':']+'mm';
                titletext = 'Time (hh'+kendo.culture().calendar[':']+'mm)';
            }
            else
            if( lines.graphMaxdate - lines.graphMindate <= 60000*60*24 ){
                baseUnit = 'hours';
                format  = 'dd'+kendo.culture().calendar[':']+'hh';
                titletext = 'Time (dd'+kendo.culture().calendar[':']+'hh)';
            }
            else
            if( lines.graphMaxdate - lines.graphMindate <= 60000*60*24*30 ){
                baseUnit = 'days'; 
                format  = 'mm'+kendo.culture().calendar['/']+'dd';
                titletext = 'Time (MM'+kendo.culture().calendar['/']+'dd)';
            }
            else
            if( lines.graphMaxdate - lines.graphMindate <= 60000*60*24*365 ){
                baseUnit = 'months';
                format  = 'yyyy'+kendo.culture().calendar['/']+'MM';
                titletext = 'Time (yyyy'+kendo.culture().calendar['/']+'mm)';
            }
            else {
                baseUnit = 'years'; 
                format  = 'yyyy'+kendo.culture().calendar['/']+'MM';
                titletext = 'Time (yyyy'+kendo.culture().calendar['/']+'mm)';
            }

             for( i=0;i<  lines.plotBands.length;i++){
                plotBands[i]  ={};
                plotBands[i].from = new Date( lines.plotBands[i].fromband);   
                plotBands[i].to = new Date( lines.plotBands[i].toband);
                plotBands[i].color = ( i%2 == 0 )    ? '#F5F5F5':'#FAFAFA' ;
            }
            for( i=0;i<  lines.averageMoodLine.length;i++)
            {  
               
               
               
                y =  lines.averageMoodLine[i] != undefined ?lines.averageMoodLine[i]:{} ;  
                seriesAvg[i] = [];
                seriesAvg[i][0]  =  y.newValue != undefined? new Date( y.changedDate ): '';
                seriesAvg[i][1]  = y.newValue != undefined? y.newValue:0;
                seriesAvg[i][1]  = y.newValue != undefined? y.newValue:0;
                 
            }
            for( i=0;i<  lines.moodLine.length;i++)
            {    
                 
                  
                
                
                x =  lines.moodLine[i] != undefined ?lines.moodLine[i]:{};  
                seriesMood[i] = [];
                seriesMood[i][0]  =  x.newValue != undefined? new Date( x.changedDate ): '';
                seriesMood[i][1]  = x.newValue != undefined? x.newValue:0; 
                 
            }
            
            
            
            
            
            $("#chartsocial").kendoChart({
                        renderAs: "canvas",
                        yAxis: [ {min:0,max:6, axisCrossingValue: [3, mindate],labels:{visible: false}}],   // we  need  y axis touch x axis on mood 2 ie happy
                        xAxis: {
                            name: "xAxis",
                            title: {text: titletext,margin: {top: 155 }},    // x axis description
                           
                            plotBands:plotBands,  // display color for diferent phase
                            min:mindate,        // axis start
                            max:maxdate   // axis end
                        },
                        series: [ {
                            type: "scatterLine",
                            data:seriesMood,
                            style: "smooth",
                            markers: {
                                visible: false  
                            }
                        },
                        {
                            type: "scatterLine",
                            data:seriesAvg,
                            style: "smooth",
                            markers: {
                                visible: false  
                            }
                        }], 
                        transitions: false,
                        drag: setRange,
                        zoom: setRange
                    });
           
        } 
      
       
    </script>
    <script>
                // Generate sample data
                var datax = [];
                var data123 = [];
                var step = Math.PI / 4;
                for (var x = -25; x < 25; x += step) {
                    datax.push([  x,  Math.sin(x) ]);
                }
                for (var x = -25; x < 25; x += step) {
                    data123.push([  x+3,  Math.sin(x) ]);
                }
                
                function createChart23(seriesMood,seriesAvg,baseUnit,format,mindate,maxdate,plotBands) {
                  console.log(seriesMood);  console.log(seriesAvg)
                    

                    function setRange(e) {
                        var chart = e.sender;
                        var options = chart.options;

                        // Prevent document scrolling on mousewheel zoom
                        e.originalEvent.preventDefault();

                        var xRange = e.axisRanges.xAxis;
                        if (xRange) {
                            // Suggested axis ranges
                            var xMin = xRange.min;
                            var xMax = xRange.max;

                            // Limit maximum zoom-in
                            if (xMax - xMin < 2) {
                                return;
                            }

                            // Set X axis range
                            chart.setOptions({
                                xAxis: {
                                    min: xMin,
                                    max: xMax
                                }
                            });
                        }
                    }
                }

               
            </script>
    
    
    
    
                                            </div>
                                            </div>
                <script>
                  
                $(document).ready(function() {
                    var graphPopUp = $("#graphPopUp"),
                    undo = $("#undo").bind("click", ".k-overlay", function() {
                                    graphPopUp.data("kendoWindow").open();
                                    undo.hide();
                    });
                    var onClose = function() {
                       graphPopUp.data("kendoWindow").center();
                    }
                    if (!graphPopUp.data("kendoWindow")) {
                        graphPopUp.kendoWindow({
                            width: "1000px",
                            height: "425px",
                            title:  "Social Mood History(Beta)",
                             modal: true,
                            //draggable: true,
                            actions: [
                                
                                "Close"
                            ],
                             open: function() {   
                                var lines;
                                DecisionView.socialGraph('{!socialInput.id}',function(result,event){
                                createSocialChart(result); 
                                } , {escape:false}); 
                              },
                            close: onClose
                        }).data("kendoWindow").center();
                    }
                  
                });
            </script>
            
            
                                            
                                            <div id="lockIcon" class="floatLeft"><span id="privateImgSpan1"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                    </div>
                                    <div class="topBorder" id="social-panel" onmouseover = "showDisablePanel('social-panel','social-disable','{!socialInput.Accountable__c}','{!socialInput.Responsible__c}' ,'{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!JSENCODE(socialInput.Role_Acceptance_Status__c)}')">
                                        <div class="socialTabCellHeight bottomWidth floatLeft leftWhiteBorder ">
                                        <div class = "panel-disable" id = "social-disable" onmouseout = "hideDisablePanel('social-panel','social-disable')"></div>
                                        
                                        <!--------------- Popover ---------------->
                                        <div class = "popover-gen-arrow items-hover" id = "social-panel-arrow" onmouseout = "hideDisablePanel('social-panel','social-disable')"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "social-panel-callout" onmouseout = "hideDisablePanel('social-panel','social-disable')">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "social-panel-content">
                                                
                                            </div>
                                        </div>     
                                        <!--------------- End Popover ---------------->
                                        
                                        <div class="commandCenterLabelFont paddingTextSetting1 ">  Your Mood</div>
                                         <div id="social-moods" class="social-moods" style="font-size: 1.6em;margin-left: 5px; color:#acacab;">
                                                <div id="moodWorried" class="icon-angry ft-left">   </div>  
                                                <div id="moodPoor" class="icon-Sad ft-left">   </div>  
                                                <div id="moodNormal"  class="icon-neutral ft-left">  </div>
                                                <div id="moodHappy"  class="icon-smiley ft-left">   </div>
                                                <div id="moodLaugh"  class="icon-happy ft-left">   </div>
                                         </div>
                                         </div>
                                          <div class="socialTabCellHeight bottomWidth floatLeft leftBorder ">
                                                <div class=" " style="width: auto;">
                                                    <div class="commandCenterLabelFont  paddingTextSetting1">Average Mood</div>
                                                    <div id="socSmielyRating" class="fontGeneral fontBold paddingTextSetting2" ><apex:outputText value="{!avgMood}" id="socialMoodText" /></div>
                                                  
                                               </div>
                                             <div class="toClear floatRight" id="yourSmileyRat" style="width: 40%;">
                                                <div class="mood-avg floatLeft" ></div>
                                                <div class = "mood-avg-val fontGeneral centerAlign yourSmileyAverageRat floatLeft"></div>
                                             </div>
                                         </div>
                                         <div class="topBorder floatLeft cellWidth ">
                                                <div class="commanCenterLikeDislike bottomWidth floatLeft leftWhiteBorder ">
                                                 <div class="commandCenterLabelFont paddingTextSetting1 "> Likes </div>
                                                 <div class="floatRight" id="socLike">
                                                     <div  id="likeSpan0" class="socialDisabledLike icon-thumbs-up" onclick = "socialCommand('Like','1')">&nbsp;</div>
                                                     <span class = "like-val"></span>
                                                 </div>
                                                 </div>
                                                 <div class="commanCenterLikeDislike bottomWidth floatLeft leftBorder ">
                                                 <div class="commandCenterLabelFont paddingTextSetting1 "> Dislikes </div>
                                                 <div class="floatRight" id="socDisLike">
                                                     <div  id="disLikeSpan0" class="socialDisabledDislike icon-thumbs-up2" onclick = "socialCommand('Dislike','1')">&nbsp;</div>
                                                     <span class = "dislike-val"></span>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="topBorder floatLeft cellWidth" style="margin-top: -3px;">
                                             <div id="yourRelevanceID" class="youRelevancHeight bottomWidth floatLeft">
                                              <div class="commandCenterLabelFont paddingTextSetting1 ">Your Relevance </div>
                                             <div onmouseout="starOut()" id = "aveStars" class="">
                                                 <div class = "star ft-left" id = "star1" onmouseover="starRate(1)"  onclick="starRate(1);starUpdate(1);"></div>
                                                 <div class = "star ft-left" id = "star2" onmouseover="starRate(2)"  onclick="starRate(2);starUpdate(2);"></div>
                                                 <div class = "star ft-left" id = "star3" onmouseover="starRate(3)"  onclick="starRate(3);starUpdate(3);"></div>
                                                 <div class = "star ft-left" id = "star4" onmouseover="starRate(4)"  onclick="starRate(4);starUpdate(4);"></div>
                                                 <div class = "star ft-left" id = "star5" onmouseover="starRate(5)"  onclick="starRate(5);starUpdate(5);"></div>
                                             </div>
                                             </div>
                                             <div class="youRelevancHeight bottomWidth floatLeft  leftBorder">
                                              <div class="commandCenterLabelFont paddingTextSetting1 "> Average Relevance </div>
                                             <div class="floatLeft  " id="yourAveStars"><div class="avgstar" style="background:url('/{!starImage}') {!starImagePosition};"></div></div>
                                             <div class="floatLeft" id="urAveRat"><span class = "avg-relevance" id="avgrelevance"></span> <span>/5</span></div>
                                           </div>
                                           </div>
                                       <script>
                                         // $('#social-moods div').click(function(){$('#social-moods div').removeClass('mood-active') ;   $(this).addClass('mood-active');}); 
                                          $('#social-moods div').click(function(){
                                          $('#social-moods div').addClass('deActive-mood');
                                              if( $(this).attr('id') == 'moodWorried'){
                                              $(this).removeClass('deActive-mood');
                                              $(this).addClass('active-angry');
                                                 socialCommand('Mood',1);
                                              }else if($(this).attr('id') == 'moodPoor'){
                                              $(this).removeClass('deActive-mood');
                                               $(this).addClass('active-Sad');
                                                 socialCommand('Mood',2);
                                              }
                                              else if($(this).attr('id') == 'moodNormal'){
                                              $(this).removeClass('deActive-mood');
                                              $(this).addClass('active-neutral');
                                                 socialCommand('Mood',3);
                                              }
                                              else if($(this).attr('id') == 'moodHappy'){
                                              $(this).removeClass('deActive-mood');
                                              $(this).addClass('active-smiley');
                                                 socialCommand('Mood',4);
                                              }
                                              else if($(this).attr('id') == 'moodLaugh'){
                                              $(this).removeClass('deActive-mood');
                                              $(this).addClass('active-happy');
                                                 socialCommand('Mood',5);
                                              }
                                          });
                                        </script>
                                    </div>
                                </div>
                                <div id="lifeCycleTiming" style="display:none">
                                    <div id="commandCentreTop" class="">
                                        <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold ">TIMING</div>
                                        <div id="lockIcon" class="floatLeft"><span id="privateImgSpan2"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                    </div>  
                                    <div class="cellWidth  timingMiddleHeight floatLeft ">
                                            <div class="floatLeft  bottomWidth timingMiddleHeight">
                                                <div class="commandCenterLabelFont paddingTextSetting1 ">Nearest Due Date</div>
                                                <div class="commandCenterValuesFont paddingTextSetting2">
                                                    <span id="status-block"><apex:outputField id="timingCenterDueDate" value="{!decision.Nearest_Due_Date__c}" /></span>
                                                </div>
                                            </div>
                                             <div class="floatLeft leftBorder   bottomWidth timingMiddleHeight">
                                                <div class="commandCenterLabelFont paddingTextSetting1 ">Countdown</div>
                                                <div class="commandCenterValuesFont paddingTextSetting2">
                                                    <span id="status-block"><span id="numberOfDaysLeft"></span></span>
                                                </div>
                                            </div>
                                    </div>
                    <div class="topBorder" id="social-panel-phasetime" onmouseover = "showDisablePanel('social-panel-phasetime','phasetime-disable','{!socialInput.Accountable__c}','{!socialInput.Responsible__c}' ,'{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!JSENCODE(socialInput.Role_Acceptance_Status__c)}')">
                                        <div class="socialTabCellHeight bottomWidth floatLeft leftWhiteBorder ">
                                        <div class = "panel-disable" id = "phasetime-disable" onmouseout = "hideDisablePanel('social-panel-phasetime','phasetime-disable')"></div>                            
                                      <!--------------- Popover ---------------->
                                        <div class = "popover-gen-arrow items-hover" id = "social-panel-phasetime-arrow" onmouseout = "hideDisablePanel('social-panel-phasetime','phasetime-disable')"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "social-panel-phasetime-callout" onmouseout = "hideDisablePanel('social-panel-phasetime','phasetime-disable')">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "social-panel-phasetime-content">
                                                
                                            </div>
                                        </div>     
                                        <!--------------- End Popover ---------------->
                                      <div  class="cellWidth  timingTabCellHeight  topBorder toClear">
                                         <div class="floatLeft ">
                                            <div class="commandCenterLabelFont paddingTextSetting1 floatLeft dueDateHeight"> Due date for the: </div>
                                            <div  class="toClear dueDateHeight"></div>
                                            <div id="timingBottomRight dueDateHeight">
                                               <div class="toClear paddingTextSetting1">
                                                   <div id="enabledSetTiming" class="commandCenterLabelFont"><a href="javascript:void(0)" style="color:blue;text-decoration:none"  onclick="GoToTimingTab();">Advanced</a></div>
                                                    <div id="disabledSetTiming">Advanced</div>
                                               </div>
                                           </div>  
                                         </div>
                                         <div class="floatLeft dateLable">
                                            <div class="configHead commandCenterLabelFont dueDateHeight">Decision</div>
                                            <div class="configHead commandCenterLabelFont toClear dueDateHeight">Execution</div>
                                            <div class="configHead commandCenterLabelFont toClear dueDateHeight">Evaluation</div>
                                         </div>
                                         <div class="floatLeft dateTimeSelectDiv">
                                            <div id="decisionDate" class="  dueDateHeight">  
                                                            
                                                            <input id="crrntEndDec"  style="width: 170px"/>
                                                             
                                                </div>
                                                <div id="executionDate" class=" toClear dueDateHeight">
                                                            
                                                            <input id="crrntEndExe" style="width: 170px"/>
                                                             
                                                </div>
                                                
                                                <div id="evaluationDate" class=" toClear dueDateHeight">
                                                            
                                                            <input id="crrntEndEval"  style="width: 170px"/>
                                                </div>
                                                
                                         </div>
                                            
<!--                                        <div id="clockImgGroup" class="floatLeft  bottomWidth timingTabCellHeight">-->
<!--                                            <div >-->
<!--                                                <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_alarm_timing-22x24.png')}"/>-->
<!--                                            </div>-->
<!--                                            <div class="clockTimeLeftLabel">Time Left</div>-->
<!--                                        </div>-->
<!--                                        <div id="dateGroup" class="floatLeft timingTabCellHeight">-->
<!--                                            <div>-->
<!--                                                <div id="day-block" class="inLineCenter dateFont"></div>-->
<!--                                                <div id="hour-block" class="inLineCenter dateFont"></div>-->
<!--                                                <div id="min-block" class="inLineCenter dateFont"></div>-->
<!--                                             </div>-->
<!--                                             <div>-->
<!--                                                <div class="inLineCenter fontBold">Days</div>-->
<!--                                                <div class="inLineCenter fontBold">Hours</div>-->
<!--                                                <div class="inLineCenter fontBold">Mins</div>-->
<!--                                             </div> -->
                                             
<!--                                             </div>-->
                                            
                                     </div>
                                    
                                </div>
                                </div>
                                    </div>
                                    <div id="lifeCycleClassification"  style="display:none">
                                        <div id="commandCentreTop" class="">
                                            <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold ">CLASSIFICATIONS</div>
                                            <div id="lockIcon" class="floatLeft"><span id="privateImgSpan4"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                        </div>  
                                        <div class="cellWidth  topBorder " id="classification-panel"  onmouseover = "showDisablePanel('classification-panel','classification-disable','{!socialInput.Accountable__c}','{!socialInput.Responsible__c}' ,'{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!JSENCODE(socialInput.Role_Acceptance_Status__c)}')">
                                              <div class = "panel-disable" id = "classification-disable" onmouseout = "hideDisablePanel('classification-panel','classification-disable')"></div>                            
                                              <!--------------- Popover ---------------->
                                                <div class = "popover-gen-arrow items-hover" id = "classification-panel-arrow" onmouseout = "hideDisablePanel('classification-panel','classification-disable')"></div>
                                                <div class = "popover-gen items-hover items-hover-area" id = "classification-panel-callout" onmouseout = "hideDisablePanel('classification-panel','classification-disable')">                                    
                                                    <div class = "popover-icon ft-left">
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                                    </div>
                                                    <div class = "popover-gen-content ft-right" id = "classification-panel-content">
                                                        
                                                    </div> 
                                                </div> 
                                            <div class="cellWidth classiMidHeight">
                                                <div class="floatLeft commandCenterLabelFont " style="margin:14px">Type</div>
                                                <div class="floatLeft">
                                                   <select id="typeSelect" value="{!decision.Decision_Type__c}" style="width: 8em; margin-left:0.7em;">
                                                        <option>None</option>
                                                        <option>Strategic</option>
                                                        <option>Tactical</option>
                                                        <option>Operational</option>
                                                        <option>Micro</option>
                                                    </select>
                                                </div>
                                                <div class="floatRight commandCenterLabelFont" style="margin:8px"><a href="javascript:void(0)" style="color:blue;text-decoration:none"  onclick="GoToDetailsTab();">Advanced</a></div>
                                            </div>
                                            <div class="cellWidth classiMidHeight">
                                                <div class="floatLeft commandCenterLabelFont " style="margin: 6px 14px 0px 14px;">Priority</div>
                                                <div class="floatLeft">
                                                    <select id="prioritySelect" value="{!decision.Priority__c}" style="width: 8em; margin-top:0px; ">
                                                        <option>High</option>
                                                        <option>Normal</option>
                                                        <option>Low</option>                                                       
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="cellWidth classiMidHeight">
                                                <div class="floatLeft commandCenterLabelFont" style="margin:0px 14px 0px 14px;">Topics</div>
                                                <div class="floatLeft" id="topicsSelection" >
                                                <!--<div class="topicsSelection" onmouseover="showScroll(this)" onmouseout="hideScroll(this)">sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br>sdfs asfdf adsfdf <br></br></div>-->
                                                   <select id="TopicMultiSelectClassification" multiple="multiple" data-placeholder="Select Topic..." style="" >
                                                            <apex:repeat value="{!lstTopicAssigned}" var="TopicAssigned" >  
                                                                <apex:outputPanel rendered="{!TopicAssigned.TopicSelected == 'selected'}" > 
                                                                    <option value="{!TopicAssigned.TopicName}" selected="selected" ><apex:outputText value="{!TopicAssigned.TopicName}" /></option>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!TopicAssigned.TopicSelected != 'selected'}" > 
                                                                    <option value="{!TopicAssigned.TopicName}" ><apex:outputText value="{!TopicAssigned.TopicName}" /></option>
                                                                </apex:outputPanel>
                                                            </apex:repeat>
                                                        </select>
                                                        <script>
                                                            $("#TopicMultiSelectClassification").kendoMultiSelect({
                                                                change:function(){ saveClassification(); },
                                                                open: function() { $('#topicsSelection').css('position','fixed').css('min-height','20em').css('z-index','1000001').css('overflow','auto'); $('body').css('overflow','hidden'); $('.bg-fade').show().css('opacity','0');$(".bg-fade").bind("click",(function () {closeTopicPop()}));  },
                                                                //close: function() {}
                                                            }); 
                                                            function closeTopicPop(){
                                                            $('.bg-fade').unbind("click");
                                                            $('.bg-fade').hide().css('opacity','0.5');
                                                            $('#topicsSelection').css('position','relative').css('height','3.6em;').css('overflow','hidden').css('min-height','1em');
                                                            $('body').css('overflow','auto');
                                                            }
                                                        </script>
                                                
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <div id="lifeCycleActions" style="display:none">
                                    <div id="commandCentreTop" class="">
                                        <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold"> ACTIONS </div>
                                        <div id="lockIcon" class="floatLeft"><span id="privateImgSpan3"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                    </div>  
                                    <div class="topBorder" id="popular-panel" onmouseover = "showDisablePanel('popular-panel','popular-disable','{!socialInput.Accountable__c}','{!socialInput.Responsible__c}' ,'{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!JSENCODE(socialInput.Role_Acceptance_Status__c)}')">
                                        <div class = "panel-disable" id = "popular-disable" onmouseout = "hideDisablePanel('popular-panel','popular-disable')"></div>
                                        
                                        <!--------------- Popover Actions ---------------->
                                        <div class = "popover-gen-arrow items-hover" id = "popular-panel-arrow" onmouseout = "hideDisablePanel('popular-panel','popular-disable')"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "popular-panel-callout" onmouseout = "hideDisablePanel('popular-panel','popular-disable')">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "popular-panel-content">
                                               
                                            </div>
                                        </div>        
                                        <!--------------- End Popover ---------------->
                                        <div class = "popover-gen-arrow items-hover" id = "actions-panel-arrow" onmouseout = "hideDisablePanel('popular-panel','popular-disable')"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "actions-panel-callout" onmouseout = "hideInformationOnItems()">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "actions-panel-content">
                                                
                                            </div>
                                        </div>
                                        <div class="cellWidth  actionsCellHoriDivision toClear">
                                            <div class="floatLeft actionsDiviLineRight"> </div>
                                            <div class="actionsDiviText floatLeft centerAlign">ADD/NEW</div>
                                            <div class="floatLeft actionsDiviLineLeft"> </div>
                                         </div>  
                                         <div class="cellWidth  actionsCellHeight toClear">
                                                <div class="floatLeft     ">
                                                   <button type = "button" id = "popularDecision" class = " actionsBtnwidth fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('decision', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()" >Decision</button>
                                                </div>
                                                <div class="floatLeft     ">
                                                    <button type = "button" id = "popularTask" class = " actionsBtnwidth fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('task', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Task</button>
                                                </div>
                                                <div class="floatLeft     ">
                                                    <apex:outputPanel rendered="{!IF(OR(socialInput.User__c != null,chkRecPermission==true),true,false) }" >
                                                       <button type = "button" id = "popularPeople" class = " actionsBtnwidth fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('people',this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">People</button>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!IF(AND(socialInput.User__c == null,chkRecPermission!=true),true,false) }" >
                                                        <button type = "button" id = "popularPeopleForInformedUser" class = " actionsBtnwidth btn-disabled fontGeneral fontBold">People</button>
                                                    </apex:outputPanel>
                                                 </div> 
                                         </div>
                                        
                                         <div class="cellWidth  actionsCellHeight toClear">
                                                <div class="floatLeft ">
                                                    <button type = "button" id = "popularRelation" class = " actionsBtnwidth fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('relation', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Relations</button>
                                                </div>
                                                <div class="floatLeft ">
                                                    <button type = "button" id = "popularEvent" class = " actionsBtnwidth fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('event', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Event</button>
                                                </div>
                                         </div>
                                          <div class="cellWidth  actionsCellHoriDivision toClear">
                                                <div class="floatLeft moreDiviLineLeft"> </div>
                                                <div class="actionsDiviText floatLeft centerAlign">MORE</div>
                                                <div class="floatLeft moreDiviLineRight"> </div>
                                         </div>  
                                        <div class="cellWidth  actionsCellHeight toClear">
                                            <div class="floatLeft  centerAlign  bottomWidth ">
                                                 <button type = "button" id = "popularEdit" class = "buttonActionsTab fontGeneral fontBold actionsEditBtnMarginleft"  onmouseover = "showPopularBtnsCallout('edit', this.id ,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Edit Decision</button>
                                            </div>
                                            <div class="floatLeft  centerAlign bottomWidth ">
                                                <apex:outputPanel rendered="{!IF(socialInput.User__c != null,true,false) }" >
                                                    <button type = "button" id = "popularClone" class = "buttonActionsTab actionsEditBtnMarginright" onmouseover = "showPopularBtnsCallout('clone', this.id ,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()" >Copy Decision</button>
                                                </apex:outputPanel>
                                                
                                                
                                                <apex:outputPanel rendered="{!IF(socialInput.User__c == null,true,false) }" >
                                                    <button  type = "button" id = "popularCloneForInFormedGroup" onclick="showModal('clone-header','clone-body','clone-footer');" class = "buttonActionsTab fontGeneral fontBold actionsEditBtnMarginright" >Copy Decision</button>
                                                </apex:outputPanel>
                                            </div>
                                        </div>
                                        <div class="cellWidth actionsCellHeight  toClear">
                                            <div class="floatLeft  centerAlign bottomWidth ">
                                                <button type = "button" id = "addToPlan" class = "buttonActionsTab fontGeneral fontBold actionsEditBtnMarginleft" onclick = "getPlanList();">Add to Plan</button>
                                                
                                            </div>
                                            <div class="floatLeft  centerAlign bottomWidth  ">
                                               <button type = "button" id = "popularPdf" class = "buttonActionsTab fontGeneral fontBold actionsEditBtnMarginright" onclick = "pdfGenerate()">Create PDF</button>
                                            </div>
                                    </div>
                                    </div>
                                   <!--  <div class="cellWidth  centerAlign socialTabCellHeight  floatLeft">
                                        
                                            <button  type="button" id="btnApproveReject" onmouseout="$(this).css('background-position','0px 0px')" onmouseover="$(this).css('background-position','0px -30px')" class="role-AcceptanceCommandCenter-Btn fontGeneral fontBold">Accept/Reject</button>
                                        
                                    </div> -->
                                </div>
                                <!-- <div id="lifeCycleClassification" style="display:none">
                                    <div id="commandCentreTop" class="">
                                        <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold"> ADD/NEW </div>
                                        <div id="lockIcon" class="floatLeft"><span id="privateImgSpan4"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                    </div>  
                                    <div id="addnew-panel" onmouseover = "showDisablePanel('addnew-panel','addnew-disable','{!socialInput.Accountable__c}','{!socialInput.Responsible__c}' ,'{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!JSENCODE(socialInput.Role_Acceptance_Status__c)}')">
                                        <div class = "panel-disable" id = "addnew-disable" onmouseout = "hideDisablePanel('addnew-panel','addnew-disable')"></div> -->
                                        
                                        <!--------------- Popover Actions ----------------> 
                                        <!--  <div class = "popover-gen-arrow items-hover" id = "addnew-panel-arrow" onmouseout = "hidePopularBtnsCallout()"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "addnew-panel-callout" onmouseout = "hidePopularBtnsCallout()">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "addnew-panel-content">
                                                
                                            </div>
                                        </div>  -->
                                        <!--------------- End Popover ---------------->
                                        
                                        <!--  <div class = "popover-gen-arrow items-hover" id = "addnew-panel-arrow" onmouseout = "hidePopularBtnsCallout()"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "addnew-panel-callout" onmouseout = "hidePopularBtnsCallout()">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "addnew-panel-content">
                                                
                                            </div>
                                        </div>   
                                            <div class="cellWidth  socialTabCellHeight floatLeft topBorder">
                                                <div class="floatLeft buttonTopMargin centerAlign  bottomWidth socialTabCellHeight">
                                                    <apex:outputPanel rendered="{!IF(OR(socialInput.User__c != null,chkRecPermission==true),true,false) }" >
                                                       <button type = "button" id = "popularPeople" class = "buttonStyle1 fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('people',this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">People</button>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!IF(AND(socialInput.User__c == null,chkRecPermission!=true),true,false) }" >
                                                        <button type = "button" id = "popularPeopleForInformedUser" class = "buttonStyle1 btn-disabled fontGeneral fontBold">People</button>
                                                    </apex:outputPanel>
                                                 </div>   
                                                <div class="floatLeft buttonTopMargin centerAlign bottomWidth  socialTabCellHeight">
                                      
                                                    <button type = "button" id = "popularRelation" class = "buttonStyle1 fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('relation', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Relations</button>
                                                </div>
                                            </div>
                                            <div class="cellWidth  socialTabCellHeight floatLeft ">
                                                <div class="floatLeft buttonTopMargin centerAlign  bottomWidth socialTabCellHeight">
                                                    <button type = "button" id = "popularDecision" class = "buttonStyle1 fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('decision', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()" >Decision</button>
                                                </div>
                                                
                                            </div>
                                            <div class="cellWidth  socialTabCellHeight floatLeft ">
                                                <div class="floatLeft buttonTopMargin centerAlign  bottomWidth socialTabCellHeight">
                                                    <button type = "button" id = "popularTask" class = "buttonStyle1 fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('task', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Task</button>
                                                </div>
                                                <div class="floatLeft buttonTopMargin centerAlign bottomWidth  socialTabCellHeight">
                                                    <button type = "button" id = "popularEvent" class = "buttonStyle1 fontGeneral fontBold" onmouseover = "showPopularBtnsCallout('event', this.id,'{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}')" onmouseout = "hidePopularBtnsCallout()">Event</button>
                                                </div>
                                            </div>    
                                    </div>  
                                </div> -->
                                <div id="lifeCycleEvaluations" style="display:none">
                                    <div id="commandCentreTop" class="">
                                        <div id="commandCentreTitle" class="floatLeft commandCenterHeading fontBold"> OUTCOME EVALUATION </div>
                                        <div id="lockIcon" class="floatLeft"><span id="privateImgSpan5"> <img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_lock-12x16.png')}"/></span></div>
                                    </div>  
                                    <div id="outcome-panel" onmouseover = "showDisablePanel('outcome-panel','outcome-disable','{!socialInput.Accountable__c}','{!socialInput.Responsible__c}' ,'{!socialInput.Consulted__c}','{!socialInput.Informed__c}')" class="topBorder cellWidth">
                                        <div class = "panel-disable" id = "outcome-disable" onmouseout = "hideDisablePanel('outcome-panel','outcome-disable')"></div>
                                        <!--------------- Popover ---------------->
                                        <div class = "popover-gen-arrow items-hover" id = "outcome-panel-arrow" onmouseout = "hideDisablePanel('outcome-panel','outcome-disable')"></div>
                                        <div class = "popover-gen items-hover items-hover-area" id = "outcome-panel-callout" onmouseout = "hideDisablePanel('outcome-panel','outcome-disable')">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id = "outcome-panel-content">
                                                
                                            </div>
                                        </div>     
                                        <!--------------- End Popover ----------------> 
                                        <div class="cellWidth  evaluationCellHeight floatLeft">
                                            <div class="commandCenterLabelFont paddingTextSetting1 ">Result</div>    
                                            <div class = "slider-container result-slider">
                                                <div class="slider-low commandCenterLabelFont">Low</div> 
                                                <input id="resultSlider" value="{!socialInput.Result__c}" />
                                                <div class="slider-high commandCenterLabelFont">High</div> 
                                                <script>
                                                    $(document).ready(function () {
                                                         resultSlider('{!socialInput.Result__c}');
                                                    });
                                                </script> 
                                            </div>
                                         </div>
                                         <div class="cellWidth  evaluationCellHeight floatLeft topBorder">   
                                            <div class="commandCenterLabelFont paddingTextSetting1 ">Effort</div>
                                            <div class = "slider-container effort-slider">
                                                <div class="slider-low commandCenterLabelFont">Low</div> 
                                                <input id="effortSlider" value="{!socialInput.Effort__c}" />
                                                <div class="slider-high commandCenterLabelFont">High</div> 
                                                <script>
                                                    $(document).ready(function () {
                                                         effortSlider('{!socialInput.Effort__c}')
                                                    });
                                                </script> 
                                            </div>
                                          </div>
                                        <div class="topBorder cellWidth floatLeft ">
                                            <div id="" class="floatLeft evaluationBottomLeft">
                                                <div class="floatLeft fontBold evaluationAverageText">
                                                    Average
                                                </div> 
                                                <div class="floatLeft leftBorder evaluationBottomValues">
                                                    <div class = "result-avg-val fontBold fontGeneral "></div>
                                                    <div class="decisionOutcomeText fontGeneral fontBold ">Result</div>
                                                </div> 
                                                <div class="floatLeft leftBorder evaluationEffortText evaluationBottomValues">
                                                    <div class = "effort-avg-val fontBold fontGeneral "></div>
                                                    <div class="decisionOutcomeText fontGeneral fontBold ">Effort</div>
                                                </div> 
                                             </div> 
                                             <div  id="evaluationBottomRight" class="icon-stats floatRight" onclick = "scatterChart('{!JSENCODE(decision.Id)}')" ondblclick = "scatterChart('{!JSENCODE(decision.Id)}')">   
                                                <!--<img  src = "{!URLFOR($Resource.Images, '/newDecisionLifeCycle/icon_outcome-22x21.png')}"  />-->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                </div>
                </div>
                <div id="middleDiv">
                     <div id="leftDiv">
                    <div id="lifeCycle">
                        <div id="middleGroup" class="floatLeft generalStyle">
                                <div class="toClear" style="margin-top: -10px;"> 
                                <apex:form id="titlePopupFrm">   
                                    <div id="lifeCycleTitleGroup" class="fontBold sf-over-area" >
                                        <div id="decisionTitle" onmouseover = "showSFCallout(event)" onmouseout = "hideSFCallout()"> <apex:outputfield id="visibleDecisionTitle" value="{!decision.Title__c}"/> </div>
                                    </div>
                                    <!------------ Popover SF ------------->
                                    <div class = "ft-left">
                                         <div class = "popover-sf pop-custom decisionTopBorder" id = "titleCallout"  onmouseout = "hideSFCallout()">
                                             <div class = "popover-sf-arrow"></div>
                                             <div class = "popover-title decisionBottomBorder sf-over-area" id = "sfDecisionTitle"><apex:outputfield value="{!decision.Title__c}"/></div>
                                             <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                 <tr>
                                                     <td class = "cell-left gen-block-cell popover-label">
                                                         Description <br/>
                                                     </td>
                                                     <td class = "gen-block-cell popover-cell" id = "sfTitleStatement">
                                                         <apex:outputField value="{!decision.Problem_Idea_Advice__c}" />
                                                     </td>
                                                 </tr>
                                                 <tr>
                                                     <td class = "cell-left gen-block-cell popover-label">
                                                         Decision
                                                     </td>
                                                     <td class = "gen-block-cell popover-cell" id = "sfTitleDecision">
                                                         <apex:outputField value="{!decision.Decision_Taken__c}" />    
                                                     </td>
                                                 </tr>
                                             </table>
                                         </div>
                                     </div>
                                 </apex:form>
                                 </div> 
                                 <!------------ End Popover SF ------------->
                                 <div id="decisionPhasesGroup" class="generalStyle toClear">
                                     <div id="topArrowGroup"> 
                                        <div id="topArrow" style="display:none"  class="floatLeft noDisplay">&nbsp;</div>
                                        <div id="topArrow-nonAccBackup"  style="display:none" class="floatLeft noDisplay">&nbsp;</div>
                                     </div>
                                     <div id="phase-container" class="toClear">&nbsp;</div>
                                         <div id="bottomArrowGroup">
                                            <div id="bottomArrow">&nbsp;</div>
                                         </div> 
                                    </div>
                        </div>      
                           
                    </div>
                </div>
                <div id="marginDiv"> </div>
               </div>
               
            </div>
        
         <!-- New Decision Lifecycle end  -->
        <table cellspacing="0" cellpadding="0" class="decision-wrap">
            <tr>
                <!---------- Main Content ------------->
                <td class="wrap-content-main">
                  
                    
                   <!---------- Tabs ------------->
                    <div id="tabs" class = "ui-tabs"> 
                        <ul class = "ui-tabs" id = "decisionTab">
                            <li id="feedTab"><a  href="#tabs-cha" onclick="window.location.href='#feedTab_act';">Feed</a></li>
                            <li id="detailsTab"><a  href="#tabs-gen" onclick="window.location.href='#detailsTab_act';">Details</a></li>
                            <li id="peopleTab"><a href="#tabs-col" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','people-tab','peopleTab');" >People <span class="people-tab"></span> </a></li>
                            <li id="activityTab"><a href="#tabs-tas" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','task-tab','activityTab');">Activities  <span class="task-tab"></span></a></li>
                           <!-- <li id="approvalsTab"><a href="#tabs-app" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','approvals-tab','approvalsTab');">Approvals<span class="approvals-tab" ></span></a></li> --->
                            <li id="relationsTab"><a href="#tabs-rel" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','relation-tab','relationsTab');">Relations <span class="relation-tab" ></span></a></li>
                            <li id="attachmentsTab" ><a href="#tabs-att" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','attachment-tab','attachmentsTab'); " >Attachments <span class="attachment-tab" ></span></a></li>
                            <!--<li><a href="#tabs-his" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','history-tab');">History <span class="history-tab" ></span></a></li>-->
                            <!--<li><a href="#tabs-qua" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','quality-tab');">Quality <span class="quality-tab" ></span></a></li>-->
                            <li id="timingsTab"><a href="#tabs-tim" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','timing-tab','timingsTab');">Timing  <!--<span class="timing-tab" ></span>--></a></li>
                            <li id="matrixTab"><a href="#tabs-mat" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','matrix-tab','matrixTab');">Matrix  <span  ></span></a></li>
                            <li id="contributionTab"><a href="#tabs-cont" onclick="tabSectionClicked('{!JSENCODE(socialInput.Id)}','contribution-tab','contributionTab');">Contribution <span  ></span></a></li>
                        </ul> 
                            <!-------------- Chatter Tab ---------------->
                        <div id="tabs-cha">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-chatter-24x24.png')}" />
                                        <h3 class = "ft-left">Feed</h3>
                                    </div>
                                </div>
                                  <chatter:feedWithFollowers entityId="{!$CurrentPage.parameters.Id}" id="chatter"/>   
                            </div>
                        </div> 
                            <!-------------- End Chatter Tab ---------------->
                            <!-------------- General Tab ---------------->
                        <div id="tabs-gen">
                            <div class = "tabs-block decisionTopBorder">
                                <div class="decisionView">
                                    
                                    <div class = "tabs-block-head">
                                        <div class = "tabs-block-left">
                                            <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-general-24x24.png')}" />
                                            <h3 class = "ft-left">Decision Details</h3>
                                        </div>
                                        <!-- Begin code for buttons on top  -->
                                            <button type="Button" class="k-button" id = "generalEdit" > Edit </button>
                                            <button type="Button" class="k-button" id = "generalDelete" > Delete</button>
                                            
                                            <apex:outputPanel rendered="{!IF(socialInput.User__c != null,true,false) }" >
                                                <button type="Button" class="k-button" id = "generalClone" > Copy </button>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!IF(socialInput.User__c == null,true,false) }" >
                                                <button type="Button" class="k-button" id = "generalCloneForInFormedGroup" onclick="showModal('clone-header','clone-body','clone-footer');" > Copy </button>
                                            </apex:outputPanel>
                                                
                                                
                                            <apex:outputPanel rendered="{!IF(socialInput.User__c != null,true,false) }" >
                                                <button type="Button" class="k-button" id = "generalPdf" > PDF Summary </button>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!IF(socialInput.User__c == null,true,false) }" >
                                                <button type="Button" class="k-button" id = "generalPdfForInformedGroup" onclick="pdfGenerate();" > PDF Summary </button>
                                            </apex:outputPanel>
                                        <!-- End code for buttons on top -->
                                    </div>
                                        <!-- View mode of decision -->
                                        
                                    <apex:form id="decisonViewState">
                                        <!-- General section -->
                                    <div class = "tabs-gen-block decisionTopBorder">
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "genral-btn" onclick = "expandCollapse('genral-view','genral-btn')"></a>
                                            <h3 class = "ft-left">General</h3> 
                                        </div>     
                                        <div id = "genral-view">                                      
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                               <tr>
                                                   <td class = "cell-left gen-block-cell"> 
                                                        <span title="The title of the decision can either be written as a question, or as a subject line.You could write Shall I go to Sweden, or alternatively, Going to Sweden."  >  Title </span>
                                                    </td>
                                                    <!-- added extra column to add redline before input field -->
                                                    <td class = "gen-block-cell">
                                                          <div class="restrictCharacters"><apex:outputField id="decisionTitle" value="{!decision.Title__c}" /></div> 
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Provide background for the Description. You can describe what needs to be taken into consideration when taking the decision. You can also state available alternatives to choose from." > Description  </span>
                                                    </td>
                                                    <td class = "gen-block-cell">         
                                                        <div class="restrictCharacters"><apex:outputField value="{!decision.Problem_Idea_Advice__c}" /></div>
                                                    </td>
                                                </tr>
                                                 <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Here, state the actual decision that is taken and possibly the reasons why. For example, Going to Sweden at this time gives little business value,so we will not attend the seminar this year." >Decision</span>
                                                    </td>
                                                    <td class = "gen-block-cell">       
                                                        <div class="restrictCharacters"><apex:outputField value="{!decision.Decision_Taken__c}" /> </div>
                                                    </td>
                                                </tr>
                                                 <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                 <tr>
                                                    <td class = "cell-left gen-block-cell"><span>Identifier </span></td>
                                                    <td class = "gen-block-cell">         
                                                        <div class="restrictCharacters"><apex:outputField value="{!decision.Identifier__c}" />    
                                                            <apex:inputHidden id="approvedOrRejected" value="{!decision.test__c}" />
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                            </table>
                                        </div>   
                                    </div>    
                                        <!-- Classification section -->
                                    <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "classification-btn"   onclick = "expandCollapse('classification-view','classification-btn')"></a>   
                                            <h3 class = "ft-left">Classification</h3>
                                        </div>    
                                        <div id = "classification-view">
                                        
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Select the type of Decision"> Decision Type </span>
                                                    </td>
                                                    <td class = "gen-block-cell classification-cell">                                   
                                                        <apex:outputField id="decisionTypeView" value="{!decision.Decision_Type__c}" /> 
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Select the approach for making the decision" > Decision Approach </span>
                                                    </td>
                                                    <td class = "gen-block-cell classification-cell">                                   
                                                        <apex:outputField value="{!decision.Decision_Approach__c}" /> 
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Select the Category of the Decision" > Category </span>
                                                    </td>
                                                    <td class = "gen-block-cell">                                  
                                                        <apex:outputField value="{!decision.Category__c}" /> 
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Select the decision Making Style applied" > Decision Making Style </span>
                                                    </td>
                                                    <td class = "gen-block-cell">                                 
                                                        <apex:outputField value="{!decision.Decision_Making_Style__c}" /> 
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="The priority of the decision prioritizes the decision on the Home page and other listings" > Priority </span>
                                                    </td>
                                                    <td class = "gen-block-cell">                                   
                                                        <apex:outputField id="priorityview" value="{!decision.Priority__c}" />                                  
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="The selected topics determine whether this record will be shown in the Topics workbench" > Topics </span>
                                                    </td>
                                                    <td class = "gen-block-cell">                                 
                                                        <apex:outputText id="topicsview" value="{!selectedTopics}" /> 
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                            </table>
                                         </div>   
                                    </div>    
                                        <!-- Table for financials section -->
                                    <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head"> 
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "financials-btn" onclick = "expandCollapse('financials-view','financials-btn')"></a>  
                                            <h3 class = "ft-left">Financials</h3>
                                        </div>    
                                        <div id = "financials-view"> 
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <tr>
                                                    <td class = "fin-cell">
                                                        <div class = "financials">
                                                            <div class = "curve-head">Estimated</div>   
                                                            <table width = "100%">                                                                 
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="The size of the investment. Use this field if the final deliverable of the decision can be entered into the balance sheet of the organisation." >Investment</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Estimated_Investment__c}" /></td>
                                                                </tr> 
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Estimated_Investment_Desc__c}" /></td>
                                                                </tr>                                                               
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="A price that can be completely attributed to the production of specific goods or services. Direct costs refer to materials, labour and expenses related to the implementation of the decision." >Direct Cost</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Estimated_Direct_Cost__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Estimated_Direct_Cost_Desc__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="Revenue / Turnover created by implementing this Decision" >Revenue</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Estimated_Revenue__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Estimated_Revenue_Desc__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="Net Present Value - The difference between the present value of cash inflows and the present value of cash outflows. NPV is used in capital budgeting to analyze the profitability of an investment or project." >NPV</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Estimated_Net_Present_Value__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Estimated_Net_Present_Value_Desc__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="The total amount of people involved in the implementation of the decision. All people that participate as part-time resources count towards this number." >People Involved</span>
                                                                    </td>
                                                                    <td>&nbsp;<apex:outputField value="{!decision.Estimated_People_Involved__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Estimated_People_Involved_Desc__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="The definition of FTE (full time equivalent) is the number of working hours that represents one full-time employee during a fixed time period. In Fingertip, the time period is defined by the Valid From and Valid To dates. As an example, you have three employees and they work 50 hours, 40 hours, and 10 hours per week – totaling 100 hours. Assuming a full-time employee works 40 hours per week, your full time equivalent calculation is 100 hours divided by 40 hours, or 2.5 FTE." >FTE</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Estimated_Full_time_Equivalent_FTE__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Estimated_Full_time_Equivalent_Desc__c}" /></td>
                                                                </tr>
                                                                
                                                            </table>
                                                        </div>
                                                    </td>
                                                    <td class = "fin-cell">
                                                        <div class = "financials">
                                                            <div class = "curve-head">Actual</div>  
                                                            <table width = "100%">                                                                 
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="The size of the investment. Use this field if the final deliverable of the decision can be entered into the balance sheet of the organisation." >Investment</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Actual_Investment__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Actual_Investment_Desc__c}" /></td>
                                                                </tr> 
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="A price that can be completely attributed to the production of specific goods or services. Direct costs refer to materials, labour and expenses related to the implementation of the decision." >Direct Cost</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Actual_Direct_Cost__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Actual_Direct_Cost_Desc__c}" /></td>
                                                                </tr> 
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="Revenue / Turnover created by implementing this Decision" >Revenue</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Actual_Revenue__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Actual_Revenue_Desc__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="Net Present Value - The difference between the present value of cash inflows and the present value of cash outflows. NPV is used in capital budgeting to analyze the profitability of an investment or project." >NPV</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Actual_Net_Present_Value__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Actual_Net_Present_Value_Desc__c}" /></td>
                                                                </tr> 
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="The total amount of people involved in the implementation of the decision. All people that participate as part-time resources count towards this number." >People Involved</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Actual_People_Involved__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Actual_People_Involved_Desc__c}" /></td>
                                                                </tr> 
                                                                <tr>
                                                                    <td class = "cell-left-fin fin-view">
                                                                        <span title="The definition of FTE (full time equivalent) is the number of working hours that represents one full-time employee during a fixed time period. In Fingertip, the time period is defined by the Valid From and Valid To dates. As an example, you have three employees and they work 50 hours, 40 hours, and 10 hours per week – totaling 100 hours. Assuming a full-time employee works 40 hours per week, your full time equivalent calculation is 100 hours divided by 40 hours, or 2.5 FTE." >FTE</span>
                                                                    </td>
                                                                    <td><apex:outputField value="{!decision.Actual_Full_time_Equivalent_FTE__c}" /></td>
                                                                </tr>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class = "fin-val"><apex:outputField value="{!decision.Actual_Full_time_Equivalent_Desc__c}" /></td>
                                                                </tr> 
                                                                
                                                            </table>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </table> 
                                        </div>   
                                    </div>  
                                   <!------------ End Financials -------------->
                                 
                                   <!------------ Timing ------------->
                                    <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "timing-btn" onclick = "expandCollapse('timing-view','timing-btn')"></a>   
                                            <h3 class = "ft-left">Timing</h3>
                                        </div>    
                                        <div id = "timing-view">
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <!-- <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Date when the Decision is to be valid from" >Valid From</span>
                                                    </td>
                                                    <td class = "gen-block-cell classification-cell">         
                                                        <apex:outputField value="{!decision.Valid_From__c}"  />
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Date until when the Decision is to be valid" >Valid Until</span>
                                                    </td>
                                                    <td class = "gen-block-cell classification-cell">       
                                                        <apex:outputField value="{!decision.Valid_Until__c}" /> 
                                                    </td>
                                                </tr>  -->
                                                <tr>
                                                    <!-- <td class = "cell-left gen-block-cell">
                                                        <span title="The point beyond which one must not continue on his or her current course of action " >Point of no Return</span>
                                                    </td>
                                                    <td class = "gen-block-cell classification-cell">         
                                                        <apex:outputField value="{!decision.Point_of_No_Return__c}" />
                                                    </td>  -->
                                                    <td class = "cell-left gen-block-cell">
                                                        <span title="Due Date by when the Decision needs to be made" >Due Date</span>
                                                    </td>
                                                    <td class = "gen-block-cell classification-cell">       
                                                        <apex:outputField id="decisionDueDate"  value="{!decision.Due_Date__c}"/>
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                            </table>
                                            <script> 
                                             // UpdateDueDateInCommandCenterfromGenDetails();
                                            </script>
                                        </div>
                                    </div>        
                                        <!------------ End Timing ------------->
                                          
                                   <!-- Begin Customer Specific Field Sets  -->
                                   <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "custom-btn" onclick = "expandCollapse('custom-view','custom-btn')"></a>   
                                            <h3 class = "ft-left">Custom</h3>
                                        </div>    
                                        <div id = "custom-view">
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <!-- Code to display Field Sets fields  -->
                                                <apex:repeat value="{!fields}" var="f">
                                                    <tr>
                                                        <td class = "cell-left gen-block-cell"> <apex:outputText value="{!f.Label}" /> </td>
                                                        <td class = "gen-block-cell classification-cell"> <apex:outputField value="{!decision[f.fieldPath]}" /> </td>
                                                    </tr>
                                                    <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                    <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                    <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                </apex:repeat>
                                            </table>   
                                        </div>
                                   </div>  
                                   <!-- End Customer Specific Field Sets  -->
                                   <script>
                                       $(document).ready(function(){
                                            if(   '{!decisonSaveStatus}' == 'Success' )
                                            {  
                                                expandCollapse('custom-view','custom-btn');
                                                expandCollapse('custom-edit','custom-edit-btn');
                                                expandCollapse('classification-view','classification-btn');
                                                expandCollapse('financials-view','financials-btn');
                                                expandCollapse('timing-view','timing-btn');
                                                
                                                expandCollapse('classification-edit','classification-edit-btn');
                                                expandCollapse('financials-edit','financials-edit-btn');
                                                expandCollapse('timing-edit','timing-edit-btn');
                                                ViewDecision();
                                                //dummyCall2();
                                            }
                                            else{
                                            alert('Problems while saving decision');
                                            
                                            }
                                           
                                                expandCollapse('custom-view','custom-btn');
                                                expandCollapse('custom-edit','custom-edit-btn');
                                                expandCollapse('classification-view','classification-btn');
                                                expandCollapse('financials-view','financials-btn');
                                                expandCollapse('timing-view','timing-btn');
                                                
                                                expandCollapse('classification-edit','classification-edit-btn');
                                                expandCollapse('financials-edit','financials-edit-btn');
                                                expandCollapse('timing-edit','timing-edit-btn');
                                           
                                           
                                             var TopicMultiSelect ;
                                             if( $("#TopicMultiSelect").data('kendoMultiSelect') == undefined )
                                             TopicMultiSelect = $("#TopicMultiSelect").kendoMultiSelect().data("kendoMultiSelect"); 
                                       
                                        });
                                     </script>  
                                    </apex:form>
                                        <!-- Begin code for buttons at bottom  -->
                                    <div class = "gen-bottom-btns decisionBottomBorder">
                                        <button type="Button" class="k-button" id = "generalBtmEdit" > Edit </button>
                                        <button type="Button" class="k-button" id = "generalBtmDelete" > Delete</button>
                                        
                                        
                                        
                                        <apex:outputPanel rendered="{!IF(socialInput.User__c != null,true,false) }" >
                                            <button type="Button" class="k-button" id = "generalBtmClone" > Copy </button>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!IF(socialInput.User__c == null,true,false) }" >
                                            <button type="Button" class="k-button" id = "generalBtmCloneForInFormedGroup" onclick="showModal('clone-header','clone-body','clone-footer');" > Copy </button>
                                        </apex:outputPanel>
                                        
                                        
                                        <!-- <button type="Button" id = "generalBtmPdf" > PDF Summary </button> -->
                                        <apex:outputPanel rendered="{!IF(socialInput.User__c != null,true,false) }" >
                                            <button type="Button" class="k-button" id = "generalBtmPdf" > PDF Summary </button>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!IF(socialInput.User__c == null,true,false) }" >
                                            <button type="Button" class="k-button" id = "generalPdfForInformedGroupBtm" onclick="pdfGenerate();" > PDF Summary </button>
                                        </apex:outputPanel>
                                    </div>    
                                        <!-- End code for buttons at bottom -->
                            </div>
                            <!-- End view mode of decision -->
                                
                            <!-- Edit mode of decision -->
                            <div class="decisionEdit">
                                
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-general-24x24.png')}" />
                                        <h3 class = "ft-left">Decision Details</h3>
                                    </div>
                                <!-- Begin code for buttons on top -->
                                    <button type="Button" class="k-button" onclick = "getDecisionData()"> Save </button>
                                    <button type="Button" class="k-button" onclick = "ViewDecision();editView()"> Cancel </button>
                                <!-- End code for buttons on top -->
                                </div>
                                
                                <apex:form id="generalViewFrm">
                                    <!-- Encoding functionality coming from KENDO for RTF is disabled and encoding is taken at field level using std functions  -->
                                    <script>
                                         //$("#editorProblemStatement").kendoEditor({
                                            // encoded: false
                                         //});
                                         //$("#editorDecision").kendoEditor({
                                             //encoded: false
                                         //});
                                    </script>                                      
                                    <style>
                                        .k-editor {
                                            width : 657px;
                                        }
                                    </style>
                                    <!-- Table for general section -->
                                    <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "general-edit-btn" onclick = "expandCollapse('general-edit','general-edit-btn')"></a>   
                                            <h3 class = "ft-left">General</h3>
                                        </div>
                                        <div id = "general-edit">  
                                               
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-edit-tbl">
                                                <tr>
                                                    <td class = "cell-left gen-block-cell"> Title &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The title of the decision can either be written as a question, or as a subject line.You could write Shall I go to Sweden, or alternatively, Going to Sweden."  /> 
                                                    </td>
                                                    <!-- added extra column to add redline before input field -->
                                                    <td colspan = "3" class = "gen-block-cell ">
                                                        <div class="redLineContainer">
                                                            <div class="redLineDivName"> </div>
                                                             <apex:inputField id="decisionTitle" value="{!decision.Title__c}" styleClass="title-edit-input"/> 
                                                        </div> 
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="decisionEditDesc">
                                                    <td class = "cell-left gen-block-cell"> Description 
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Provide background for the Description. You can describe what needs to be taken into consideration when taking the decision. You can also state available alternatives to choose from." />
                                                    </td>
                                                     <!-- added extra column to add redline before input field -->
                                                    <td colspan = "3" class = "gen-block-cell ">
                                                        <div class="redLineContainer">
                                                            <div class="redLineDiv"> </div>
                                                            <apex:inputField value="{!decision.Problem_Idea_Advice__c}" id="editorProblemStatement" styleClass="input-width-textarea"/>   
                                                            
                                                        </div> 
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = ""></td> </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell"> Decision &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Here, state the actual decision that is taken and possibly the reasons why. For example, Going to Sweden at this time gives little business value,so we will not attend the seminar this year." />
                                                    </td>
                                                    <!-- added extra column to add redline before input field -->
                                                    <td colspan = "3" class = "gen-block-cell">     
                                                       <apex:inputField value="{!decision.Decision_Taken__c}" id="editorDecision" styleClass="input-width-textarea"/>
                                                    </td>
                                                </tr>  
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = ""></td> </tr>
                                                 <tr>
                                                    <td class = "cell-left gen-block-cell">
                                                        Identifier
                                                    </td>
                                                    <!-- added extra column to add redline before input field -->
                                                    <td class = "gen-block-cell" width = "472px">
                                                        <apex:inputField styleClass="gen-id" value="{!decision.Identifier__c}" id="identifierId"/> 
                                                    </td>
                                                    <td class = "cell-left gen-block-cell"> Private &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="If the Title is marked as private, it will not show in the Chatter or any other place in Fingertip, except to those that are specifically allowed to access the decision." />
                                                    </td>
                                                    <td class = "gen-block-cell">       
                                                        <apex:outputPanel id="privateCheckbox"><apex:inputCheckbox disabled="{!IF(decision.Phase__c != 'Draft',TRUE,FALSE)}" value="{!decision.Private__c}" id="privateChecknBoxVal"/> </apex:outputPanel>  
                                                    </td>
                                                </tr>
                                                <tr class="gapTopRow"><td colspan = "4" class = ""></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = "centerLine"></td> </tr>
                                                <tr class="gapRrow"><td colspan = "4" class = ""></td> </tr>
                                            </table>
                                            
                                        </div>    
                                    </div>   
                                    <apex:outputpanel id="generalOutputPanel"> 
                                    <!-- Table for classification section -->
                                    <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "classification-edit-btn"  onclick = "expandCollapse('classification-edit','classification-edit-btn')"></a>   
                                            <h3 class = "ft-left">Classification</h3>
                                        </div>  
                                        <div id = "classification-edit">   
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <tr>
                                                    <td class = "cell-left gen-block-cell"> Decision Type &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Select the type of Decision" />
                                                    </td>
                                                    <td class = "gen-block-cell">                                 
                                                        <apex:inputField id="decisionType" value="{!decision.Decision_Type__c}" /> 
                                                    </td>
                                                    <td class = "cell-left gen-block-cell"> Decision Approach &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Select the approach for making the decision" /> 
                                                    </td>
                                                    <td class = "gen-block-cell">                               
                                                        <apex:inputField value="{!decision.Decision_Approach__c}" /> 
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell">Category &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Select the Category of the Decision" />
                                                    </td>
                                                    <td class = "gen-block-cell">                                
                                                        <apex:inputField value="{!decision.Category__c}" /> 
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">Decision Making Style &nbsp; 
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}"  title="Select the decision Making Style applied" />  
                                                    </td>
                                                    <td class = "gen-block-cell">                                
                                                        <apex:inputField value="{!decision.Decision_Making_Style__c}" />  
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class = "cell-left gen-block-cell"> Priority &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The priority of the decision prioritizes the decision on the Home page and other listings" />
                                                    </td>
                                                    <td class = "gen-block-cell">  
                                                        <apex:inputField id="priorityValue" value="{!decision.Priority__c}" /> 
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">Topics &nbsp; 
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}"  title="The selected topics determine whether this record will be shown in the Topics workbench" />  
                                                    </td>
                                                    <td class = "gen-block-cell" id="topicMultiSelectTd">                                
                                                        <select id="TopicMultiSelect" multiple="multiple" data-placeholder="Select Topic...">
                                                            <apex:repeat value="{!lstTopicAssigned}" var="TopicAssigned" >  
                                                                <apex:outputPanel rendered="{!TopicAssigned.TopicSelected == 'selected'}" > 
                                                                    <option value="{!TopicAssigned.TopicName}" selected="selected" ><apex:outputText value="{!TopicAssigned.TopicName}" /></option>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!TopicAssigned.TopicSelected != 'selected'}" > 
                                                                    <option value="{!TopicAssigned.TopicName}" ><apex:outputText value="{!TopicAssigned.TopicName}" /></option>
                                                                </apex:outputPanel>
                                                            </apex:repeat>
                                                        </select>
                                                        <script>
                                                            $(document).ready(function(){
                                                                $('#topicMultiSelectTd').each(function(index,p){  
                                                                   $(p).find( 'input' ).css('display','none') ; 
                                                                   $(p).find('div').css('min-height','25px') ;
                                                                   $(p).find( 'input' ).next().css('display','none') ;
                                                                })
                                                                      if( $("#prioritySelect").data("kendoDropDownList") != undefined )
                                                                      $("#prioritySelect").data("kendoDropDownList").value('{!decision.Priority__c}');  
                                                                      if( $("#typeSelect").data("kendoDropDownList") != undefined )
                                                                      $("#typeSelect").data("kendoDropDownList").value('{!decision.Decision_Type__c}');  
                                                                      if( $("#TopicMultiSelectClassification").data("kendoMultiSelect") != undefined )
                                                                      var array = '{!JSENCODE(selectedTopics)}'.split(',');     
                                                                     
                                                                      $("#TopicMultiSelectClassification").data('kendoMultiSelect').value(array)                                              
                                       
                                                            });
                                                        </script>
                                                    </td> 
                                                </tr>
                                            </table>
                                        </div>    
                                    </div>    
                                    <!-- Table for financials -->
                                    <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "financials-edit-btn" onclick = "expandCollapse('financials-edit','financials-edit-btn')"></a>   
                                            <h3 class = "ft-left">Financials</h3>
                                        </div> 
                                        <div id = "financials-edit">    
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <tr>
                                                    <td class = "fin-cell">
                                                        <div class = "financials">
                                                            <div class = "curve-head">Estimated</div>   
                                                            <table width = "100%">                                                                 
                                                                <tr>
                                                                    <td class = "cell-left-fin"> Investment&nbsp;
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The size of the investment. Use this field if the final deliverable of the decision can be entered into the balance sheet of the organisation." /> 
                                                                    </td>
                                                                    <td>
                                                                        <apex:inputField value="{!decision.Estimated_Investment__c}"   onkeypress="return isNumberKey(event)" id="estimatedInvestment" />
                                                                        <apex:inputText value="{!decision.Estimated_Investment_Desc__c}" styleClass="fin-id" id="estimatedInvestmentDesc" />
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin"> Direct Cost&nbsp;
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="A price that can be completely attributed to the production of specific goods or services. Direct costs refer to materials, labour and expenses related to the implementation of the decision." />
                                                                    </td>
                                                                    <td>
                                                                        <apex:inputField value="{!decision.Estimated_Direct_Cost__c}" onkeypress="return isNumberKey(event)" id="estimatedDirectCost" />
                                                                        <apex:inputText value="{!decision.Estimated_Direct_Cost_Desc__c}" styleClass="fin-id" id="estimatedDirectCostDesc" />
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin"> Revenue&nbsp;
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Revenue / Turnover created by implementing this Decision" />
                                                                    </td>
                                                                    <td>
                                                                        <apex:inputField value="{!decision.Estimated_Revenue__c}" onkeypress="return isNumberKey(event)" id="estimatedRevenue" />
                                                                        <apex:inputText value="{!decision.Estimated_Revenue_Desc__c}" styleClass="fin-id" id="estimatedRevenueDesc" />
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin"> NPV&nbsp;
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Net Present Value - The difference between the present value of cash inflows and the present value of cash outflows. NPV is used in capital budgeting to analyze the profitability of an investment or project." /> 
                                                                    </td>
                                                                    <td>
                                                                        <apex:inputField value="{!decision.Estimated_Net_Present_Value__c}" onkeypress="return isNumberKey(event)" id="estimatedNPV"  />
                                                                        <apex:inputText value="{!decision.Estimated_Net_Present_Value_Desc__c}" styleClass="fin-id" id="estimatedNPVDesc" />
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin"> People Involved&nbsp;
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The total amount of people involved in the implementation of the decision. All people that participate as part-time resources count towards this number." /> 
                                                                    </td>
                                                                    <td>
                                                                        <apex:inputField value="{!decision.Estimated_People_Involved__c}" onkeypress="return isNumberKey(event)" id="estimatedPeople" />
                                                                        <apex:inputText value="{!decision.Estimated_People_Involved_Desc__c}" styleClass="fin-id" id="estimatedPeopleDesc" />  
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td class = "cell-left-fin"> FTE&nbsp;
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The definition of FTE (full time equivalent) is the number of working hours that represents one full-time employee during a fixed time period. In Fingertip, the time period is defined by the Valid From and Valid To dates. As an example, you have three employees and they work 50 hours, 40 hours, and 10 hours per week – totaling 100 hours. Assuming a full-time employee works 40 hours per week, your full time equivalent calculation is 100 hours divided by 40 hours, or 2.5 FTE." />
                                                                    </td>
                                                                    <td>
                                                                        <apex:inputField value="{!decision.Estimated_Full_time_Equivalent_FTE__c}" onkeypress="return isNumberKey(event)" id="estimatedFTE" />
                                                                        <apex:inputText value="{!decision.Estimated_Full_time_Equivalent_Desc__c}" styleClass="fin-id" id="estimatedFTEDesc" />
                                                                    </td>
                                                                </tr>
                                                                
                                                            </table>
                                                        </div>
                                                    </td>
                                                    <td class = "fin-cell">
                                                        <div class = "financials financials-actual" onmouseover = "showFinancialsWarning()" onmouseout = "hideFinancialsWarning()">
                                                            <div class = "curve-head">Actual</div> 
                                                            
                                                                <!-------------- Popover ---------------->
                                                            <div class = "ft-left">
                                                                <div class = "popover-gen-arrow" id = "financials-arrow"></div>
                                                                <div class = "popover-gen" id = "financials-callout">                                    
                                                                    <div class = "popover-icon ft-left">
                                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                                                                    </div>
                                                                    <div class = "popover-gen-content ft-right" id  = "financials-content">
                                                                        In order to enter this information, the decision should be decide.
                                                                    </div>
                                                                </div> 
                                                            </div>
                                                                <!-------------- End Popover ---------------->
                                                            
                                                            <apex:outputPanel id="actualPanel">
                                                                <apex:panelGroup id="actualGroup">
                                                                    <table width = "100%">                                                                 
                                                                        <tr>
                                                                            <td class = "cell-left-fin"> Investment&nbsp;
                                                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The size of the investment. Use this field if the final deliverable of the decision can be entered into the balance sheet of the organisation." /> </td>
                                                                            <td>
                                                                                <apex:inputField value="{!decision.Actual_Investment__c}" onkeypress="return isNumberKey(event)" id="actualInvestment"/>
                                                                                <apex:inputField value="{!decision.Actual_Investment_Desc__c}" styleClass="fin-id" id="actualInvestmentDesc" />
                                                                            </td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td class = "cell-left-fin"> Direct Cost&nbsp;
                                                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="A price that can be completely attributed to the production of specific goods or services. Direct costs refer to materials, labour and expenses related to the implementation of the decision." /> </td>
                                                                            <td>
                                                                                <apex:inputField value="{!decision.Actual_Direct_Cost__c}" onkeypress="return isNumberKey(event)" id="actualDirectCost"/>
                                                                                <apex:inputField value="{!decision.Actual_Direct_Cost_Desc__c}" styleClass="fin-id" id="actualDirectCostDesc" />
                                                                            </td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td class = "cell-left-fin"> Revenue&nbsp;
                                                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Revenue / Turnover created by implementing this Decision" /> </td>
                                                                            <td>
                                                                                <apex:inputField value="{!decision.Actual_Revenue__c}" onkeypress="return isNumberKey(event)" id="actualRevenue"/>
                                                                                <apex:inputField value="{!decision.Actual_Revenue_Desc__c}" styleClass="fin-id" id="actualRevenueDesc" />
                                                                            </td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td class = "cell-left-fin"> NPV&nbsp;
                                                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Net Present Value - The difference between the present value of cash inflows and the present value of cash outflows. NPV is used in capital budgeting to analyze the profitability of an investment or project." /> </td>
                                                                            <td>
                                                                                <apex:inputField value="{!decision.Actual_Net_Present_Value__c}" onkeypress="return isNumberKey(event)" id="actualNPV" />
                                                                                <apex:inputField value="{!decision.Actual_Net_Present_Value_Desc__c}" styleClass="fin-id" id="actualNPVDesc" />
                                                                            </td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td class = "cell-left-fin"> People Involved&nbsp;
                                                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The total amount of people involved in the implementation of the decision. All people that participate as part-time resources count towards this number." /> </td>
                                                                            <td>
                                                                                <apex:inputField value="{!decision.Actual_People_Involved__c}" onkeypress="return isNumberKey(event)" id="actualPeopleInvolved"/>
                                                                                <apex:inputField value="{!decision.Actual_People_Involved_Desc__c}" styleClass="fin-id" id="actualPeopleDesc" />   
                                                                            </td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td class = "cell-left-fin"> FTE&nbsp;
                                                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The definition of FTE (full time equivalent) is the number of working hours that represents one full-time employee during a fixed time period. In Fingertip, the time period is defined by the Valid From and Valid To dates. As an example, you have three employees and they work 50 hours, 40 hours, and 10 hours per week – totaling 100 hours. Assuming a full-time employee works 40 hours per week, your full time equivalent calculation is 100 hours divided by 40 hours, or 2.5 FTE." /> </td>
                                                                            <td>
                                                                                <apex:inputField value="{!decision.Actual_Full_time_Equivalent_FTE__c}" onkeypress="return isNumberKey(event)" id="actualFTE"/>
                                                                                <apex:inputField value="{!decision.Actual_Full_time_Equivalent_Desc__c}" styleClass="fin-id" id="actualFTEDesc" />
                                                                            </td>
                                                                        </tr>
                                                                        
                                                                    </table>
                                                                </apex:panelGroup>
                                                            </apex:outputPanel>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </table> 
                                        </div>    
                                    </div>  
                                    
                                 
                                      
                                    <!-- Table for timing -->
                                  <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">  
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "timing-edit-btn" onclick = "expandCollapse('timing-edit','timing-edit-btn')"></a> 
                                            <h3 class = "ft-left">Timing</h3>
                                        </div>  
                                        <div id = "timing-edit"> 
                                             
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                              <!--   <tr>
                                                    <td class = "cell-left gen-block-cell">Valid From &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Date when the Decision is to be valid from" />
                                                    </td>
                                                    <td class = "gen-block-cell">                                 
                                                        <apex:inputField value="{!decision.Valid_From__c}"  />
                                                    </td>
                                                    <td class = "cell-left gen-block-cell">Valid Until &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Date until when the Decision is to be valid" />
                                                    </td>
                                                    <td class = "gen-block-cell">                                
                                                        <apex:inputField value="{!decision.Valid_Until__c}" /> 
                                                    </td>
                                                </tr>  -->
                                                <tr>
                                                    <!--  <td class = "cell-left gen-block-cell">Point of no return &nbsp; 
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The point beyond which one must not continue on his or her current course of action " />
                                                    </td>
                                                    <td class = "gen-block-cell">                                
                                                        <apex:inputField value="{!decision.Point_of_No_Return__c}" /> 
                                                     </td> -->
                                                    <td class = "cell-left gen-block-cell">Due Date &nbsp;
                                                        <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Due Date by when the Decision needs to be made" />
                                                    </td>                           
                                                    <td class = "gen-block-cell">                                 
                                                        <apex:outputPanel id="dueDateId"> <apex:inputField value="{!decision.Due_Date__c}" /> </apex:outputPanel>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>    
                                    </div>    
                                    
                                       <!-- Begin Customer Specific Field Sets  -->
                                   <div class = "tabs-gen-block decisionTopBorder"> 
                                        <div class = "tabs-gen-head">
                                            <a href = "javascript: void(0);" class = "expand-collapse-black ft-left" id = "custom-edit-btn" onclick = "expandCollapse('custom-edit','custom-edit-btn')"></a>   
                                            <h3 class = "ft-left">Custom</h3>
                                        </div>    
                                        <div id = "custom-edit">
                                            <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl">
                                                <!-- Code to edit Field Sets fields  -->
                                                <apex:repeat value="{!fields}" var="f">
                                                    <tr>
                                                        <td class = "cell-left gen-block-cell"> <apex:outputText value="{!f.Label}" /> </td>
                                                        <td class = "gen-block-cell classification-cell"> <apex:inputField value="{!decision[f.fieldPath]}" /> </td>
                                                    </tr>
                                                </apex:repeat>
                                            </table>  
                                        </div>
                                   </div>  
                                   <!-- End Customer Specific Field Sets  -->
                                    <!-- Action function section -->
                                    
                                    <!-- Save -->
                                    <apex:actionFunction name="ProblemStatementOnClick" action="{!decisionRTFUpdate}" oncomplete="historyTabRefresh('{!decision.Id}');timingTabRefresh('{!decision.Id}');placeHoldersForFinancialFields();UpdateDueDateInCommandCenter();"  reRender="decisonViewState,sfDecisionCallout,approvalPopupFrm,titlePopupFrm,generalViewFrm,formId,copyHeader">
                                        <apex:param id="ProblemStatementValue" name="ProblemStatementValue" value="" />
                                        <apex:param id="DecisionValue" name="DecisionValue" value=""/>
                                        <apex:param id="TopicMultiSelectId" name="TopicMultiSelect" value=""/> 
                                    </apex:actionFunction> 
                                     <apex:actionFunction name="saveDecisiondetails"   action="{!decisionRTFUpdate}" oncomplete="historyTabRefresh('{!decision.Id}');timingTabRefresh('{!decision.Id}');placeHoldersForFinancialFields();UpdateDueDateInCommandCenter();"  reRender="decisonViewState,sfDecisionCallout,approvalPopupFrm,titlePopupFrm,generalViewFrm,formId,copyHeader">
                                        <apex:param name="ProblemStatementValue" value="" />
                                        <apex:param name="DecisionValue" value=""/>
                                        <apex:param name="TopicMultiSelect" value=""/> 
                                        <apex:param name="decisonSaveStatus"  value=""  />  
                                    </apex:actionFunction> 
                                    <apex:actionFunction name="ProblemStatementOnClickDecide" action="{!decisionRTFUpdateDecide}" oncomplete="historyTabRefresh('{!decision.Id}');timingTabRefresh('{!decision.Id}');placeHoldersForFinancialFields(); " reRender="decisonViewState,timingTableData,approvalPopupFrm,titlePopupFrm,generalViewFrm">
                                        <apex:param id="ProblemStatementValue1" name="ProblemStatementValue1" value="" />
                                        <apex:param id="DecisionValue1" name="DecisionValue1" value=""/> 
                                    </apex:actionFunction>
                                    
                                    <apex:actionFunction name="chatterRefresh"  action="{!dummyCall}" reRender="chatter,commandCenterDueDate,dueDateId,decisionDueDate,approvedOrRejected" oncomplete="UpdateDueDateInCommandCenter();"/>
                                    <apex:actionFunction name="refreshTimigPanel" action="{!dummyCall}" reRender="decisonViewState,timingTableData,generalOutputPanel" oncomplete="UpdateDueDateInCommandCenter();"/> 
                                    
                                    <apex:actionFunction name="editView" action="{!dummyCall}" oncomplete="placeHoldersForFinancialFields();" reRender="generalViewFrm" />
                                    
                                    <apex:actionFunction name="dummyCall2" action="{!dummyCall2}"  rerender=""  />
                                    
                                    <!-- Delete -->
                                    <apex:actionFunction name="deleteDecision" action="{!customDelete}"/>
                                    
                                    <!-- PDF -->
                                    <apex:actionFunction name="pdfGenerate" action="{!decisionPDFGenerate}"/>
                                    
                                    <apex:actionFunction name="updateTask" action="{!updatedTask}" oncomplete="getAllTaskEvent('{!JSENCODE(decision.Id)}');hideModal();chatterRerender();"  reRender="editTaskForm" >
                                        <apex:param name="sendingNotification" id="sendingNotification" value="" />
                                    </apex:actionFunction>
                                    <apex:actionFunction name="editThisTask" action="{!toBeUpdatedTask}" immediate="true" reRender="TaskpopupComponantId" oncomplete="hideLoader();">
                                        <apex:param name="taskId" id="taskId" value="" />
                                        <apex:param name="isEditable" id="isEditableId" value="" />
                                        <apex:param name="modeType" id="modeTypeId" value="" />
                                    </apex:actionFunction>
                                    <apex:actionFunction name="newTaskPopupComponent" action="{!newTaskPopupComponent}" reRender="NewTaskpopupComponantId" oncomplete="hideLoader();$('.modal-window-newTaskPopup').show();"/> 
                                    <apex:actionFunction name="newTaskPopupComponentForClose" action="{!newTaskPopupComponent}" reRender="NewTaskpopupComponantId" oncomplete="refreshActivities();chatterRerender();refreshContribution();$('body').css('overflow','auto');hideLoaderAndFade()"/>
                                    </apex:outputpanel>
                                </apex:form>
                                <div class = "gen-bottom-btns decisionBottomBorder">
                                    <!-- Begin code for buttons at  bottom  -->
                                        <button type="Button" class="k-button"  onclick = "getDecisionData()"> Save </button>
                                        <button type="Button" class="k-button"  onclick = "ViewDecision();editView();"> Cancel </button>
                                    <!-- End code for buttons at bottom -->
                                </div>
                            </div>
                            <!-- End edit mode of decision -->
                            
                            
                            </div>
                        </div>
                            <!-------------- End General Tab ----------------> 
                            <!-------------- Collaborators Tab ---------------->
                        <div id="tabs-col">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-collaborators-24x24.png')}" />
                                        <h3 class = "ft-left">People</h3>
                                    </div>
                                    <!-- Code for button -->
                                    <apex:outputPanel rendered="{!IF(OR(socialInput.User__c != null,chkRecPermission==true),true,false) }" >
                                        <button type = "button" class="k-button" id = "generalPeople" >Add/Edit People</button>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!IF(AND(socialInput.User__c == null,chkRecPermission!=true),true,false) }" >
                                        <button type = "button" class="k-button btn-disabled" id = "generalPeopleForInformedUser" >Add/Edit People</button>
                                    </apex:outputPanel>
                                    
                                    <!--  Code for Information popup -->
                                    <div class = "tabs-block-right people-hover-area ft-right" onmouseover = "showInformationOnPeople('{!socialInput.Accountable__c}','{!socialInput.Responsible__c}','{!socialInput.Consulted__c}','{!socialInput.Informed__c}','{!decision.Add_C_I_Members__c}','{!socialInput.Backup_for_Accountable__c}')" onmouseout = "hideInformationOnPeople()">
                                        <div class = "popover-gen-arrow people-hover" id = "people-arrow"></div>
                                        <div class = "popover-gen people-hover people-hover-area" onmouseout = "hideInformationOnPeople()">                                    
                                            <div class = "popover-icon ft-left">
                                                <img src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
                                            </div>
                                            <div class = "popover-gen-content ft-right" id  = "people-content">
                                                
                                            </div>
                                        </div>                           
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
                                    </div>
                                        
                                    <!-- Code for search text and button --> 
                                    <div class = "ft-right decisionSearch">
                                         <span class = "people-search k-textbox k-space-right"> 
                                             <!--<input id="searchPeople" type = "text"/>&nbsp;
                                             <button type = "button" onclick="searchPeople('{!JSENCODE(decision.id)}',$('#searchPeople').val())" >Search</button>-->
                                                <input type="text" placeholder="Search..." id="searchPeople"/>
                                                <a href="#"  class="k-icon k-i-search" onclick="searchPeople('{!JSENCODE(decision.id)}',$('#searchPeople').val())">&nbsp;</a>
                                         </span>
                                    </div>
                                 </div>
                                <div id="gridPeople" class = "decision-people"></div>
                                <script>
                                    $(document).ready(function () {
                                    
                                        kendoPeople($.parseJSON('{!JSENCODE(decisionSocialInputJson)}'));
                                    });
                                </script>
                            </div>                              
                        </div>
                            <!-------------- End Collaborators Tab ---------------->
                            <!-------------- Tasks Tab ---------------->
                        <div id="tabs-tas">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-tasks-24x24.png')}" />
                                        <h3 class = "ft-left">Activities</h3>
                                    </div>
                                    <!-- Code for buttons -->
                                    <button id="deleteTask" class="k-button" type = "button" >Delete</button> 
                                    <button id="editTask" class="k-button" type = "button">Edit</button>
                                    <button id="generalTask" class="k-button" type = "button" >New Task</button> 
                                    <button id="generalEvent" class="k-button" type = "button">New Event</button>
                                    <button id="generalLogACall" class="k-button" type = "button" >Log A Call</button>
                                    <button id="generalEmail" class="k-button" type = "button" >Send an Email</button>
                                    <!-- Code for search text and button --> 
                                   <div class = "ft-right taskSearch">
                                         <span class = " k-textbox k-space-right">
                                        <!--<input id="searchActivity" type = "text"/>&nbsp;
                                        <button type = "button" onclick="searchEventTask('{!JSENCODE(decision.id)}',$('#searchActivity').val())" >Search</button>-->
                                                <input type="text" placeholder="Search..." id="searchActivity"/>
                                                <a href="#"  class="k-icon k-i-search" onclick="searchEventTask('{!JSENCODE(decision.id)}',$('#searchActivity').val())">&nbsp;</a>
                                         </span>
                                    </div>
                                </div>
                                <div id="gridTaskEvent"></div>
                                <script>
                                    $(document).ready(function () {
                                        $('#deleteTask').addClass('btn-disabled');
                                        $('#deleteTask').attr('onclick','').unbind('click');
                                        $('#editTask').addClass('btn-disabled');
                                        $('#editTask').attr('onclick','').unbind('click');
                                         kendoTaskEvent($.parseJSON('{!JSENCODE(taskEventJson)}'),'','{!socialInput.Accountable__c}','{!socialInput.Backup_for_Accountable__c}','{!socialInput.Role_Acceptance_Status__c}','{!socialInput.Responsible__c}');
                                    });
                                </script>
                            </div>
                        </div>
                            <!-------------- End Tasks Tab ---------------->
                            <!-------------- Approvals Tab ---------------->
                        <!--- <div id="tabs-app">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-approvals-24x24.png')}" />
                                        <h3 class = "ft-left">Approvals</h3>
                                    </div>
                                </div>
                                <div id="gridApproval"></div>
                                <script>
                                    var approvalJson = $.parseJSON('{!JSENCODE(approvalJSON)}');
                                    $(document).ready(function () {
                                        
                                         
                                         kendoApproval($.parseJSON('{!JSENCODE(approvalJSON)}'));
                                    });
                                </script>
                            </div>    
                        </div>  -->  
                         <script>
                                    var approvalJson = $.parseJSON('{!JSENCODE(approvalJSON)}');
                         </script>
                            <!-------------- End Approvals Tab ---------------->
                            <!-------------- Relationship Tab ---------------->
                        <div id="tabs-rel">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
<!--                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-relations-24x24.png')}" />-->
<!--                                        <h3 class = "ft-left">Relations</h3>-->
                                                <span>
                                                  View:
                                                </span>
                                                <select id="changeRelation" onchange="changeRelation()">
                                                  <option>List</option>
                                                  <option>Network</option>  
                                                </select>
                                    </div>
                                    <script>
                                      var relationListLoad = false;
                                      var relationNetworkLoad = false;
                                      var decisionIdforNetwork = '{!Decision__c.id}'
                                      function changeRelation(){
                                           
                                           var selectValue = document.getElementById('changeRelation').value;
                                           if(selectValue == 'List')
                                           { 
                                           
                                             if(!relationListLoad){
                                                
                                                 relationListLoad = true;
                                             }
                                             document.getElementById('networkdiagram').style.display = 'none';  
                                             document.getElementById('gridRelationshipWrapp').style.display = 'block';   
                                              
                                           }
                                           else{
                                             if( !relationNetworkLoad){
                                                showLoader(); 
                                                document.getElementById('networkframe').src = '/apex/networkgraph?id='+'{!Decision__c.id}';  
                                                relationNetworkLoad = true;
                                                
                                             }
                                             document.getElementById('networkdiagram').style.display = 'block';  
                                             document.getElementById('gridRelationshipWrapp').style.display = 'none';   

                                           }
                                      }
                                        
                                    </script>
                                    <button id="generalRelation" class="k-button" type = "button">Add Relations</button> 
                                </div>
                                
                                 <div id="gridRelationshipWrapp"  ><div id="gridRelationship"></div></div>
                                 
                                <div id="networkdiagram" style="display:none">
                                        <!--<div id="fullscreen" class="floatRight ">
                                             <a href="#" class="requestfullscreen"><span title="View in full screen" class="icon-expand" style="width:22px;height:22px;"></span></a>
                                             <a href="#" class="exitfullscreen" style="display: none"><span title="View in full screen" class="icon-contract" style="width:22px;height:22px;"></span></a>
                                         </div>
                                        <div class="toClear " >    
                                             <iframe src="" id="networkframe" frameborder="0" width="100%" height="600px"  style="margin-top: 10px;"></iframe>
                                        </div>--> 
                                    <div id="fullscreen" >
                                        <div class="floatLeft" style="font-weight:bold;">(Beta)</div>
                                         <a href="#" class="requestfullscreen"><span title="View in full screen" class="icon-expand" style="width:22px;height:22px;"></span></a>
                                         <a href="#" class="exitfullscreen" style="display: none"><span title="View in full screen" class="icon-contract" style="width:22px;height:22px;"></span></a>
                                        
                                            <input id="slider" style="width: 200px;" />
                                            <script>
                                                $(document).ready(function() {
                                                    $("#slider").kendoSlider(
                                                    
                                                    {
                                                        increaseButtonTitle: "Right",
                                                        decreaseButtonTitle: "Left",
                                                        showButtons: true,
                                                        min: 1,
                                                        max: 10,
                                                        largeStep: 1,
                                                        tooltip: {
                                                            enabled: false
                                                        }
                                                    }
                                                    );
                                                   var slider = $("#slider").getKendoSlider();
                                                    slider.wrapper.css("width", "225px");
                                                    slider.wrapper.css("top", "35px");
                                                    slider.wrapper.css("float", "right");
                                                    var sliderValue = slider.value(1);
                                                    slider.resize();
                                                });
                                            </script>
                                            
                                         <iframe src="" id="networkframe" frameborder="0" width="1280px" height="400px" />
                                    </div> 
                                </div>
                               
                            </div>  
                            <script>  
                             $(document).ready(function(){
                                kendoRelationship($.parseJSON('{!JSENCODE(relationshipJson)}'));  
                             });                            
                            </script> 
                            <script>
                            document.getElementById("networkframe").onload = function() {
                              hideLoader();hidefade();
                            };
                            </script>                           
                        </div>
                            <!-------------- End Relationship Tab ---------------->
                            <!-------------- Attachments Tab ---------------->
                        <div id="tabs-att">
                            <!-- <div class = "tabs-block border-blue">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon_attachment_24.png')}" />
                                        <h3 class = "ft-left">Notes &amp; Attachments</h3>
                                    </div>
                                    
                                    <button id="generalNote" type = "button"  >New Note</button> 
                                    <button id="generalAttachment" type = "button" >Attach File</button>
                                
                                </div>                            
                                <div id="gridAttachmentNote"></div>
                                <script>
                                    $(document).ready(function () {
                                         kendoAttachmentNote($.parseJSON('{!JSENCODE(attachmentNoteJson)}'));
                                    });
                                </script> 
                            </div>  -->    
                            <apex:relatedList subject="{!Decision__c}" list="CombinedAttachments" />
                        </div>
                            <!-------------- End Attachments Tab ---------------->
                            <!-------------- History Tab ---------------->
                        <!--<div id="tabs-his">
                            <div class = "tabs-block border-blue">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-history-24x24.png')}" />
                                        <h3 class = "ft-left">History</h3>
                                    </div>
                                </div>  
                                <div id="gridHistory"></div>
                                <script>
                                    $(document).ready(function () {
                                         kendoHistory ($.parseJSON('{!JSENCODE(historyJson)}'));
                                    });
                                    
                                </script>
                            </div>       
                        </div>-->
                            <!-------------- End History Tab ---------------->
                            <!-------------- Quality Tab ---------------->
                        <!--<div id="tabs-qua">
                            <div class = "tabs-block border-blue">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-quality-24x24.png')}" />
                                        <h3 class = "ft-left">Issues</h3>
                                    </div>
                                    <button type = "button" id="generalIssue" >Add Issues</button> 
                                </div> 
                                <div id="gridIssues"></div>
                                <script>
                                    $(document).ready(function () {
                                         kendoIssues ($.parseJSON('{!JSENCODE(issuesQualityJson)}'));
                                    });
                                    
                                </script>
                            </div>      
                        </div>-->
                            <!-------------- End Quality Tab ---------------->
                            <!-------------- Timing Tab ---------------->
                        <div id="tabs-tim">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left">
                                        <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-timing-24x24.png')}" />
                                        <h3 class = "ft-left">Timing</h3>
                                        <img class = "timing-help ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title = "In this section, you can schedule the different phases of the decision-making process. You cannot schedule phases that have already taken place. The Elapsed Time -field will show N/A if you backward in the decision-making process, as calculating the elapsed time in that case would be a little tricky." />                                        
                                    </div>
                                     
                                <!-- <div class="ft-right timingDataWhole" ><span class="ft-left"><span class="timingDataLabel">Due Date: </span><apex:outputField styleclass="ft-left" id="timingTableData" value="{!Decision.Due_Date__c}" /></span></div> -->
                                </div>
                                
                                <script>
                                    $(document).ready(function () {  
                                        kendoTiming ($.parseJSON('{!JSENCODE(timeSectionJSON)}'));
                                        //updateTimerCountdown($.parseJSON('{!JSENCODE(timeSectionJSON)}'));

                                    });
                                </script> 
                                <div id="timingAndHistoryDiv">
                                    <ul id="panelbar">
                                        <li id="decisionTiming">
                                            <span><span style="font-weight: bold">Advanced timing</span></span>
                                            <div id="gridTime" ></div>
                                        </li>
                                        <li id="decisionHistory" >
                                            <span style="font-weight: bold">History</span>
                                            <div id="gridHistory" >Loading...</div>
                                        </li>
                                    </ul>
                                </div>
                                <style>
                                    #panelbar .k-header {
                                        margin-top : 0px !important;
                                    }
                                    #gridTime.k-content{
                                        padding : 0px !important;
                                        margin-left : 0px !important;
                                        min-height : 280px !important;
                                        height:320px !important;
                                    }
                                    #gridHistory.k-content{
                                        padding : 0px !important;
                                        margin-left : 0px !important;
                                        height:auto !important;
                                    }
                                    #gridHistory .k-grid-content{
                                        height : auto !important;
                                        min-height:195px;
                                    }
                                    #tabs-8 .k-content{
                                        min-height : 56px !important;
                                        height:auto;
                                        border: 1px solid #ccc;
                                    }
                                    #timingAndHistoryDiv {
                                       // padding : 10px !important;
                                    }
                                    #panelbar {
                                        margin-top : 0px !important;
                                    }
                                    #gridTime .k-grid-content tr td{
                                        height : 25px  !important;
                                    }
                                </style>
                                <script>
                                    var contentLoadChkForTiming = 'stateless';
                                    var contentLoadChkForHistory = 'stateless';
                                    $("#panelbar").kendoPanelBar({
                                        select: onSelect,
                                        expand: onExpand,
                                        collapse: onCollapse,
                                        activate: onActivate,
                                        contentLoad: onContentLoad
                                    });
                                    function onSelect(e) {
                                        
                                    }
                                    function onCollapse(e) {
                                        
                                    }
                        
                                    function onActivate(e) {
                                        $('#gridTime .k-grid-content').css('height','300px');
                                        $('#gridTime .k-grid-content').css('font-weight','normal');
                                    }
                        
                                    function onContentLoad(e) {
                                        
                                    }
                                    function onExpand(e) {
                                        if($(e.item).find("> .k-link").text() == 'Advanced timing'){
                                            if(contentLoadChkForTiming == 'stateless'){
                                                DecisionView.timingTab( '{!JSENCODE(decision.id)}',function(result, event)
                                                {
                                                    if (event.status)
                                                    {  
                                                        $('#gridTime').html('');      
                                                        var decisionTimeJson = removeQuotes(result);
                                                        kendoTiming(decisionTimeJson); 
                                                        UpdateDueDateInCommandCenter();
                                                        contentLoadChkForTiming = 'statefull';                     
                                                    }
                                                }, {escape:true});
                                            }
                                        } else {
                                            if(contentLoadChkForHistory == 'stateless'){
                                                DecisionView.viewHistory( '{!JSENCODE(decision.id)}',function(result, event)
                                                {
                                                    if (event.status)
                                                    {  
                                                        $('#gridHistory').html('');      
                                                        var decisionHistoryJson = removeQuotes(result);
                                                        kendoHistory(decisionHistoryJson); 
                                                        contentLoadChkForHistory = 'statefull';                     
                                                    }
                                                }, {escape:true});
                                            }
                                        }
                                    }
                                </script>
                            </div>     
                        </div>
                          <!-------------- End Timing Tab ---------------->
                         <!-------------- Matrix Tab ---------------->
                          <div id="tabs-mat">
                           
                          

    
  <script>
                $(document).ready(function() {
                    $("#panelbar").kendoPanelBar({
                        expandMode: "single"
                    });
                });
            </script> 
                          
                          
                          
                                    <div class = "tabs-block decisionTopBorder">
                                            <div class = "tabs-block-head">
                                            <div class = "tabs-block-left">
                                                <div class="icon-grid ft-left">&nbsp; </div>
                                                <h3 class = "ft-left">Decision Matrix Tool</h3>
                                                <img class = "timing-help ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="The grid lets you enter options (things you'll choose between) in columns. Just click the add option button, and enter the name of each option.
Then you need to enter criteria that you want to rate your options on, like price, quality, frequency etc. Click the add criteria button and name your criteria.
Each criterion needs a weight (from 1 to 10), which indicates how important it is relative to the other criteria.
Then, just mark your options on the criteria by typing a number from 0 to 10 in the grid. The total scores will be calculated for you at the bottom of each column. 
You can add or delete options and criteria as much as you like." />                                         
                                            </div>                                     
                                    </div>                                  
                                    <div id="gridForm">   
                                     <textarea id="gridTitle" maxlength="80" onkeydown=" return ( onKeyDownFunction(event))"    disabled="disabled" onchange="saveMatrixDataTab();setChartTitle()"  type="text" >Put your title here...</textarea> 
                                       <ul id="topicsFiltersPanelbar" >
                                            <li class="k-state-active">
                                                   
                                                <span class="k-link k-state-selected">Table</span>
                                                 
                                                <div class = "workbench-filter" >
                                                   <table id="matrixTable" cellspacing="0" border="0"> </table>                                   
                                                </div>
                                            </li>
                                        </ul>
                                        <script>
                                            $("#topicsFiltersPanelbar").kendoPanelBar({
                                                //expandMode: "single"
                                               
                                            });
                                        </script>
                                       <style> 
                                            #topicsFiltersPanelbar  .workbench-filter{
                                                margin: 0 0 10px;
                                             overflow: hidden;
                                             max-width: 1430px;
                                             width: 1205px;
                                             font-family: Arial,Helvetica,sans-serif;
                                             font-size: 12px !important;
                                             color: #222;
                                             background-color: #f2f2f2;
                                           }
                                     
                                         #topicsFiltersPanelbar{
                                            background-color: #f2f2f2;
                                            background:#f2f2f2;
                                            border:0px;
                                            width: 8em;
                                            min-height:2.3em;
                                            /*margin-left: 1px;*/
                                            margin-top: 3px;
                                            margin-bottom: 2px;
                                         }
                                         
                                         #topicsFiltersPanelbar .k-state-highlight .k-state-selected{
                                            background-color: #f8f8f8!important;
                                            background:#f8f8f8 !important;
                                            border-color: #f8f8f8 !important;
                                        }
                                    
                                        #topicsFiltersPanelbar .k-state-active .k-state-selected{
                                            background-color: #fff !important;
                                            background:#fff !important;
                                            border-color: #fff !important;
                                            
                                        }
                                    
                                        #topicsFiltersPanelbar .k-state-highlight .k-state-selected:hover,#topicsFiltersPanelbar .k-state-active .k-state-selected:hover{
                                            background-color: #ccc !important;
                                            background:#ccc !important;
                                            border-color: #ccc !important;
                                         }
                                        .k-panelbar .k-link{
                                                padding: .2em 1.1em .4em 2.5em  !important;
                                            }
                                        .k-panelbar .k-state-hover .k-i-arrow-s, .k-panelbar .k-state-selected .k-i-arrow-s, .k-panelbar .k-state-selected .k-i-arrow-n{
                                                margin: 5px 10px;
                                                background-position-x:0px;
                                         }
                                         .k-panelbar .k-content{
                                            /*width: 1442px;*/
                                            border-bottom-width: 3px;
                                            border-bottom-color: #fff;
                                          }
                                          
                                          #topicsFiltersPanelbar workbench-filter div{
                                            min-width:10em;
                                            min-height:5em;
                                            padding: 1em 2em;
                                           }
                                       
                                           .workbench-filter .k-state-hover .k-i-arrow-s, .workbench-filter  .k-state-selected .k-i-arrow-s, .workbench-filter  .k-state-selected .k-i-arrow-n{
                                                margin: 0px;
                                                background-position-x:0px;
                                         }
                                     
                                         .workbench-filter .k-dropdown{
                                            position: relative;
                                            display: inline-block;
                                            width: 9em !important;
                                            overflow: visible;
                                            border-width: 0;
                                            vertical-align: middle;
                                         }
                                        </style>
                                    </div> 
                                    <div class="section-head-matrix"></div>  
                                    <div class="section-matrix">
                                          <div id="matrixchart"   >
                                    </div>  
                                    <script>
                                    function createChartMatrix(data) {  
                                    
                                        var  series = data.series;
                                        var  categories  = data.categories; 
                                        var  title  = data.title; 
                                        $("#matrixchart").kendoChart({
                                            title: {
                                                text:  title
                                            },
                                             chartArea: { 
                                                width: 607, 
                                             },
                                            legend: {
                                                position: "right"
                                            },
                                            seriesDefaults: {
                                                type: "column",
                                                stack: true
                                            },
                                            series: [{ 
                                                data: series ,   
                                                markers: { type: "square" }
                                            }],
                                            valueAxis: { 
                                             max: 100,
                                             min:0, 
                                             
                                             labels: {
                                                    format: "{0}%"
                                                     
                                                },
                                                line: {
                                                    visible: false
                                                }
                                            },
                                            categoryAxis: {
                                                
                                                categories:  categories,
                                                majorGridLines: {
                                                    visible: false 
                                                }
                                            },
                                            tooltip: {
                                                visible: true,
                                                format: "{0}"
                                            }
                                        });
                                    }
                            
                                    $(document).ready(function() {
                                        
                                         $(".options").bind("change", refresh);
                                    });
                            
                                    function refresh() {
                                        var chart = $("#chart").data("kendoChart"),
                                            series = chart.options.series,
                                            type = $("input[name=seriesType]:checked").val(),
                                            stack = $("#stack").prop("checked");
                            
                                        for (var i = 0, length = series.length; i < length; i++) {
                                            series[i].stack = stack;
                                            series[i].type = type;
                                        };
                            
                                        chart.refresh();
                                    }
                                </script>      
                                    <script>    
                                        // create decison is role and backup variables
                                        var decisionGridId = '{!JSENCODE(decision.Id)}';
                                        var roleString = '{!JSENCODE(socialInput.Role__c)}';  
                                        var backupForAcc = '{!(socialInput.Backup_for_Accountable__c)}'; 
                                        var decisionPhase = '{!Decision.Phase__c}'; 
                                        var roleAcceptance      = '{!socialInput.Role_Acceptance_Status__c}';  
                                       
                                        $(document).ready(function () {   
                                                    
                                                    
                                                    var myList=  [];
                                                    var title ='';
                                                  
                                                   // capture json object from matrixSectionJSON controller variable
                                                   if( '{!matrixSectionJSON}' != '' ) 
                                                   {
                                                    myList =  (JSON.parse('{!JSENCODE(matrixSectionJSON)}')).matrix;
                                                    title  =   JSON.parse('{!JSENCODE(matrixSectionJSON)}').title;
                                                   }
                                                   else 
                                                   {                                                  
                                                    myList = [{"name" :"Criteria 1","weight":"0", "Option-A" : "", "Option-B" : ""},{"name" :"Criteria 2","weight":"0", "Option-A" : "", "Option-B" : ""} ] ;
                                                    title  =  'Put your title here...';
                                                   }
                                                   //update title
                                                   document.getElementById('gridTitle').value = title;
                                                    var footerTbody$ = $('<tfoot id="theFoot"/>'); 
                                                    var footerTr$ = $('<tr id="footRow"/>'); 
                                                    // function to build  table body
                                                    function buildHtmlTable() {
                                                         if(  $('#tbody').length > 0)
                                                         return;
                                                         var columns = addAllColumnHeaders(myList);
                                                         var headerTBody$ = $('<tbody id="tbody"/>');
                                                         if( myList.length >0 ){
                                                             for (var i = 0 ; i < myList.length ; i++) {
                                                                 var row$ = $('<tr/>');
                                                                 row$.append($('<th/>').html('<a  title="Delete"   class="gridLink" onclick="saveMatrixDataTab()">X</a><textarea maxlength="40" disabled class="transp">'+ myList[i].name +'</textarea><select  disabled id="weight'+ i  +'"><option value="0">Weight</option><option value="1">1</option><option value="2">2</option><option value="3">3</option>option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option><option value="9">9</option><option value="10">10</option></select> '));
                                                                 row$.find( '#weight'+i  ).val( myList[i].weight );
                                                                 for (var colIndex = 0 ; colIndex < columns.length ; colIndex++) {
                                                                     var cellValue = myList[i][columns[colIndex]];
                                                         
                                                                     if (cellValue == null) { cellValue = ""; }
                                                                     if( columns[colIndex] != 'name' ) 
                                                                     {    
                                                                         input$ =  $('<input class="userScore" disabled value="'+cellValue+'" >').change(function(){saveMatrixDataTab();} )
                                                                         td$    = $('<td/>');
                                                                         td$.append(input$);
                                                                         row$.append(td$);
                                                                          
                                                                     }
                                                                     
                                                                 }
                                                                 headerTBody$.append(row$);
                                                                 $("#matrixTable").append(headerTBody$);
                                                                 footerTbody$.append(footerTr$);
                                                                 $("#matrixTable").append(footerTbody$);
                                                             }
                                                         }
                                                     }
                                                     
                                                     // Adds a header row to the table and returns the set of columns.
                                                     // Need to do union of keys from all records as some records may not contain
                                                     // all records
                                                         function addAllColumnHeaders(myList)
                                                     {
                                                         var columnSet = [];
                                                         var headerTBody$ = $('<thead id="items"/>');
                                                         var headerTr$ = $('<tr/>');
                                                        
                                                         if(myList.length == 0){                                                         
                                                           headerTr$.append('<th id="add"><input   type="button" value=" add option » "><input   type="button" value=" add criteria "></th>') ;
                                                         }
                                                         else 
                                                         { 
                                                             
                                                               headerTr$.append('<th id="add"><input id="addOption" class="gridLink"  type="button" value=" add option » "><input  id="addCriteria"  class="gridLink" type="button" value=" add criteria "></th>') ;
                                                               footerTr$.append('<th class="blank"><span id="totalsLabel">Total score</span></th>');
                                                             
                                                             for (var i = 0 ; i < myList.length ; i++) {
                                                                 var rowHash = myList[i];
                                                                 for (var key in rowHash) {
                                                                     if ($.inArray(key, columnSet) == -1){
                                                                        
                                                                         
                                                                        if(  key != 'weight' && key != 'name')                                                                       
                                                                        {  columnSet.push(key);
                                                                           headerTr$.append($('<th/>').html('<a title="Delete" class="gridLink">X</a><input maxlength="40" class="transp" disabled  value="'+key+'" type="text">'));
                                                                           footerTr$.append('<th><input type="text" disabled></th>');
                                                                        } 
                                                                        else
                                                                        if( key == 'name') 
                                                                        {
                                                                         columnSet.push(key);
                                                                        }                                                               
                                                                     }
                                                                 }
                                                             } 
                                                          }   
                                                         headerTr$.append('<th class="blank"></th>'); 
                                                         headerTBody$.append(headerTr$)
                                                         $("#matrixTable").append(headerTBody$);
                                                          
                                                         return columnSet;
                                                     }  
                                                   //create table here  
                                                   buildHtmlTable();
                                                   //Calculate total here
                                                   calcTotals() ; 
                                                   // Call setup if user is able to update data
                                                   if(  ( roleString.indexOf('Accountable') != -1 ) || ( roleString.indexOf('Responsible') != -1 ) || ( backupForAcc == 'true')  )
                                                   {   if( decisionPhase != 'Close'  )
                                                       if( roleAcceptance ==  'Approved/Accepted')
                                                       addEvent_(window, 'load', setup, false) ;
                                                   } 
                                        });
                                        var input = document.getElementById('gridTitle');
                                        function onKeyDownFunction(event) {
                                            var key = event.keyCode || event.charCode;
                                            if(   ( event.srcElement || event.target).value.length == 80 )
                                            {  
                                                if( ! ( key == 8 || key == 46 || key == 37 || key == 38 || key == 39 || key == 40 ) )
                                                {
                                                alert("Title cannot be more than 80 characters");  
                                                return false;
                                                }
                                                else
                                                {
                                                   return true;
                                                }
                                            
                                            }
                                        };
                                        
                                       function onKeyDownHeaderFunction(event) {
                                            var key = event.keyCode || event.charCode;
                                            if(/^[a-zA-Z0-9- ]*$/.test(    ( event.srcElement || event.target).value    ) == false)
                                            {   
                                                var input = ( event.srcElement || event.target);
                                                input.value = ''; 
                                            }   
                                        };
                                        
                                        function mouseOutFunction(event) {
                                            var key = event.keyCode || event.charCode;
                                            if(   ( event.srcElement || event.target).value.length == 80 )
                                            {   if( ! ( key == 8 || key == 46 || key == 37 || key == 38 || key == 39 || key == 40 ) )
                                                {
                                                alert("Title cannot be more than 80 characters");  
                                                return false;
                                                }
                                                else
                                                {
                                                   return true;
                                                } 
                                            }
                                        };
                                        
                                      $(document).ready(function() {        // used for tabs, changed to kendo tab
                                            $("#tabs").kendoTabStrip({
                                                animation:  {
                                                    open: {
                                                        //effects: "fadeIn"
                                                    }
                                                }
                                            });
                                        });
                                    </script>    
                                </div>   
                          </div>  
                          </div>
                          <!-------------- End Matrix Tab ---------------->
                          <div id="tabs-cont">
                            <div class = "tabs-block decisionTopBorder">
                                <div class = "tabs-block-head">
                                    <div class = "tabs-block-left icon-smiley">
                                        <!--<img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-relations-24x24.png')}" />-->
                                        <h3 class = "ft-left">Contribution</h3>
                                    </div>
                                </div>
                                <div id="gridContribution"></div>
                                <script>
                                    $(document).ready(function () {
                                         //kendoContribution($.parseJSON('{!JSENCODE(jsonContribution)}'));
                                    });
                                </script>
                            </div>
                          </div>
                    </div>      
                </td>
                    <!---------- End Main Content ------------->
                    
                    <!---------- Right Content ------------->
                      <!-- NOW removed -->
                    <!---------- End Right Content ------------->
            </tr>        
        </table>
        
        <!----------- Popover Group -------------->
     <div class = "popover-social">
         <div class = "popover-arrow-hold"><div class = "popover-social-arrow"></div></div>
         <div class = "popover-social-top">Group Members</div>
         <div class = "popover-social-content"></div>
         <div class = "popover-social-btm">Click on the link to see more</div>
     </div>
         <!----------- End Popover Group -------------->   
         
        <!--------- Decision Approval Popup ----------->
    <div class = "modal-window-approve" id = "modal-decision-approve">
        <div class = "modal-approval-head">
            <!--------- Popup Decision Approval Header -----------> 
            <div class = "modal-plan-header ft-left" id = "approve-header" style="display:none">
                
            </div>
            <!--------- End Popup Decision Approval Header ----------->             
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideDecisionApprovalModal()"></a>  
        </div>
        <div class = "modal-approval-content">
            <input type="hidden" value="" id="approvalValues" />
            <!--------- Popup Decision Approval Content -----------> 
            <div class = "modal-plan-content" id = "note-body">
                <apex:form id="approvalPopupFrm">
                <table cellspacing = "0" cellpadding = "6" class = "modal-tbl">
                    <tr>
                        <td class = "cell-left popover-label">
                            Title 
                        </td>
                        <td class = "cell-right title-bold">
                            <apex:outputField value="{!decision.Title__c}" />
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left popover-label">
                           Description <br/>
                        </td>
                        <td class = "cell-right">
                            <apex:outputField value="{!decision.Problem_Idea_Advice__c}" />
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left popover-label">
                            Decision
                        </td>
                        <td class = "cell-right">
                            <apex:outputField value="{!decision.Decision_Taken__c}" />
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left popover-label">
                            Comments
                        </td>
                        <td class = "cell-right">
                            <textarea class = "modal-textarea issue-textarea" id="approvalComments" maxlength="4000"></textarea>
                        </td>
                    </tr>
                </table>
                </apex:form>
            </div> 
                <!--------- End Popup Decision Approval Content ----------->
               
        </div>
        <div class = "modal-approval-btm">
                <!--------- Popup Decision Approval Footer ----------->  
            <div id = "decision-footer-approve">
                <button type = "button" class="k-button" id="approveAcceptBtn" onclick="approvedReject('{!JSENCODE(decision.Id)}', 'Approve');" ></button>
                <button type = "button" class="k-button" id="opposeRejectBtn" ></button>
                <button type = "button" class="k-button" onclick = "hideDecisionApprovalModal()">Cancel</button>
            </div>    
                <!--------- End Popup Decision Approval Footer ----------->             
        </div>
    </div>  
        <!--------- End Decision Approval Popup -----------> 
         
            <!--------- Upload Image Popup----------->
          
    <div class = "modal-window-upload" id = "modal-upload-image">
        <div class = "modal-head-upload">
            <div class = "ft-left" id = "upload-header" style="display:none">
                Upload Decision Image
            </div>
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideModalUpload()"></a>
        </div>
        <apex:form > 
        <div class = "modal-upload-content">   
                <!--------- Popup Upload Image Content ----------->
            <div id = "upload-body">
               Select Image: <apex:inputFile value="{!fileBody}"  accept="image/*"  id="loadfile" styleClass="k-button"/>   
            </div>    
                <!--------- End Popup Upload Image Content ----------->
        </div>
        <div class = "modal-upload-btm">        
                <!--------- Popup Upload Footer -----------> 
            <!-- <apex:actionFunction name="saveDecisionImage" action="{!uploadDecisionImage}" /> --> 
            <div id = "upload-footer">
               <!-- <button type = "button" onclick = "saveDecisionImage()">Save</button>
               <button type = "button" onclick = "hideModalUpload()">Cancel</button> -->
               <apex:commandButton value="Save" action="{!uploadDecisionImage}" styleClass="k-button"/> 
               <apex:commandButton value="Cancel" action="{!cancelUploadImage}" onclick="hideModalUpload()" styleClass="k-button"/> 
            </div>
                <!--------- End Popup Upload Footer -----------> 
        </div> 
        </apex:form>   
    </div>
    
        <!--------- End Upload Image Popup ----------->    
    
        <!--------- Update Image Popup----------->
     <div class = "modal-window-upload" id = "modal-update-image">
        <div class = "modal-head-upload">
            <div class = "ft-left" id = "upload-header" style="display:none">
                Upload Image
            </div>
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideModalUpload()"></a>
        </div>
        <apex:form > 
        <div class = "modal-upload-content">   
                <!--------- Popup Upload Image Content ----------->
            <div id = "upload-body">
               Select Image: <apex:inputFile value="{!fileBodyUpdate}"  accept="image/*"  id="loadfile" styleClass="k-button"/>    
            </div>    
                <!--------- End Popup Upload Image Content ----------->
        </div>
        <div class = "modal-upload-btm">        
                <!--------- Popup Upload Footer -----------> 
            <div id = "upload-footer">
               <!-- <button type = "button" onclick = "saveDecisionImage()">Save</button>
               <button type = "button" onclick = "hideModalUpdate()">Cancel</button> -->
                <apex:commandButton value="Save" action="{!updateDecisionImage}" styleClass="k-button"/> 
                <apex:commandButton value="Cancel" action="{!cancelUploadImage}" onclick="hideModalUpdate()" styleClass="k-button"/> 
                <apex:actionFunction name="deleteDecisionImage1" action="{!deleteUploadImage}" />
                
            </div>
                <!--------- End Popup Upload Footer -----------> 
        </div> 
        </apex:form>   
    </div>   
        <!--------- End Update Image Popup ----------->  
        
    <div class = "modal-window-relation">  
        <!--------- Popup Relation Header ----------->
        <div class = "modal-relation-head">     
            <div class = "modal-decision-header ft-left" id = "relation-header" style="display:none">
               Add Relation
            </div>                        
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideRelationModal();cancelRelation();"></a> 
        </div> 
            <!--------- End Relation Header ----------->   
            <!--------- Popup Relation Content ----------->
        <div class = "modal-relation-content">
            <p class= "relation-help">
                Select the object and click search to get the complete list of records or type the name you are looking for.
            </p>
            <apex:form id="relationsId">
                <div class = "relation-search">
                    Search within &nbsp;
                    <select id="chooseObject"> 
                       <!-- userAccessibleobjects contains the list of objects user can access -->
                       <apex:repeat value="{!userAccessibleobjects}" var="option">
                        <option value="{!option.value}">{!option.label} </option>
                       </apex:repeat>
                    </select>
                    &nbsp;&nbsp;for &nbsp;
                    <input type = "text" id="searchText"/>
                    <button type = "button" class="k-button" onclick="searchItems();">Search</button>
                     
                    <apex:actionFunction name="searchMyItems" action="{!searchItems}" reRender="searchTable,addTemplate" oncomplete="validateSearch('{!srchRelationship.size}');">
                        <apex:param name="chooseObject" id="chooseObject" value="" />
                        <apex:param name="searchText" id="searchText" value="" />
                    </apex:actionFunction>
                    <apex:actionFunction name="Add" action="{!addFromSrch}" oncomplete="refreshRelationship('{!JSENCODE(decision.Id)}');removeSrchTxt();hideRelationModal();" reRender="relationsId"/>
                    <apex:actionFunction name="existingRelationsAddToSet" action="{!existingRelationsAddToSet}" oncomplete="showModalRelation();hideLoader();"/>
                    <apex:actionFunction name="cancelRelation" action="{!cancelRelation}" reRender="relationsId" />
                </div>
                <apex:outputPanel id="searchTable" >
                    <table cellspacing = "0" cellpadding = "0" width = "100%"  class = "relation-tbl">
                        <tr>
                            <td class = "rel-th rel-td1" >Select</td>
                            <td class = "rel-th" width="340px">Object Name</td>
                            <td class = "rel-th rel-td2">Object Type</td>
                            <td class = "rel-th rel-td3">Relation</td>
                            <td class = "rel-th rel-td2">Strength</td>
                            <td class = "rel-th">Notes</td>
                        </tr>
                        <apex:variable var="rowNumber" value="{!0}" />
                        <apex:repeat value="{!srchRelationship}" var="rc" id="relationRepeat">  
                                                     
                                <tr>
                                    <td class = "rel-td rel-left rel-center "><apex:inputCheckbox value="{!rc.Select__c}" onchange="enableTextbox(this,'{!rowNumber}')" styleclass="chksel" id="chkBoxSelected"/></td>
                                    <td class = "rel-td rel-td-name" width="340px"><apex:outputText value="{!rc.Child_Record_Name__c}"/></td>
                                    <td class = "rel-td"><apex:outputText value="{!rc.Child_Object_Name__c}"  /></td>
                                    <td class = "rel-td {!rowNumber}picklist"><apex:inputField value="{!rc.From_Relation__c}"  label="" id="relationId"/></td>
                                    <td class = "rel-td {!rowNumber}picklist"><apex:inputField value="{!rc.Strength__c}" label="" id="strengthId"/></td>
                                    <td class = "rel-td rel-right {!rowNumber}textarea"><apex:inputField styleClass="rel-note-text" value="{!rc.Notes__c}" label="" id="notesId"/> </td>
                                </tr>
                                <apex:variable var="rowNumber" value="{!rowNumber+1}" />
                         
                        </apex:repeat>
                    </table>
                    <script>
                         $(document).ready(function () {
                          $("select[id$='relationId']").attr("disabled", "disabled");
                          $("select[id$='strengthId']").attr("disabled", "disabled");
                          $("textarea[id$='notesId']").attr("disabled", "disabled");
                          // On load hide social actions addnew and evaluation command center
                          $('#command-center-social').css('display','none');
                          $('#command-center-actions').css('display','none');
                          $('#command-center-add-new').css('display','none');
                          $('#command-center-evaluation').css('display','none');
                          $('#command-center-countdown').css('display','none');
                          });
                          function enableTextbox(e,id) {   
                               if(e.checked){ 
                                 $("."+id+'picklist').find('select').attr("disabled",  false);
                                 $("."+id+'textarea').find('textarea').attr("disabled", false);
                               } else {   
                                 $("."+id+'picklist').find('select').attr("disabled",  true);
                                 $("."+id+'textarea').find('textarea').attr("disabled", true);
                               }
                         }
                         $('#searchText').keypress(function(e){ 
                            if (e.keyCode == '13'){
                              searchItems();
                              document.getElementById('searchText').blur();
                              return false;
                            }
                        });
                       function removeSrchTxt(){
                           document.getElementById('searchText').value = '';
                       }
                       function searchItems(){
                           var chooseObject = document.getElementById('chooseObject').value;
                           var searchText= document.getElementById('searchText').value;
                           searchMyItems(chooseObject,searchText);
                           
                       }
                       
                      function validateSearch(lstSize){
                            if(lstSize == 0)    
                                alert('No items to display');
                       }
                       
                       function AddRelations(lstSize){
                            var valid = false;
                            for(i = 0 ; i < lstSize ; i++){ 
                                if(document.getElementById('pg:relationsId:relationRepeat:'+i+':chkBoxSelected').checked){
                                    valid = true;
                                }
                            }
                            if(valid){
                                Add();
                                return true;
                            } else {
                                alert('Atleast you should select one item.');
                                return false;
                            }
                        } 
                    </script>
                </apex:outputPanel>                    
            </apex:form>
        </div>    
            <!--------- End Popup Relation Content ----------->  
            <!--------- Popup Relation Footer ----------->  
        <div class = "modal-relation-btm">
            <div id = "relation-footer">
                <apex:outputPanel id="addTemplate">
                    <button type = "button" class="k-button" onclick = "AddRelations('{!srchRelationship.size}');">Add</button>
                    <button type = "button" class="k-button" onclick = "hideRelationModal();cancelRelation();">Cancel</button>
                </apex:outputPanel>
            </div>  
        </div>      
            <!--------- End Relation Footer ----------->
    </div>          
        
        
        <!--------- Popup ----------->
    
    <div class = "modal-window">
        <div class = "modal-head">
            
            <!--------- Popup Group Member Header -----------> 
            <div class = "modal-decision-header " id = "groupmember-header">
                Members of Group
            </div> 
            <!--------- End Group Member Header ----------->
            
            
            <!--------- Popup Clone Header -----------> 
            <div class = "modal-decision-header ft-left" id = "clone-header">
                 
                  <apex:panelGroup rendered="{!LEN(decision.Title__c) > 79}">
                     {!MID(decision.Title__c,0,79)}   ...
                  </apex:panelGroup>
                   <apex:panelGroup rendered="{!LEN(decision.Title__c) < 79}">
                     {!decision.Title__c} 
                  </apex:panelGroup>
               
            </div>
            <!--------- End Popup Clone Header ----------->
            <!--------- Popup Close Header -----------> 
            <div class = "modal-decision-header ft-left" id = "close-header">
                Reason for closing
            </div>
            <!--------- End Popup Close Header ----------->
            <!--------- Popup Tag Header -----------> 
            <div class = "modal-decision-header ft-left" id = "tag-header">
                Add Tags
            </div>
            <!--------- End Tag Header ----------->
            <!--------- Popup Decide Header -----------> 
            <div class = "modal-decision-header ft-left" id = "decide-header">
                Enter the Decision field to proceed
            </div>
            <!--------- End Decide Header ----------->
            <!--------- Popup Outcome Header -----------> 
            <div class = "modal-decision-header ft-left" id = "outcome-header">
                Decision Outcome
            </div>
            <!--------- End Outcome Header ----------->
            
            
            <!--------- Popup social-graph Header -----------> 
            <div class = "modal-decision-header ft-left" id = "social-graph-header">
                social graph Header
            </div>
            <!--------- End social-graph Header ----------->
             
            <!--------- Popup ToPlan Header -----------> 
            <div class = "modal-decision-header ft-left" id = "toplan-header">
                Add to Plan
            </div>
            <!--------- End ToPlan Header ----------->
            
            <!--------- Popup Event Header -----------> 
            <div class = "modal-decision-header ft-left" id = "event-header">
               Event Edit
            </div>
            <!--------- End Event Header ----------->
             <!--------- Popup New Task Header -----------> 
            <div class = "modal-decision-header ft-left" id = "task-header">
                New Task
            </div>
            <!--------- End New Task Header ----------->
             <!--------- Popup activity warning Header ----------->
             <div class = "modal-decision-header ft-left" id = "activitywarning-header" style="display:none">
                       Warning!
              </div>                        
             <!--------- End activity warning Header ----------->   
             <!--------- Popup Phase backward Header ----------->
             <div class = "modal-decision-header ft-left" id = "activityedit-header">
                       Edit Tasks
             </div>                        
             <!--------- End Phase backward Header ----------->   
             <!--------- Popup Phase backward Header ----------->
                 <div class = "modal-decision-header ft-left" id = "activitymassDelete-header" style="display:none">
                    Warning!
                 </div>                        
             <!--------- End Phase backward Header ----------->   
             <!--------- Popup Phase backward Header ----------->
                     <div class = "modal-decision-header ft-left" id = "activitynopernission-header">
                            Warning!
                     </div>                        
                     <!--------- End Phase backward Header -----------> 
             <!--------- Popup approval Header ----------->
             <div class = "modal-decision-header ft-left" id = "approval-header" style="display:none">
                   Warning!
             </div>                        
             <!--------- End approval Header ----------->
             <!--------- Popup activity warning Header ----------->
              <div class = "modal-vetorejection-header ft-left" id = "vetorejection-header" style="display:none">
                 Warning!
              </div>                        
              <!--------- End Veto rejection Header ----------->   
              <!--------- Popup Phase backward Header ----------->
              <div class = "modal-decision-header ft-left" id = "activitywarning-header" style="display:none">
                 Warning!
              </div>                        
              <!--------- End Phase backward Header -----------> 
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideModal()"></a>
        </div>
        <div class = "modal-content">
            
                <!--------- Popup Group Member Content ----------->
            <div class = "modal-decision-content" id = "groupmember-body" > 
                <!--<div id="gridGroupMember"></div>-->
            </div>
                <!--------- End Popup Group Member Content ----------->
        
                <!--------- Popup Clone Content ----------->
            <div class = "modal-decision-content" id = "clone-body">
                <table cellspacing = "0" cellpadding = "5" class = "clone-modal-tbl">
                    <tr>
                       <td class = "clone-modal-tcell">
                           <div class = "clone-modal-head">Options</div>                           
                           <div class = "clone-modal-field" id="pepleCloneDiv">
                               <input type="checkbox" id="pepleClone" /> Copy People
                           </div>
                           <div class = "clone-modal-field" id="taskCloneDiv">
                               <input type="checkbox" id="taskClone" onclick="showRelationField('taskClone','assignTaskToMe');" /> Copy Tasks
                           </div>
                           <div class = "clone-modal-field  relate-to-input" id="assignTaskToMe">                                
                               <input type="checkbox" id="assignToMeChkBox"  /> Reassign all tasks to <apex:outputText value=" {!$User.FirstName}" /> <apex:outputText value=" {!$User.LastName}" /> 
                           </div>
                           <div class = "clone-modal-field" id="resetDateCloneDiv">
                               <input type="checkbox" id="resetDateClone" /> Reset Dates                               
                           </div>
                           <div class = "clone-modal-field" id="relationsCloneDiv">
                               <input type="checkbox" id="relationsClone" /> Copy Relations
                           </div>
                           <div class = "clone-modal-field" id="attachmentsCloneDiv">
                            <apex:outputPanel rendered="{!AND(attachmentCount == 0,feedattachmentCount == false)}">
                                <input type="checkbox" disabled="true" id="attachmentsClone"  />  Copy Attachments
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!OR(attachmentCount > 0,feedattachmentCount == true)}">
                                <input type="checkbox" id="attachmentsClone" /> Copy Attachments
                            </apex:outputPanel>
                            <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Select this to include the attachments in the copy. A copy of each attachment will be created." />
                           </div>
                           <div class = "clone-modal-field" id="relatedToDecisionDiv">
                               <input type="checkbox" id="relatedToDecision"  onclick="showRelationField('relatedToDecision','showRelationValue');" /> Relate Copy to original object
                           </div>
                           <div class = "clone-modal-field  relate-to-input" id="showRelationValue">                                
                                Relation &nbsp;&nbsp;<!-- <input type="text" id="relatedToRelation"  />-->
                                <select id="relatedToRelation" >
                                    <option value=" ">--None--</option>
                                    <option value="Parent">Parent</option>
                                    <option value="Child">Child</option>
                                    <option value="Sibling">Sibling</option>
                                </select>
                           </div>
                       </td>
                       <td class = "clone-modal-tcell">
                           
                       </td>
                    </tr>
                </table>
            </div>    
                <!--------- End Popup Clone Content ----------->
                
                <!--------- Popup Close Content ----------->
            <div class = "modal-decision-content" id = "close-body">
                <table cellspacing = "0" cellpadding = "5" class = "modal-tbl">
                    <tr>
                        <td class = "cell-left">
                            Reason
                        </td>
                        <td class = "cell-right">
                            <select id = "reasonForClose">
                                <option>Withdrawn</option>
                                <option>Cancelled</option>
                                <option>Executed</option>
                                <option>Duplicate</option>
                                <option>Rejected</option>
                                <option>Evaluated</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left" id  = "closeComment">
                            Comment
                        </td>
                        <td class = "cell-right">
                            <textarea id="closeComments"  maxlength="255" class = "modal-textarea"></textarea>
                        </td>
                    </tr>
                </table>
            </div>    
                <!--------- End Popup Close Content ----------->
                <!--------- Popup Decide Content ----------->
            <div class = "modal-decision-content" id = "decide-body">
                <apex:form Id="formId">
                    <table cellspacing = "0" cellpadding = "5" class = "modal-tbl">
                        <tr>
                           <td class = "cell-left decide-cell">
                               Decision&nbsp;
                               <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Here, state the actual decision that is taken and possibly the reasons why. For example, Going to Sweden at this time gives little business value,so we will not attend the seminar this year." /> 
                           </td>
                           <td class = "cell-right">
                               <apex:inputField value="{!decision.Decision_Taken__c}" id="editorDecide" styleClass="input-width-textarea"/>
                           </td>
                        </tr>
                    </table>
                </apex:form>
            </div>    
                <!--------- End Popup Decide Content ----------->
                <!--------- Popup Tag Content ----------->
            <div class = "modal-decision-content" id = "tag-body">
                <apex:outputPanel id="tagsPanel">
                <input id="inputTag" value ="{!decision.Plain_Tag__c}" />
                <script>
                    $(document).ready(function () {
                        data = $.parseJSON("[{!JSENCODE(tagJson)}]");
                        //create AutoComplete UI component
                        $("#inputTag").kendoAutoComplete({
                            dataSource:data,
                            filter: "startswith",
                            placeholder: "Select tags...",
                            separator: ", "
                        });
                    });
                </script>   
                </apex:outputPanel> 
            </div>    
                <!--------- End Popup Tag Content ----------->
                
                <!--------- Popup Outcome Content ----------->
            <div class = "modal-decision-content" id = "outcome-body">
                <div id = "scatterChart"></div>
            </div>    
                <!--------- End Popup Outcome Content ----------->
                
                
                <!--------- Popup social-graph body Content ----------->
            <div class = "modal-decision-content" id = "social-graph-body">
                <div id = "scatterChart"></div>
            </div>    
                <!--------- End Popup social-graph body Content ----------->
                
                
                
               
                <!--------- Popup Add to Plan Content ----------->
            <div class = "modal-decision-content" id = "toplan-body" >
                 <div class = "toplan-search">
                     <!--<input type = "text" id="searchPlanId" onkeypress="pressedEnterKey(event);"/>--> <!--<button type = "button" onclick="getPlanList();">Search</button>-->
                     <div class = "planSearch">
                        <span class = " k-textbox k-space-right">
                            <input type="text" placeholder="Search..." id="searchPlanId"/>
                            <a href="#" class="k-icon k-i-search" onclick="getPlanList();">&nbsp;</a>
                        </span>
                   </div>
                 </div>
                 <div id="gridPlanList"></div>
            </div>
                <!--------- End Popup Add to Plan Content ----------->
                <!--------- Popup Event  Content ----------->
            <div class = "modal-decision-content" id = "event-body">
                <apex:form id="popupforEvent">
                
                <table cellspacing = "1" cellpadding = "5" class = "modal-tbl">
                    <tr>
                       <td class = "cell-left issue-label">
                           Subject
                       </td>
                       <td colspan = "3" class = "cell-right required-input">
                           <apex:inputField id="subject" styleClass="issue-text" value="{!event.Subject}"  />  
                       </td>
                    </tr>
                    <tr>
                       <td class = "cell-left issue-label">
                           Assign To
                       </td>
                       <td class = "cell-right required-input">
                           <apex:inputField id="assignTo" value="{!event.OwnerId}" />   
                       </td>                       
                    </tr>
                    <tr>
                       <td class = "cell-left modal-fld-width">
                           Start DateTime
                       </td>
                       <td class = "cell-right required-input">
                           <apex:inputField value="{!event.StartDateTime}" id="eventStartDateTime"/>   
                       </td>
                    </tr>
                    <tr>
                       <td class = "cell-left modal-fld-width">
                           End DateTime
                       </td>
                       <td class = "cell-right required-input">
                           <apex:inputField value="{!event.EndDateTime}" id="eventEndDateTime"/>
                       </td>
                    </tr>
                    <tr>
                       <td class = "cell-left issue-label">
                           Comments
                       </td>
                       <td colspan = "3" class = "cell-right">
                           <apex:inputField styleClass="modal-textarea issue-textarea" id="editEvent" value="{!event.Description}" />
                       </td>                      
                    </tr>
                </table>
                   
                <apex:actionFunction name="updateEvent" action="{!updatedEvent}" oncomplete="getAllTaskEvent('{!JSENCODE(decision.Id)}');hideModal();"  reRender="popupforEvent" >
                </apex:actionFunction>
                <apex:actionFunction name="editThisEvent" action="{!toBeUpdatedEvent}" immediate="true" reRender="popupforEvent" oncomplete="showModal('event-header','event-body','event-footer');hideLoader();">
                     <apex:param name="eventId" id="eventId" value="" />
                 </apex:actionFunction>
                    
                </apex:form>
            </div>    
                <!--------- End Popup Event Content -----------> 
                <!--------- Popup New Task Content -----------> 
            <div class = "modal-decision-content" id = "task-body">
                <apex:form id="newtaskForm" >
                    <table cellspacing = "6" cellpadding = "0" class = "modal-tbl">
                        <tr>
                            <td class = "cell-left modal-label">
                                <span class = "top-pad">Subject</span>
                            </td>
                            <td class = "cell-right required-input" colspan = "3" style="width:637px">
                                <apex:inputField styleClass="task-modal-text" style="width:587px" id="subjectForTask" value="{!newTaskToDecision.Subject}" />
                            </td>
                        </tr>
                        <tr>
                            <td class = "cell-left modal-label">
                                Assigned To
                            </td>
                            <td class = "cell-right required-input">
                                <apex:inputField id="assignTo" value="{!newTaskToDecision.OwnerId}" />
                            </td>
                             <td class = "cell-left modal-label">
                                Status
                            </td>
                            <td class = "cell-right">
                                <apex:inputField id="status" style="width:160px" value="{!newTaskToDecision.status}" />
                            </td>
                        </tr>
                        <tr>
                            <td class = "cell-left modal-label">
                                Due Date
                            </td>
                            <td class = "cell-right">
                                <apex:inputField id="dueDate" value="{!newTaskToDecision.ActivityDate}" />
                            </td>
                            <td class = "cell-left modal-label">
                                Priority
                            </td>
                            <td class = "cell-right">
                                <apex:inputField id="priority" style="width:160px" value="{!newTaskToDecision.Priority}" styleClass="prioritystyle"/>
                            </td>
                        </tr>
                        <tr>
                            <td class = "cell-left modal-label">
                                Related To
                            </td>
                            <td class = "cell-left" colspan="3">
                                <script>
                                    function expandCollapse(toBeExpandCollapse, expandCollapseImage) { 
                                        var displayStyle = $('#'+toBeExpandCollapse).css('display'); 
                                         if(displayStyle == 'block'){
                                            $('#'+expandCollapseImage).css('backgroundPosition','0 -8px');
                                            $('#'+toBeExpandCollapse).css('display','none');
                                        }else{
                                            $('#'+expandCollapseImage).css('backgroundPosition','0 0');
                                            $('#'+toBeExpandCollapse).css('display','block');
                                        }
                                        return true;
                                    } 
                                </script>
                                <div style="float:left"> 
                                    <apex:inputField Value="{!newTaskToDecision.whatId}" id="whatId" />
                                </div>
                            </td>
                        </tr>
                        <tr> 
                            <td class = "cell-left modal-label">
                                Comments
                            </td>
                            <td class = "cell-right" colspan = "3">
                                <apex:inputField id="comments" style="width:583px !important;" value="{!newTaskToDecision.Description}" />
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <div class = "tabs-gen-head" style="margin-left:53px;"> 
                                    <a href = "javascript: void(0);" class = "expandCollapseDetails ft-left" id = "taskDetails-btn" onclick = "expandCollapse('taskDetails-view','taskDetails-btn')"></a>  
                                    <h3 class = "ft-left"><span class="details-span">Details</span></h3>
                                </div>
                                <div id="taskDetails-view" style="width:700px;display:none">
                                    <div style="width:727px">
                                        <div>
                                            <div class="complexity-label-div" >Complexity</div>
                                            <div style="float:left;margin-left: 20px;"><apex:inputField style="width:156px;margin-left:4px" value="{!newTaskToDecision.Complexity__c}" id="complexityId" /></div>
                                        </div>
                                        <div class="ft-right">
                                            <div class="skill-level-div" >Skill Level</div>
                                            <div style="float: left;"><apex:inputField style="width:155px;margin-right: 2.8em" value="{!newTaskToDecision.Skill_Level__c}" Id="skilllevelId"/></div>
                                        </div>  
                                    </div>
                                    <br/><br/>
                                    <div style="width:729px">
                                        <div>
                                            <div class="estimated-hours" >Estimated Hours</div>
                                            <div style="float:left;margin-left: 20px;"><apex:inputField style="margin-left:4px" value="{!newTaskToDecision.Estimated_Hours__c}" onkeypress="return isNumber(event)" Id="estimatedhourId"/></div>
                                        </div>
                                        <div class="ft-right">
                                            <div class="actual-hours">Actual Hours</div>
                                            <div style="float: left;margin-right: 0px;"><apex:inputField value="{!newTaskToDecision.Actual_Hours__c}" onkeypress="return isNumber(event)" Id="actualhour" style="margin-right: 3em;"/></div>
                                        </div>  
                                    </div>
                                     <br/><br/>
                                    <div style="width:729px">
                                        <div>
                                            <div class="newtaskpopup-Name toClear">Name</div>
                                            <div  style="float:left;margin-left: 24px;margin-top: 8px;"><apex:inputField id="whoId"  value="{!newTaskToDecision.whoid}" style="margin-left:0.4em;"/></div>
                                        </div>
                                    </div>
                                </div>
                            </td>    
                        </tr>
                        <tr>
                            <td class = "cell-left  modal-label">
                                Send Notification Mail
                            </td>
                            <td colspan="3" class = "cell-right" >
                                <input id="sendingNotification" type = "checkbox" />&nbsp;<span style="color: #4A4A56;font-weight: bold;font-size: 11px;margin-left:220px">Reminder</span>&nbsp;<apex:inputField value="{!newTaskToDecision.IsReminderSet}" id="setReminder" onclick="disabledate(this);"/><apex:inputField value="{!newTaskToDecision.ReminderDateTime}" id="setReminderDate"/>
                            </td>
                        </tr> 
                    </table>
                    <apex:actionFunction name="saveThisTask" action="{!createNewTaskForDecision}" oncomplete="getAllTaskEvent('{!JSENCODE(decision.Id)}');" reRender="newtaskForm" >
                        <apex:param name="sendingNotification" id="sendingNotification" value="" />
                    </apex:actionFunction> 
                    <apex:actionFunction name="intialiseDecisionTask" action="{!intialiseDecisionTask}" oncomplete="hideModal();" rerender="newtaskForm" />
                </apex:form>
            </div> 
                <!--------- End Popup New Task Content ----------->
               
        </div>
        <div class = "modal-btm">
            
            <!--------- Popup Popup Group Member Footer ----------->  
           <div class = "modal-footer" id = "groupmember-footer">                   
                <button type = "button" class="k-button" onclick = "hideModal()">Close</button>
           </div>
           <!--------- End Popup Popup Group Member Footer ----------->  
        
                <!--------- Popup Note Footer ----------->  
            <div class = "modal-footer" id = "clone-footer">
                <button type = "button" class="k-button" onclick="decisionClone('{!JSENCODE(decision.Id)}')">Copy</button>
                <button type = "button" class="k-button" onclick = "hideModal()">Cancel</button>
            </div>    
                <!--------- End Popup Note Footer -----------> 
                <!--------- Popup Close Footer ----------->  
            <div class = "modal-footer" id = "close-footer">
                <button type = "button" class="k-button" onclick="decisionClose()">Save</button>
                <button type = "button" class="k-button" onclick = "hideModal()" >Cancel</button>
            </div>    
                <!--------- End Popup Close Footer -----------> 
                <!--------- Popup Tag Footer ----------->  
            <div class = "modal-footer" id = "tag-footer">
                <button type = "button" class="k-button" onclick="insertTag('{!JSENCODE(decision.Id)}')">Add</button>
            </div>    
                <!--------- End Popup Tag Footer ----------->  
                <!--------- Popup Decide Footer ----------->  
            <div class = "modal-footer" id = "decide-footer">
                <button type = "button" class="k-button" onclick="decideSave('{!JSENCODE(decision.Id)}');" >Propose</button>
                <button type = "button" class="k-button" onclick = "hideModal();">Cancel</button>
            </div>    
                <!--------- End Popup Decide Footer -----------> 
                <!--------- Popup Outcome Footer ----------->  
            <div class = "modal-footer" id = "outcome-footer">
                <button type = "button" class="k-button" onclick = "hideModal()">Cancel</button>
            </div>    
                <!--------- End Popup Outcome Footer ----------->
                
                
                <!--------- Popup social-graph Footer ----------->  
            <div class = "modal-footer" id = "social-graph-footer">
                <button type = "button" class="k-button" onclick = "hideModal()">Cancel</button>
            </div>    
                <!--------- End Popup social-graph Footer ----------->
                
         
                <!--------- Popup Add to Plan Footer ----------->  
            <div class = "modal-footer" id = "toplan-footer">
                <button type = "button" class="k-button" onclick = "addPlans('{!JSENCODE(decision.Id)}','{!JSENCODE(decision.Title__c)}');" >Add</button>
                <button type = "button" class="k-button" onclick = "hideModal();">Cancel</button>
            </div>    
                <!--------- End Popup Add to Plan Footer ----------->
            
                <!--------- Popup Event Footer ----------->  
            <div class = "modal-footer" id = "event-footer">
                <button type = "button" class="k-button" onclick = "updateValidateEvent();">Save</button>
                <button type = "button" class="k-button" onclick = "hideModal()">Cancel</button>
            </div>    
                <!--------- End Event Footer ----------->
                <!--------- Popup New Task Footer ----------->  
            <div class = "modal-footer" id = "task-footer">
                <button type = "button" class="k-button" onclick="saveNewTaskForDecision();">Save</button>
                <button type = "button" class="k-button" onclick = "intialiseDecisionTask();">Cancel</button>
            </div>    
                <!--------- End Popup New Task Footer ----------->
                
        </div> 
    </div>  
        <!--------- End Popup -----------> 
        <!-------------- Popover Decision Approval ---------------->    
        <div class = "popover-gen-arrow" id = "decisionApprovalArrow"></div>
        <div class = "popover-gen people-hover-area" id = "decisionApprovalCallout">                                    
            <div class = "popover-icon ft-left">
                <img src = "{!URLFOR($Resource.Images, 'common/icon-info-24x24.png')}" />
            </div>
            <div class = "popover-gen-content ft-right" id  = "decisionApprovalContent">
                
            </div>
        </div>                           
           <!-------------- End Popover Decision Approval ---------------->
      <!-- ------------ Confirmation Box -------------- 
        <div class = "confirm-box">
            <div class = "confirm-head">
                <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-warning-24x24.png')}" />
                <h3 class = "ft-left">Warning</h3>
                <a href="javascript: void(0);" class = "confirm-close ft-right" onclick="cancelDeletePopup();"></a>
             </div>
             <div class = "confirm-body">
                <input type="hidden" id="decisionIdOnActivities" />
                <input type="hidden" id="taskEventIdOnActivities" />
                <input type="hidden" id="isDeletableOnActivities" />
                <input type="hidden" id="typeOnActivities" />
                 You are about to permanently Delete this activity.<br />
                 Are you sure?
             </div>
             <div class = "confirm-btm">
                 <button type = "button" onclick = "deleteActivity();">Ok</button>
                 <button type = "button" onclick = "cancelDeletePopup();">Cancel</button>
             </div>
        </div>      
           
           ------------ End Confirmation Box --------------  -->
           
            <!--  Delete warning pop up on activities  -->
           <div class = "modal-window-activitywarning">  
                    <!--------- Popup activity warning Content ----------->
                <div class = "modal-activitywarning-content">
                    <p class= "activitywarning-help">
                        <input type="hidden" id="decisionIdOnActivities" />
                        <input type="hidden" id="taskEventIdOnActivities" />
                        <input type="hidden" id="isDeletableOnActivities" />
                        <input type="hidden" id="typeOnActivities" />
                        You are about to permanently delete this activity.<br/>
                        Are you sure?
                    </p>
                </div>    
                    <!--------- End activity warning Content ----------->  
                    <!--------- Popup activity warning Footer ----------->  
                <div class = "modal-activitywarning-btm">
                    <div id = "activitywarning-footer">
                        <button type = "button" class="k-button" onclick = "deleteActivity();">Ok</button>
                        <button type = "button" class="k-button" onclick = "cancelDeletePopup();">Cancel</button>
                    </div>  
                </div>      
                    <!--------- End activity warning Footer ----------->
            </div>
         <!--  End Delete warning pop up on activities  -->
         
          <!--  Mass Edit Task pop up -->
                <div class = "modal-window-massEditing" >   
                        <!--------- Popup Phase backward Content ----------->
                        <div style="margin:auto;">
                    <div class = "modal-activitywarning-content" >
                        <apex:form id="taskFormId">
                            <table style="margin-right: 35px;"> 
                                <tr>    
                                    <td class="cell-left modal-label">  
                                        <span class = "top-pad">Re-assign To</span> 
                                    </td>
                                    <td class="cell-right">
                                        <apex:inputField id="assignTo" value="{!updatedTask.OwnerId}" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class="cell-left modal-label">
                                        <span class = "top-pad">Change Due Date To </span>
                                    </td>
                                    <td class="cell-right">
                                        <apex:inputField id="updateDueDate" value="{!updatedTask.ActivityDate}" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class="cell-left modal-label">
                                        <span class = "top-pad">Change Status To</span>  
                                    </td>
                                    <td class="cell-right">
                                        <!--<apex:inputField id="updateStatus" value="{!updatedTask.Status}" />-->
                                        <select id="updateStatus" onchange="dropDownColor();" style="color:grey">
                                          <option value="--None--" style="color:grey">--None--</option>
                                          <apex:repeat value="{!lstStatusValues}" var="status">    
                                              <option value="{!status}" style="color:black">{!status}</option>
                                          </apex:repeat>
                                        </select>
                                    </td> 
                                </tr> 
                                <tr>
                                    <td class="cell-left modal-label">
                                        <span class = "top-pad">Change Priority To </span>  
                                    </td> 
                                    <td class="cell-right">
                                        <!--<apex:inputField id="updatePriority" value="{!updatedTask.Priority}" />-->
                                        <select id="updatePriority" style="color:grey" onchange="dropDownColor();">
                                          <option value="--None--" style="color:grey">--None--</option>
                                          <apex:repeat value="{!lstPriorityValues}" var="priority">    
                                              <option value="{!priority}" style="color:black">{!priority}</option>
                                          </apex:repeat>
                                        </select>
                                    </td>
                                </tr>
                            </table>
                            <div style="font-size: 10px;color: grey;margin-top: 10px;"><b>* Clicking on save button will apply all these  changes to the selected tasks.</b></div>
                        </apex:form>
                    </div>
                    </div>
                    <div class="modal-activitywarning-btm">
                     <div id = "vetorejection-footer">
                        <button type = "button" class="k-button" onclick = "editMassTask('{!decision.Id}');">Save</button>
                        <button type = "button" class="k-button" onclick = "cancelMassEditPopup();">Cancel</button>
                    </div>     
                    </div>
                </div> 
          <!--------- End Mass Edit Task pop up -----------> 
          <!--  Mass Delete Task pop up -->
                <div class = "modal-window-massDelete " >   
                    <!--------- Popup Phase backward Content ----------->
                    <div class = "modal-activitywarning-content">
                    <p class= "activitywarning-help">
                       You are about to permanently delete the selected activities!<br/>
                       Are you sure?
                    </p>
                </div> 
                <div class="modal-activitywarning-btm">
                     <div id = "vetorejection-footer">
                        <button type = "button" class="k-button" onclick = "deleteMassTask('{!decision.Id}');">Delete</button>
                        <button type = "button" class="k-button" onclick = "cancelMassDeletePopup();">Cancel</button>
                    </div>     
                    </div>
                </div> 
          <!--------- End Mass Delete Task pop up -----------> 
          <!--  No permission alert Task pop up -->
                <div class = "modal-window-noPermission " >  
                     <!--------- Popup Phase backward Content ----------->
                    <div class = "modal-activitywarning-content">
                    <p class= "activitywarning-help">
                       You need additional permissions to delete all the records you have selected.
                    </p>
                </div> 
                <div class="modal-activitywarning-btm">
                     <div id = "vetorejection-footer">
                        <button type = "button" class="k-button" onclick = "cancelPermissionAlertPopup();">Ok</button>
                    </div>     
                    </div>
                </div> 
          <!--------- End No permission alert Task pop up -----------> 
         
         <!--  Veto rejection warning  -->
           <div class = "modal-window-vetorejection">  
                  
                    <!--------- Popup Veto rejection Content ----------->
                <div class = "modal-vetorejection-content">
                    <p class= "vetorejection-help">
                      When a Veto <b>Reject</b> a decision all other approvals are overridden. <br/>
                      Are you sure you want to reject? 

                    </p>
                </div>    
                    <!--------- End Veto rejection Content ----------->  
                    <!--------- Popup Veto rejection Footer ----------->  
                <div class = "modal-vetorejection-btm">
                    <div id = "vetorejection-footer">
                        <button type = "button" class="k-button" onclick = "approvedReject('{!JSENCODE(decision.Id)}', 'Reject');">Yes</button>
                        <button type = "button" class="k-button" onclick = "cancelVetoRejectPopup();">Cancel</button>
                    </div>  
                </div>      
                    <!--------- End Veto rejection Footer ----------->
            </div>
         <!--  End of Veto rejection warning  -->
         
         
         <!-------------- Approval Confirmation Box ----------------> 
        <div class = "modal-window-approval">  
                      
                <!--------- Popup approval Content ----------->
            <div class = "modal-approval-content">
                <p class= "approval-help" >
                    <input type="hidden" value="" id="approveRejectionHidden" />
                   <!-- If you want to <b><span id="approveRejectionText"></span></b>  and advance your decision, click Yes. 
                    If you like to record just your Stance now and approve/reject your decision request later, click Cancel.
                    --->
                    Click Yes, to <b><span id="approveRejectionText"></span></b> and advance the decision.<br/>
                    Click Cancel, to provide your Stance without advancing the decision.

                </p>
            </div>    
                <!--------- End Popup approval Content ----------->  
                <!--------- Popup approval Footer ----------->  
            <div class = "modal-approval-btm">
                <div id = "approval-footer">
                    <button type = "button" class="k-button" onclick = "approvedReject('{!JSENCODE(decision.Id)}',$('#approveRejectionHidden').val());">Yes</button>
                    <button type = "button" class="k-button" onclick = "cancelApprovalWarningPopup();">Cancel</button>
                </div>  
            </div>      
                <!--------- End approval Footer ----------->
        </div>      
           
           <!-------------- End Approval Confirmation Box ---------------->  
           <!--  Phase backward warning pop up -->
           <div class = "modal-window-phasewarning " >   
                    <!--------- Popup Phase backward Content ----------->
                <div class = "modal-activitywarning-content">
                    <p class= "activitywarning-help">
                        You are about to pull back your decision!<br/>Are you sure?
                    </p>
                </div>    
                    <!--------- End Phase backward Content ----------->  
                    <!--------- Popup Phase backward Footer ----------->  
                <div class = "modal-activitywarning-btm"> 
                    <div id = "activitywarning-footer">
                        <button type = "button" class="k-button" onclick = "choseSharePhase();">Ok</button>
                        <button type = "button" class="k-button" onclick = "cancelPhasePopup();">Cancel</button>
                    </div>  
                </div>      
                    <!--------- End Phase backward Footer ----------->
            </div>
         <!--  End Phase backward pop up --> 
    </body>
    <script id="edit-template" type="text/x-kendo-template">
        #  if(!data.isReadOnly) {#
            <a class="k-button k-button-icontext k-grid-edit" ><span class="k-icon k-edit"></span></a>
        # }#
    </script>
    <script id="edit-delete-template" type="text/x-kendo-template">
        #  if(data.isEditable) {#
            <a class="k-button k-button-icontext k-grid-edit" ><span class="k-icon k-edit"></span></a>
            <a class="k-button k-button-icontext k-grid-delete" ><span class="k-icon k-delete"></span></a>
            
        # }#
    </script>
    
    <script>
    var viewModel;
    var viewModelTiming; 
        // **************** Kendo table Java script  ********************//
        
        // Outcome Scatter Chart
 
         function createChart(data) {
          $("#scatterChart").kendoChart({
           title: {
            text: "Outcome Ratio"
           },
           legend: {
            visible: false
           },
           dataSource: {
            data: data
           },
           seriesDefaults: {
            type: "scatter"
           },
           series: [{
            xField: "xAxis",
            yField: "yAxis"
           }],
           xAxis: {
            min: 0,
            max: 5,
            labels: {
             format: "{0}"
            },
            title: {
             text: "Effort"
            }
           },
           yAxis: {
            min: 0,
            max: 5,
            labels: {
             format: "{0}"
            },
            title: {
             text: "Result"
            }
           },
           tooltip: {
            visible: true,
            
            template: '<div class="grid-user-img"><img src=#:dataItem.userImage# title= "#:dataItem.userName#" height="24px" width="24px"  /></div><div >#:dataItem.userName#</div>'
           }
          });
         }
        
        //  Clicked Tab update ///
    
        function tabSectionClicked(socialInputId, clickedtabId,inputEle) {
            window.location.hash='#'+inputEle+'_act';
            if (clickedtabId == 'contribution-tab') {
                DecisionView.contributionTab('{!decision.Id}',function(result, event)
              {
                  if (event.status)
                  {
                    var newContribution = removeQuotes(result);
                      kendoContribution(newContribution);
                  }
              }, {escape:false});
            }
           
            
            if(socialInputId != null) {
                if(socialInputId != '') {
                    var fontWeight = $('.'+clickedtabId).css('font-weight');
                    if(fontWeight == 'bold') {
                        DecisionView.tabSectionClicked(socialInputId, clickedtabId , function(result, event)
                        {
                            if (event.status)
                            {
                                $('.'+clickedtabId).css('font-weight','normal');
                            }
                        }, {escape:true});
                    }
                }
            }
            $('#tabs-6 .pbButton input').addClass('k-button');
            $('#tabs-6 .pbButton input').removeClass('btn');
        }
        
        function refreshContribution(){
            DecisionView.contributionTab('{!decision.Id}',function(result, event)
          {
              if (event.status)
              {
                var newContribution = removeQuotes(result);
                  kendoContribution(newContribution);
              }
          }, {escape:false});
        }
        
        // Appvoal table //
        
        function kendoApproval(gridData) {
            
            $('.approvals-tab').html('('+gridData.length+')');
            var dataSource = new kendo.data.DataSource({
                data: gridData,
                transport: {
                    read: function(event) { 
                        dataSource.sync();
                        event.success(gridData);
                    },
                    update: function(event) {   
                        //var stringifiedData = JSON.stringify(event); 
                        //var updatedData = parsingModifieData(stringifiedData);
                        event.success();
                    }
                 },   
                schema: {
                    model: {
                        id: "id",
                          fields: {
                              id: { type: "string" },
                              step: { type: "string" },
                              statusImage: {type: "string"},
                              status:{type: "string" },
                              createdDate:{type: "string" }
                          }
                    }
                },pageSize: 25
            });
            
            
            
            var grid = $("#gridApproval").kendoGrid({
                dataSource: dataSource,
                sortable:true,
                pageable: true,
                resizable: true,
                columns: [
                   {
                       field: "id",
                       title: "Action",
                       width: 65,
                       template: "<div align = 'center'><img class='decision-app-rej' onclick=\"showDecisionApprovalModal('{!JSENCODE(decision.Id)}','#:id#','#:step#','fromTab')\";   src=/#:stepImage# title='#:stepTitle#' /><div>",
                       sortable: false
                       
                    },
                   {
                       field: "step",
                       title: "Step",
                       template: "#:step#"
                   },
                   {
                       field: "status",
                       title: "Status",
                       template: "<div align='center'><img src=/#:statusImage# /></div>",
                       width: 80
                   },
                   {
                       field: "createdDate",
                       title: "Created Date",
                       width: 150,
                       format:dateFormat
                    }
              ] 
                                    
            }).data("kendoGrid");
        
        
        }
        
        // Relationship table//
        function kendoRelationship(gridData) {
            // assign number of records on tab
            $('.relation-tab').html('('+gridData.length+')');  
            
            if(gridData.length > 0 ) {
                $("#relationsClone").attr('disabled', false);
            }
            else {
                $("#relationsClone").attr('disabled', true);
            }
            
            $("#gridRelationship").kendoGrid({
               dataSource:{
                   data:gridData,
                    transport: {
                        read: function(e) {  
                            //dataSource.sync();
                            e.success(gridData);
                        },
                        update: function(e) {           
                          
                            e.success();
                        }
                 },
                   schema: {
                       model: {
                          id: "id",
                          fields: {
                              id: { type: "string" , editable: false },
                              url: { type: "string" , editable: false},
                              relation:{type: "string" },
                              recordName:{type: "string" , editable: false},
                              recordId : {type: "string" , editable: false},
                              objectName:{type: "string" , editable: false},
                              strength:{type: "string" },
                              notes:{type: "string" },
                              type:{type: "string" , editable: false},
                              isDeletable:{type: "Boolean" , editable: false},
                              isEditable:{type: "Boolean" , editable: false},
                              editImage:{type: "string" , editable: false},
                              deleteImage:{type: "string" , editable: false},
                              actionClassName : { type: "string" , editable: false}
                          }
                      }
                   },
                   pageSize: 25
               },
               columns: [
                   {
                       field: "id",
                       title: "Action",
                       width: 60,
                       template: "<div class = 'grid-action'><a href=#=url#> <img class='#:actionClassName#' src=/#:editImage# /></a> </div> <div class = 'grid-action'><img src=/#:deleteImage#  class='#:actionClassName#' onclick=\"deleteRelationship('{!JSENCODE(decision.Id)}','#:id#','#:isDeletable#')\"; /> </div>",
                       sortable: false
                   },
                   {
                       field: "relation",
                       title: "Relation",
                       template: "#=relation#",
                       width: 80
                   },
                   {
                       field: "recordName",
                       title: "Object Name",
                       template: '<a class="decisionLink" href=/#:recordId# target="_parent">#=recordName#</a>'
                   },
                   {
                       field: "objectName",
                       title: "Object Type",
                       width: 90,
                       template: "#=objectName#"
                   },
                   
                   {
                       field: "strength",
                       title: "Strength",
                       width: 75,
                       template: "#:strength#"
                   },
                   
                   {
                       field: "notes",
                       title: "Notes",
                       template: "#=notes#"
                   }
                   
              ],
              sortable: true,
              pageable: true,
              resizable: true,
              editable: "inline",
              pageable: {
                  refresh: true,
                  pageSizes: [5,10,25,40]
              }
           });
        }
        
      
        // Activities table enabled with autoSync attribute for auto save functionality
        var selectedTasks = new Array();
        var chkMassDeletePermission = new Array();
        function kendoTaskEvent(gridData,stringToBeSearched,accountableForDecision,backUpForDecision,roleAcceptanceStatusForBackup,responsibleForActivities) {
            // assign number of records on tab
            if(gridData != null)
                $('.task-tab').html('('+gridData.length+')');
            
            //$('#durTotal').css('display','none');
            var data1 = gridData;
            
            // To enable kendo sorting.
            function SortByValue1(x,y) {
                return x.Position- y.Position; 
            }
            
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            
            // To remove the cache on kendo table
            $.ajaxSetup({ cache: false }); 
            
            // To enable or disable the task check box when cloning a decision.
            if(gridData != null){
                if(gridData.length > 0 ) {
                    $("#taskClone").attr('disabled', false);
                }
                else {
                    $("#taskClone").attr('disabled', true);
                }    
            }
            
            // To highlight the users for any delayed activities.
            var isTaskDelay;
            if(gridData != null){
                for(var i = 0; i < gridData.length; i ++ ) {
                    if(gridData[i].delayTaskClass == 'delayTask' ) {
                        isTaskDelay = true;
                    }
                }
            }
            
            if(isTaskDelay) {
                $('#activityTab a').css('color','#ff0000 !important');
            }
            else {
                $('#activityTab a').css('color','#222');
            }
            
            // new way or style [Using transport]
            var dataSource = new kendo.data.DataSource({
                batch: ((accountableForDecision) || ( convertStringToBoolean(backUpForDecision) && roleAcceptanceStatusForBackup == 'Approved/Accepted' ) || ( convertStringToBoolean(responsibleForActivities) && roleAcceptanceStatusForBackup == 'Approved/Accepted' )) ? true : false,   
                autoSync: true,    
                transport: {
                    read: function(e) {
                        dataSource.sync();
                        e.success(data1);
                    },
                    update: function(e) {  
                        var stringifiedData = JSON.stringify(e); 
                        var updatedData = parsingModifieData(stringifiedData);
                        e.success();
                    }
                 },
                
                 schema: {
                    parse : function(gridData) {
                           $.each(gridData,function(idx,elem) {
                               
                                if(typeof elem.duedateSort=="string") {
                                    elem.duedateSort =  kendo.parseDate(elem.duedateSort); 
                                } 
                            });
                            return gridData
                    },
                    model: {
                        id: "id",
                        fields: {
                            id: { type: "string", editable: false },
                            toDisable : { type: "string", editable: false },
                            isSelected : { type: "boolean", editable: false},
                            subject : { type: "string", editable: true, validation: { required: {message: "Must not be empty!"}} },
                            comments : { type: "string", editable: false },
                            duedate : { type: "string", editable: true },
                            status : { type: "string", editable: true },
                            statusImage : { type: "string", editable: false },
                            isTask: { type: "string", editable: false },
                            priority : { type: "string", editable: true },
                            createdByName : { type: "string", editable: false },
                            createdByImage : { type: "string", editable: false },
                            isTaskImage : { type: "string", editable: false },
                            editImage : { type: "string", editable: false },
                            isDeletable : { type: "boolean", editable: false},
                            isEditable : { type: "boolean", editable: false},
                            url : { type: "string", editable: false },
                            deleteImage : { type: "string", editable: false },
                            actionClassNameEdit : { type: "string", editable: false},
                            actionClassNameDelete : { type: "string", editable: false},
                            delayTaskClass: { type: "string", editable: false},
                            subjectClass  : { type: "string", editable: false},
                            subjectClassLink : { type: "string", editable: false},
                            ownerId : {type : "string", editable: false},
                            commentsImage : { type: "string", editable: false},
                            title : {type : "string", editable: false},
                            imgEditTitle : {type : "string", editable: false},
                            imgDeleteTitle : {type : "string", editable: false},
                            duedateSort : { type: "date", editable: true }
                        }
                    }
                },
                sort: { field: "subject", dir: "asc" },
                pageSize: 25,
            });
             viewModel = new kendo.observable({  ds:dataSource });
            var grid = $("#gridTaskEvent").kendoGrid({
                
                dataSource: dataSource,
                sortable: true,
                resizable: true,
                toolbar : (convertStringToBoolean(accountableForDecision) || ( convertStringToBoolean(backUpForDecision) && roleAcceptanceStatusForBackup == 'Approved/Accepted' ) || ( convertStringToBoolean(responsibleForActivities) && roleAcceptanceStatusForBackup == 'Approved/Accepted' )) ? ["save","cancel"] : '',
                editable: (convertStringToBoolean(accountableForDecision) || ( convertStringToBoolean(backUpForDecision) && roleAcceptanceStatusForBackup == 'Approved/Accepted' ) || ( convertStringToBoolean(responsibleForActivities) && roleAcceptanceStatusForBackup == 'Approved/Accepted' )) ? true : false,
                filterable: true,
                  change: function(e) { 
                  
                  
                  $('.k-grid-save-changes').css('box-shadow','0 0 5px 0');
                   },
                  cancel: function(e) { $('.k-grid-save-changes').css('box-shadow','0 0 0 0'); },
                pageable: {
                            refresh: true,
                            pageSizes: [5,10,25,40]
                          },
                columns: [
                    {
                       field: "isSelected",
                       title: "Select",
                       width: 60,
                       filterable: false,
                       template: kendo.template($("#checkbox-template").html()),
                       sortable: false
                   },
                    {
                       field: "id",
                       title: "Action",
                       width: 60,
                       filterable: false,
                       template: "<div class='grid-action'><img class='#:actionClassNameEdit#' onclick=\"editTaskEvent('#:id#','#:isEditable#', '#:isTask#','EditMode');\";  src=/#:editImage# title=#:imgEditTitle# ></img> </div> <div class='grid-action'><img src=/#:deleteImage# class='#:actionClassNameDelete#'  onclick=\"deleteTaskEventWarning('{!JSENCODE(decision.Id)}','#:id#','#:isDeletable#', '#:isTask#')\"; title=#:imgDeleteTitle# ></img> </div>",
                       sortable: false
                   },
                   {
                       field: "subject",
                       title: "Subject",
                       template: "<div title=#:title#><a href=#:url# onclick=\"editTaskEvent('#:id#','#:isEditable#', '#:isTask#','ReadMode');return false;\"; >#=subject#</a></div>",
                   },
                   {
                       field: "comments",
                       title: "Comments",
                       filterable: false,
                       editable: false,
                       template: '<div  align="center"><img src=/#:commentsImage# title="#=comments#" /></div>',
                       width: 85
                       
                   },
                   {
                       field: "isTask",
                       title: "Type",
                       width: 70,
                       template: "#:isTask#"
                   },
                    
                    {
                       field: "duedateSort", 
                       title: "Due Date",
                       format:dateFormat,
                       editor: dateTimeEditorforActivities,  
                       template: "<div class = '#:delayTaskClass#' title=#:title# >#:   kendo.toString(( duedateSort  == null ? '' :duedateSort), kendo.culture().calendar.patterns.d)#</div>",
                       width: 100
                   },
                   
                   {
                       field: "status",
                       title: "Status",
                       editor: statusDropDownEditor ,
                       template: "<div style='overflow:hidden' title=#:title#>#:status#</div>",
                       width: 120
                   },
                   {
                       field: "priority",
                       title: "Priority",
                       editor: priporityDropDownEditor,
                       template: "<div title=#:title#>#:priority#</div>",
                       width: 90
                   },
                   {
                       field: "createdByName",
                       title: "Assigned To",
                       template: '<div class = "grid-user-img"><img src=#:createdByImage# title= "#:createdByName#" height="24px" width="24px"  /></div><div class = "grid-user-img"><a href="/#:ownerId#" target="_parent" >#:createdByName#</a></div>'
                   }
               ]
            }).data("kendoGrid"); 
              var grid = $("#gridTaskEvent").data("kendoGrid");
              grid.tbody.on("change", ".taskCheckbox", function (e) {
                var row = $(e.target).closest("tr");
                var item = grid.dataItem(row);
                var $target = $(e.currentTarget);
                item.isSelected = $(e.target).is(":checked") ? true : false;
             });
        }
        
        // Collabrator  table//
        function kendoPeople(gridData) {
            // assign number of records on tab
            $('.people-tab').html('('+gridData.length+')');
            
            // New style [using transport]
            $("#gridPeople").kendoGrid({
               dataSource:{
                   data:gridData ,
                   transport: {
                    read: function(event) { 
                      //data.sync();
                        event.success(gridData);
                    }
                    ,
                    update: function(event) {   
                        event.success();
                    }
                 },     
                   schema: {
                       model: {
                           id: "id",
                           fields: {
                               id: { type: "string" },
                               name: { type: "string" },
                               userImage: { type: "string" },
                               role: { type: "string"},
                               roleAcceptance : { type: "string"},
                               decisionApproval : { type: "string"},
                               roleAcceptanceImage : { type: "string"},
                               decisionApprovalImage : { type: "string"},
                               description : { type: "string"},
                               backupforAccountable : { type: "string"},
                               vetoRights : { type: "string"},
                               isDeletable : { type: "Boolean"},
                               deleteImage : { type: "string"},
                               decisionOnApprvalForCallOut : {type: "String"},
                               roleAcceptanceFor : { type: "string"},
                               decisionApprovalFor: { type: "string"},
                               groupName : { type: "string"},
                               isGroup : { type: "Boolean"},
                               infoImage: { type: "string"},
                               userNameList: { type: "string"},
                               groupClassName : { type: "string"},
                               actionClassName : { type: "string"},
                               approvalComment : { type: "string"},
                               approvalCommentsImage : { type: "string"}               
                           }
                       }
                   },
                   pageSize: 25
               },
              
               columns: [
                   {
                       field: "id",
                       title: "Action",
                       filterable: false,
                       width: 53,
                       template: "<div class='grid-action-center'><img class='#:actionClassName#' src=/#:deleteImage#  onclick=\"deleteItemCollab('{!JSENCODE(decision.Id)}','#:id#','#:isDeletable#')\"; /></div>",
                       sortable: false
                   },
                   {
                       field: "name",
                       title: "Name",
                       template: '<div class="grid-user-img"><img src=#:userImage# title= "#:name#" height="24px" width="24px"  /> </div><a class = "#:groupClassName#" href=#:url# onclick=\'groupMemberPopup("#:userId#","#:name#","#:isGroup#")\'; ><div class = "grid-username">#:name#</div></a><div id = "decHidden">#:userNameList#</div>'
                   },
                   {
                       field: "groupName",
                       title: " ",
                       filterable: false,
                       template: '<img src=/#:infoImage# class="ft-right" title="#:groupName#">',
                       width: 30,
                       sortable: false
                   },
                   {
                       field: "role",
                       title: "Role",
                       width: 90,
                       template: "#:role#"
                   },
                   {
                       field: "roleAcceptance",
                       title: "Role<br />Acceptance",
                       filterable: false,
                       template: '<div align="center"><img src=/#=roleAcceptanceImage#  /></div>',
                       width: 90
                   },
                   
                   {
                       field: "decisonApproval",
                       title: "Stance",
                       filterable: false,
                       template: '<div align="center" class = "decision-approval-cell"><img src=/#:decisionApprovalImage#  /></div><input type = "hidden" value = "#=decisionApprovalFor#" /><input type = "hidden" value = "#=decisionApproval#" />',
                       width: 65
                   },
                   {
                       field: "backupforAccountable",
                       title: "Backup for<br /> Accountable",
                       filterable: false,
                       template: '<div align="center"><img src=/#:backupforAccountable#  /></div>',
                       width: 95
                   },
                   {
                       field: "vetoRights",
                       title: "Veto<br />Rights",
                       filterable: false,
                       template: '<div align="center"><img src=/#:vetoRights#  /></div>',
                       width: 60
                   },
                   {
                       field: "approvalComment",
                       title: "Stance<br/> Comment",
                       filterable: false,
                       template: '<div align="center"><img src=/#:approvalCommentsImage# title="#=approvalComment#" /></div>',
                       width: 75
                   },
                   {
                       field: "description",
                       title: "Description",
                       filterable: false,
                       template: "#=description#"
                   }
              ],
              sortable: true,
              pageable: true,
              filterable: true,
              resizable: true,
              pageable: {
                            refresh: true,
                            pageSizes: [5,10,25,40]
                        },
              dataBound: onDataBound,
              dataBinding: onDataBinding
           });
           
          function onDataBinding(arg) {
              
          }
           
          // To display group popup.
          function onDataBound(arg) {
          // Callout on Hover
               
               $(function() {
                $('.decision-approval-cell').hover(function(e) {                                               
                  var content = $(this).next().val();
                  var contentId = $(this).next().next().val();
                 
                  if(contentId == "Approved" ||contentId == "Rejected" ){    
                                      
                      $('#decisionApprovalContent').html(stripHTML(content));                   
                      $('#decisionApprovalCallout').show()
                      .css('top', e.pageY - 25)
                      .css('left', e.pageX - 10)
                      .appendTo('body');
                      $('#decisionApprovalArrow').show()
                      .css('top', e.pageY - 25)
                      .css('left', e.pageX - 10)
                      .appendTo('body');
                   }    
                
                }, function() {
                  $('#decisionApprovalArrow').hide();
                  $('#decisionApprovalCallout').hide();
                });
              });
              
              $('.group-link').hover(function(e) {
                  var content = $(this).next().html();
                  if(content != ''){
                      content = content.replace(/,/g, '<br>');
                      $('.popover-social-content').html(content);                   
                      $('.popover-social').show()
                      .css('top', e.pageY - 25)
                      .css('left', e.pageX + 50)
                      .appendTo('body');
                  }
               },function() {
               $('.popover-social').hide();
              });
            }
        }
        
        // Issues / Quality   table//
        function kendoIssues(gridData) {
            
            // assign number of records on tab
            $('.quality-tab').html('('+gridData.length+')');
            
            $("#gridIssues").kendoGrid({
               dataSource:{
                   data:gridData ,
                   transport: {
                        read: function(event) {  
                          //data.sync();
                            event.success(gridData);
                        }
                        ,
                        update: function(event) {   
                            event.success();
                        }
                 }, 
                   schema: {
                       model: {
                           issueId: "issueId",
                           fields: {
                               issueId: { type: "string" },
                               issueName: { type: "string" },
                               status: { type: "string" },
                               type: { type: "string"},
                               priority : { type: "string"},
                               comments : { type: "string"},
                               isDeletable:{type: "Boolean"},
                               isEditable:{type: "Boolean"},
                               editImage:{type: "string"},
                               deleteImage:{type: "string"},
                               url : {type: "string"},
                               actionClassNameEdit : { type: "string"},
                               actionClassNameDelete : { type: "string"},
                               createdByName :  { type: "string"}
                           }
                       }
                   },
                   pageSize: 25
               },
               columns: [
                   {
                       field: "issueId",
                       title: "Action",
                       width: 60,
                       template: "<div class = 'grid-action'><a href=#:url#> <img class='#:actionClassNameEdit#' src=/#:editImage# /></a> </div> <div class = 'grid-action'><img src=/#:deleteImage# class='#:actionClassNameDelete#'  onclick=\"deleteIssues('{!JSENCODE(decision.Id)}','#:issueId#','#:isDeletable#')\"; /> </div>",
                       sortable: false
                   }, 
                   {
                       field: "issueName",
                       title: "Name",
                       template: "#=issueName#"
                   },
                   {
                       field: "status",
                       title: "Status",
                       width: 70,
                       template: "#:status#"
                   },
                   {
                       field: "type",
                       title: "Type",
                       template: "#:type#",
                       width: 110
                   },
                   {
                       field: "priority",
                       title: "Priority",
                       template: "#:priority#",
                       width: 65
                   },
                   {
                       field: "createdByName",
                       title: "Assign to",
                       template: "#:createdByName#",
                       width: 120
                   },
                   {
                       field: "comments",
                       title: "Comments",
                       template: "#=comments#"
                   }
              ],
              sortable: true,
              resizable: true,
              pageable: true
           });
        }
        
        
        // History table//
        function kendoHistory (gridData) {
            
             // assign number of records on tab
            $('.history-tab').html('('+gridData.length+')');
           
            $("#gridHistory").kendoGrid({
               dataSource:{
                   data:gridData ,
                   schema: {
                       model: {
                           duedate: "duedate",
                           fields: {
                               duedate: { type: "string"  },
                               relatedTo: { type: "string" },
                               assignedTo : {type : "string"},
                               assignedToId : {type : "string"},
                               status : {type : "string"},
                               comments : { type: "string"  },
                               duedateSort: { type: "date"  }
                           }
                       }
                   },
                   pageSize: 25 
               },
               columns: [ 
                   /*{
                       field: "duedate",
                       title: "Date",
                       format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                       width: 130
                   },*/
                   {
                       field: "duedateSort",
                       title: "Date",
                       format:dateTimeFormat, 
                       width: 130
                   },
                   {
                       field: "relatedTo",
                       title: "Related To",
                       template: "#:relatedTo#",
                       width: 100
                   },
                   {
                       field: "assignedTo",
                       title: "User",
                       template: '<div class = "grid-user-img"><img src=#:assignedToId# title= "#:assignedTo#" height="24px" width="24px"  /></div><div class = "grid-user-img">#:assignedTo#</div>'
                      
                   },
                   {
                       field: "status",
                       title: "Action",
                       template: "#:status#"
                   },
                   {
                       field: "comments",
                       title: "Comments",
                       template: "#=comments#"
                   }
               ],
               sortable: true,
               pageable: true,
               resizable: true,
               pageable: {
                  refresh: true,
                  pageSizes: [5,10,25,40]
              }
           });
        }
        
        
        
                // History table//
        function kendoMatrix (gridData) {
            
             // assign number of records on tab
          
           
            $("#gridMatrx").kendoGrid({
               dataSource:{
                   data:gridData ,
                   schema: {
                       model: {
                           duedate: "duedate",
                           fields: {
                               criteria: { type: "string"  },
                               weight: { type: "string" },
                               option : {type : "string"},
                               assignedToId : {type : "string"},
                               status : {type : "string"},
                               comments : { type: "string"  }
                           }
                       }
                   },
                   pageSize: 25
               },
               columns: [
                   {
                       field: "duedate",
                       title: "Date",
                       format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                       width: 130
                   },
                   {
                       field: "relatedTo",
                       title: "Related To",
                       template: "#:relatedTo#",
                       width: 100
                   },
                   {
                       field: "assignedTo",
                       title: "User",
                       template: '<div class = "grid-user-img"><img src=#:assignedToId# title= "#:assignedTo#" height="24px" width="24px"  /></div><div class = "grid-user-img">#:assignedTo#</div>'
                      
                   },
                   {
                       field: "status",
                       title: "Action",
                       template: "#:status#"
                   },
                   {
                       field: "comments",
                       title: "Comments",
                       template: "#=comments#"
                   }
               ],
               sortable: true,
               resizable: true,
               pageable: true
               
           });
        }
        // Attachemnt nad Notes  table//
       
        function kendoAttachmentNote(gridData) {
           
           // assign number of records on tab
           $('.attachment-tab').html('('+gridData.length+')');
           
           
           
           $("#gridAttachmentNote").kendoGrid({
               dataSource:{
                   data:gridData ,
                   schema: {
                       model: {
                           id: "id",
                           fields: {
                               id: { type: "string"},
                               type: { type: "string"},
                               name : { type: "string"},
                               lastModifiedDate : {type : "string"},
                               createdByUser : { type: "string"},
                               createdByUserImage : { type: "string"},
                               deleteImage : { type: "string"},
                               isDeletable : { type: "boolean"},
                               deleteImage : { type: "string"},
                               isEditable : { type: "boolean"},
                               editImage : { type: "string"},
                               actionClassName : { type: "string"}
                           }
                       }
                   },
                   pageSize: 25
               },
               columns: [
                   {
                       field: "id",
                       title: "Action",
                       width: 60,
                       template: "<div class='grid-action'><a href=#:url#> <img src=/#:editImage# class='#:actionClassName#' /></a> </div> <div class='grid-action'><img src=/#:deleteImage# class='#:actionClassName#' onclick=\"deleteNotesAttachment('{!JSENCODE(decision.Id)}','#:id#','#:isDeletable#', '#:type#')\"; /> </div>",
                       sortable: false
                   },
                   {
                       field: "type",
                       title: "Type",
                       template: "#:type#",
                       width: 130
                   },
                   {
                       field: "name",
                       title: "Name",
                       template: '<a href=/#:id#>#:name#</a>'
                   },
                   {
                       field: "lastModifiedDate",
                       title: "Last Modified",
                       format:"{0:{!JSENCODE(dateFormat)} HH:mm}",
                       width: 130,
                   },
                   {
                       field: "createdByUser",
                       title: "Created By",
                       template: '<div class="grid-user-img"><img src=#:createdByUserImage# title= "#:createdByUser#" height="24px" width="24px"  /></div><div class="grid-user-img">#:createdByUser#</div>'
                   }
               ],
               sortable: true,
               resizable: true,
               pageable: true
               
               
               
           });
           
       }
       
        // Add to plan table //
       
       function kendoPlanList(gridData) {
            $("#gridPlanList").kendoGrid({ 
               dataSource:{
                   data:gridData ,
                   schema: {
                       model: {
                          name: "name",
                          fields: {
                              isSelected: {type: "boolean" },
                              name: { type: "string" },
                              lastmodifiedDate: { type: "string" }
                          }
                      }
                   },
                   pageSize: 10
               },
              sortable: true,
              resizable: true,
              pageable: true,
               columns: [
                    {
                       field: "isSelected",
                       title: "Select",
                       sortable: false,
                       template: "<div align='center'><input type='checkbox' onchange=\"selectPlanFunc('#:planId#')\";/></div>",
                       width: 55
                   },
                   {
                       field: "name",
                       title: "Plans",
                       template: '<a href=/#:planId# target="_new">#=name#</a>'
                   },
                   {
                       field: "lastmodifiedDate",
                       title: "Last Modified",
                       format:"{0:{!JSENCODE(dateFormat)} HH:mm}",
                       width: 130
                   }
              ]
             
           });
       }
       
       // Group member table //
       
       function kendoGroupMember(gridData) {
            
            $("#groupmember-body").kendoGrid({
               dataSource:{
                   data:gridData ,
                   resizable: true,
                   schema: {
                       model: {
                          name: "name",
                          fields: {
                              name: { type: "string" },
                              userImage: { type: "string" },
                              department: { type: "string" }
                          }
                      }
                   },
                   pageSize: 10
               },
               columns: [
                   {
                       field: "name",
                       title: "Name",
                       template: '<div class="grid-user-img"><img src=#:userImage# title= "#:name#" height="24px" width="24px"  /></div><div class="grid-user-img group-link">#:name#</div>'
                      
                   },
                   {
                       field: "department",
                       title: "Department", 
                       template: "#:department#",                      
                       width: 180
                   }
              ],
              sortable: true,
              pageable: true,
           });
           
        }
        
        var dateTimePickervar;
        // Timing  table//
        function dateTimeEditor(container, options) {
            //alert('gg');
            kendo.culture().calendar.firstDay = {!weekDayNumber}; 
            $('<input id="dateTimePicker" data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" onkeydown="return passEvent(event,this);" data-format="' + options.format + '"       />')
                    .appendTo(container)
                    .kendoDateTimePicker({});   
              
        }
        
        function passEvent(e,dom){
            if(e.keyCode == 8 || e.keyCode == 46) {
                //val = $('#dateTimePicker');
                
            }else{
                e.preventDefault();
            }
        }
        
        //
        
        // Date editior for Activites
        function dateTimeEditorforActivities(container, options) {
            if( options.model.isTask == 'Task' ) {
                //$('<input data-text-field="' + 'duedate'+ '" data-value-field="' + 'duedate' + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                $('<input data-text-field="' + 'duedate'+ '" data-value-field="' + 'duedate' + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                        .appendTo(container)
                        .kendoDatePicker({});
            } else {
                //$('<input id="dateTimePicker" data-text-field="' + 'duedate' + '" data-value-field="' + 'duedate'+ '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                $('<input id="dateTimePicker" data-text-field="' + 'duedate' + '" data-value-field="' + 'duedate'+ '" data-bind="value:' + options.field + '" data-format="' + options.format + '" />')
                    .appendTo(container)
                    .kendoDateTimePicker({});
            }
        }
        
        // Status Dropdown
        
        function statusDropDownEditor(container, options) {
            if( options.model.isTask == 'Task' ) {
                $('<input   data-text-field="StatusName" data-value-field="StatusName" data-bind="value:' + options.field + '"/>' )
                .appendTo(container)
                .kendoDropDownList({
                    height:280,
                    width:100,
                    autoBind: false,
                    dataSource: statusValue
                });
            }
        }
        
        function priporityDropDownEditor(container, options) {
            if( options.model.isTask == 'Task' ) {
                $('<input data-text-field="PriorityName" data-value-field="PriorityName" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: false,
                    dataSource: priorities
                });
            }
        }
        var  prioritiesDecoded = $('<div/>').html('{!HTMLENCODE(taskPriorityPicklist)}').text();
        var priorities = JSON.parse( '['+prioritiesDecoded+']')
        var types = [
            { typesName: "Inactivity" }, 
            { typesName: "Quality"}, 
            { typesName: "Lack of Resources" }, 
        ];
        
        var  statusValueDecoded = $('<div/>').html('{!HTMLENCODE(taskStatusPicklist)}').text();
        var statusValue  = JSON.parse( '['+statusValueDecoded+']')
        function kendoTiming (gridData) {
        
           // assign number of records on tab
           $('.timing-tab').html('('+gridData.length+')');
           //counDownPhases(gridData[1].currentPhases);
          timingGridata = gridData;
          updateTimerCountdown(gridData);
          
          var dataSource = new kendo.data.DataSource(
          {
                   data:gridData ,
                     transport: {
                        read: function(event) {  
                          //data.sync();
                            event.success(gridData);
                        }
                        ,
                         
                        update: function(e) {     
                               var grid = $("#gridTime").data("kendoGrid")._data;  
                               // get a reference to the grid widget
                               var myVar = myTimer();  
                               var t = JSON.stringify(e.data);
                               var recodsPhaseId = e.data.id;
                               var recodsPhase = e.data.phases;
                               var recodsPlannedStartDate = e.data.plannedStart;
                               var recodsPlannedEndate = e.data.plannedEnd; 
                               var comments = e.data.timingComment;
                               var recordPhaseArray = ['Draft','Share','Propose','Decide','Execute','Evaluate','Close'];
                               var recordPhaseNum = recordPhaseArray.indexOf(recodsPhase) ;
                               var plannedDates = new Array();
                                          
                               var j=0;
                               for(m=0;m<7;m++){
                                    if(recordPhaseNum != m) { 
                                        if(grid[m].plannedStart != ' ' && grid[m].plannedStart != null){
                                            plannedDates[j] = kendo.parseDate(grid[m].plannedStart);
                                        }else{
                                            plannedDates[j] = '';
                                        }
                                    }
                                    else {   
                                        if(recodsPlannedStartDate != ' ' && recodsPlannedStartDate != null) {
                                            plannedDates[j] = recodsPlannedStartDate;
                                        }
                                        else {
                                            plannedDates[j] = '';
                                        }
                                    }
                                    j++;
                                    if(recordPhaseNum != m) {   
                                        if(grid[m].plannedEnd != ' ' && grid[m].plannedEnd != null){
                                             plannedDates[j] = kendo.parseDate(grid[m].plannedEnd);
                                        }else{
                                            plannedDates[j] = '';
                                        }
                                    }
                                    else {   
                                        if(recodsPlannedEndate != ' ' && recodsPlannedEndate != null) {
                                            plannedDates[j] = recodsPlannedEndate;
                                        }
                                        else {
                                            plannedDates[j] = '';
                                        }
                                    }
                                    j++;    
                               }
                                
                               
                                $('#crrntEndDec').data("kendoDateTimePicker").value( $('#crrntEndDec').data("previous"));  
                                $('#crrntEndExe').data("kendoDateTimePicker").value( $('#crrntEndDec').data("previous"));
                                $('#crrntEndEval').data("kendoDateTimePicker").value( $('#crrntEndDec').data("previous"));
                              
                              
                              
                               if((recodsPlannedStartDate != '' && recodsPlannedStartDate != null) || (recodsPlannedEndate != '' && recodsPlannedEndate != null)){
                                   var today = new Date();
                                   if(recodsPlannedStartDate != '' && recodsPlannedStartDate != null && recodsPlannedStartDate != ''){
                                        if(recodsPlannedStartDate < today){
                                            alert(recordPhaseArray[recordPhaseNum]+' start date should be a date after today');
                                            comments = '';
                                            
                                             return false;
                                        }
                                   }
                                   if(recodsPlannedEndate != '' && recodsPlannedEndate != null && recodsPlannedEndate != ''){
                                       if(recodsPlannedEndate < today){
                                            alert(recordPhaseArray[recordPhaseNum]+' end date should be a date after today');
                                            comments = '';
                                           // e.preventDefault();
                                            return false;                                           
                                        }
                                   }
                                   if((recodsPlannedStartDate != ''  && recodsPlannedStartDate != null && recodsPlannedStartDate != ' ') && (recodsPlannedEndate != ''  && recodsPlannedEndate != null && recodsPlannedEndate != ' ')){
                                        if(recodsPlannedStartDate > recodsPlannedEndate){
                                            alert(recordPhaseArray[recordPhaseNum]+' start date should be a date after '+ recordPhaseArray[recordPhaseNum]+' start date');
                                            comments = '';
                                           // e.preventDefault();
                                            return false;
                                        }
                                   }
                                 
                                   if(recodsPlannedStartDate != '' && recodsPlannedStartDate != null && recodsPlannedStartDate != ' '){  
                                        
                                        for(i=(recordPhaseNum*2) - 1 ;i>=0;i--){
                                            if(plannedDates[i] != ''){
                                                var strDate = plannedDates[i];
                                                var recordDate = new Date(strDate);
                                                if(recodsPlannedStartDate < recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' start date should be a date after previous phases');
                                                    comments = '';
                                                   // e.preventDefault();
                                                    return false;   
                                                }
                                            }   
                                        }
                                        
                                        for(i=(recordPhaseNum*2) + 1;i<=13;i++){    
                                            if(plannedDates[i] != ''){
                                                var strDate = plannedDates[i];
                                                var recordDate = new Date(strDate);
                                                if(recodsPlannedStartDate > recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' start date should be a date before next phases');
                                                    comments = ''; 
                                                    return false;   
                                                }
                                            }   
                                        }           
                                   }
                                   if(recodsPlannedEndate != '' && recodsPlannedEndate != null && recodsPlannedEndate != ' '){    
                                        for(i=(recordPhaseNum*2) - 1;i>=0;i--){
                                            if(plannedDates[i] != ''){  
                                                var strDate = plannedDates[i];    console.log(plannedDates); console.log(i);
                                                var recordDate = new Date(strDate); console.log(recordDate ); console.log(recodsPlannedEndate < recordDate);
                                                if(recodsPlannedEndate < recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' end date should be a date after previous phases');
                                                    comments = '';
                                                   // e.preventDefault();
                                                   return false;   
                                                }
                                            }   
                                        }
                                        for(i=(recordPhaseNum*2) + 2;i<=13;i++){
                                            if(plannedDates[i] != ''){   
                                                var strDate = plannedDates[i];
                                                var recordDate = new Date(strDate);
                                                if(recodsPlannedEndate > recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' end date should be a date before next phases');
                                                    comments = '';
                                                  //  e.preventDefault();
                                                    return false;   
                                                }
                                            }   
                                        }           
                                   }
                                   
                               } 
                              recodsPlannedStartDate = kendo.toString(recodsPlannedStartDate,"yyyy,MM,dd,HH,mm,ss");
                              recodsPlannedEndate = kendo.toString(recodsPlannedEndate ,"yyyy,MM,dd,HH,mm,ss");
                              changetimingValue(recodsPhaseId,recodsPlannedStartDate,recodsPlannedEndate,comments);
                              e.success();  
                        }
                 }, 
                   schema: {
                       parse: function(response) {  
                            $.each(response, function(idx, elem) {  
                                if (typeof elem.actualStartTime === "string") {   
                                    elem.actualStartTime = kendo.parseDate(elem.actualStartTime)
                                }
                                if (typeof elem.actualEndTime === "string") {
                                    elem.actualEndTime = kendo.parseDate(elem.actualEndTime)
                                }
                                if (typeof elem.plannedStart === "string") {
                                    elem.plannedStart = kendo.parseDate(elem.plannedStart)
                               }
                               if (typeof elem.plannedEnd === "string") { 
                                    elem.plannedEnd = kendo.parseDate(elem.plannedEnd)
                               }
                            });
                            return response
                        },
                       model: {
                           id: "id",
                           fields: {
                               phasesNo: { type: "string" , editable: false },
                               phases: { type: "string", editable: false },
                               actualStartTime : { type: "date" , editable: false },
                               actualEndTime :  { type: "date" , editable: false },
                               plannedStart : { type: "date" , editable: true },
                               plannedEnd :  { type: "date" , editable: true },
                               elapsedTime :  { type: "string" , editable: false },
                               diffToPalnned :  { type: "string" , editable: false },
                               timingComment :  { type: "string",
                                                    validation: { 
                                                        maxlength:
                                                            function(input) { 
                                                                if (input.val().length > 255) {
                                                                   input.attr("data-maxlength-msg", "Max length is 255");
                                                                   return false;
                                                                }                                   
                                                                return true;
                                                            }
                                                    } 
                                                 },
                               dateTimeFormat : { type: "string" },
                               isReadOnly :  { type: "boolean" }
                               
                              
                           }
                       }
                   }
               });
          
          
          
           viewModelTiming = new kendo.observable({  ds:dataSource });
          
          
           $("#gridTime").kendoGrid({
               dataSource:dataSource,
               resizable: true,
               columns: [
                   {
                       field: "isReadOnly", 
                       title: " ", 
                       width: 58, 
                       template: kendo.template($("#edit-template").html()),      
                       editor: function() {}
                   },
                   { 
                       field: "phasesNo", 
                       title: "#",
                       width: 30,
                       template: "#:phasesNo#"
                   },
                   {
                       field: "phases",   
                       title: "Phase",  
                       width: 65,
                       template: "#:phases#"
                   },                   
                   {
                       field: "plannedStart",
                       title: "Planned Start",
                       width: 110,
                       format:dateTimeFormat,
                       editor: dateTimeEditor,
                   },
                   {
                       field: "plannedEnd",
                       title: "Planned End",
                       width: 110,
                       format:dateTimeFormat,
                       editor: dateTimeEditor
                   },
                   {
                       field: "actualStartTime",
                       title: "Actual<br />Start Time",
                       width: 110,
                       format:dateTimeFormat,
                   },
                   {
                       field: "actualEndTime",
                       title: "Actual<br />End Time",
                       width: 110,
                       format:dateTimeFormat,
                   },
                   {
                       field: "elapsedTime",
                       title: "Elapsed Time",
                       width: 130,
                       template: "#:elapsedTime#"
                   },
                   {
                       field: "diffToPalnned",
                       title: "Accumulated Time",
                       width: 130,
                       template: "#:diffToPalnned#"
                   },
                   {
                       field: "timingComment",
                       title: "Comment",
                       template: "#=timingComment#"
                   }
                   
               ],
               editable:"popup",
               
               
               
           });
       }
       
       function kendoContribution(gridData){
            $("#gridContribution").kendoGrid({
              dataSource:{
                  data:gridData,
                  schema: {
                      model: {
                         name: "recId",
                         fields: {
                             recId : { type: "string" },
                             userId : { type: "string" },
                             userName : { type: "string" },
                             userURL : { type: "string" },
                             userImage : { type: "string" },
                             chtrPostCreatedNo : { type: "Integer" },
                             chtrCommentReceivedNo : { type: "Integer" },
                             fileUploadedNo : { type: "Integer" },
                             chtrCommentCreatedNo : { type: "Integer" },
                             chtrLikeReceivedNo : { type: "Integer" },
                             taskCreatedNo : { type: "Integer" },
                             taskReceivedNo : { type: "Integer" },
                             taskCompletedNo : { type: "Integer" },
                             taskDueDateViolatedNo : { type: "Integer" }
                         }
                     }
                  },
                  pageSize: 25
              },
              sortable: true,
              columns: [ 
                  {
                      field: "userName",
                      title: "Contribution",
                      width: 50,
                      template: '<div class="grid-user-img"><img src=#:userImage# title= "#:userName#" height="24px" width="24px"  /> </div><a href=#:userURL# ><div class = "grid-username">#:userName#</div></a>'
                  }, 
                  {
                      field: "chtrPostCreatedNo",
                      title: "Chatter <br/> post <br/> created",
                      width: 20,
                      template: '<div style="text-align:right">#:chtrPostCreatedNo#</div>',
                      sortable:true
                  } 
                  ,
                  {
                      field: "chtrCommentCreatedNo",
                      title: "Chatter <br/> comments <br/> created", 
                      width: 20,
                      template: '<div style="text-align:right">#:chtrCommentCreatedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "chtrCommentReceivedNo",
                      title: "Chatter <br/> comments <br/> received", 
                      width: 20,
                      template: '<div style="text-align:right">#:chtrCommentReceivedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "chtrLikeReceivedNo",
                      title: "Chatter <br/> likes <br/> received", 
                      width: 20,
                      template: '<div style="text-align:right">#:chtrLikeReceivedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "taskCreatedNo",
                      title: "Tasks <br/> created", 
                      width: 20,
                      template: '<div style="text-align:right">#:taskCreatedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "taskReceivedNo",
                      title: "Tasks <br/> received", 
                      width: 20,
                      template: '<div style="text-align:right">#:taskReceivedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "taskCompletedNo",
                      title: "Tasks <br/> completed", 
                      width: 20,
                      template: '<div style="text-align:right">#:taskCompletedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "taskOverDueNo",
                      title: "Tasks <br/> overdue", 
                      width: 20,
                      template: '<div style="text-align:right">#:taskOverDueNo#</div>',
                      sortable:true
                  },
                  {
                      field: "relationshipCreatedNo",
                      title: "Items/ <br/> Relationships <br/> created", 
                      width: 25,
                      template: '<div style="text-align:right">#:relationshipCreatedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "fileUploadedNo",
                      title: "Files <br/> uploaded", 
                      width: 20,
                      template: '<div style="text-align:right">#:fileUploadedNo#</div>',
                      sortable:true
                  },
                  {
                      field: "taskDueDateViolatedNo",
                      title: "Due <br/> dates <br/> violated", 
                      width: 20,
                      template: '<div style="text-align:right">#:taskDueDateViolatedNo#</div>',
                      sortable:true
                  }
             ],
             pageable: true,
             resizable: true,
             pageable: {
                  refresh: true,
                  pageSizes: [5,10,25,40]
              }
          });
       }
       
       function myTimer(){
            var dummyVar = 'hello';
            for(i=0;i<50000;i++){
                dummyVar = 'bye';
            }
            return true;
       }
    </script>
    
    <script>
        //************************** Action function  *******************//
        // Social command
        function socialCommand(social,  inputValue) {  
             DecisionView.socialCommand('{!JSENCODE(socialInput.Id)}', social, inputValue, function(result, event) 
             {
                 if (event.status)
                 {
                    if(social == 'Result' || social == 'Effort') {                      
                        var elider = $("#effortSlider").data("kendoSlider");
                        elider.value(result.socialIndividual.Effort__c);
                        elider.trigger("slide", { value: elider.value() });
                        
                        var rlider = $("#resultSlider").data("kendoSlider");
                        rlider.value(result.socialIndividual.Result__c);
                        rlider.trigger("slide", { value: rlider.value() });
                        
                        var resultAvg = showResultEffortAvg(result.socialOverall.Avg_Result__c,result.socialOverall.Result_Count__c );
                        
                        var effortAvg = showResultEffortAvg(result.socialOverall.Avg_Effort__c, result.socialOverall.Effort_Count__c );
                        
                        if(result.socialIndividual.Effort__c== '3' ){
                             $('.effort-slider .k-draghandle').css('backgroundPosition', '0 -28px');
                             $('.effort-slider .k-slider-selection').css('background','#feb80a');
                        }
                        if(result.socialIndividual.Result__c== '3' ){
                             $('.result-slider .k-draghandle').css('backgroundPosition', '0 -28px');
                             $('.result-slider .k-slider-selection').css('background','#feb80a');
                        }
                        
                        $('.result-avg-val').html( kendo.toString(resultAvg,'n2'));
                        $('.effort-avg-val').html( kendo.toString(effortAvg,'n2'));
                        
                        // Average of outcome and result for command center overview.
                        $('.effort-avg').html( kendo.toString(result.socialOverall.Avg_Effort__c,'n2'));
                        $('.result-avg').html( kendo.toString(result.socialOverall.Avg_Result__c,'n2'));
                    }
                    if(social == 'Rating') {
                        $('.avg-relevance').html(kendo.toString( result.socialOverall.Avg_Rating__c,'n2'));
                        $('.votes-num').html(result.socialOverall.Rating_Count__c);
                        var starImgPosition = starPositionStore.indexOf((result.socialOverall.Avg_Rating__c).toString());
                        $('.avgstar').css('backgroundPosition', '0px '+starPosition[starImgPosition]+'px');
                    }
                    
                    if(social == 'Like' || social == 'Dislike'){
                        
                        
                        if(social == 'Like') {
                             $('.like-val').html(result.socialOverall.Total_Likes__c); // result.socialOverall.Total_Likes__c
                             $('.dislike-val').html(result.socialOverall.Total_Dislikes__c); //result.socialOverall.Total_Dislikes__c
                             $('#likeSpan0').removeClass('socialDisabledLike'); 
                             $('#likeSpan0').addClass('socialLike');
                             $('#disLikeSpan0').addClass('socialDisabledDislike');  
                             $('#disLikeSpan0').removeClass('socialDislike');   
                        }
                        
                        $('.like-val-CommandCenter').html( kendo.toString( result.socialOverall.Total_Likes__c,'n0'));
                        $('.dislike-val-CommandCenter').html(kendo.toString(result.socialOverall.Total_Dislikes__c,'n0'));
                        $('#avg-relevance').html( kendo.toString( result.socialOverall.Avg_Rating__c, "n2"));
                        $('#avgrelevance').html( kendo.toString( result.socialOverall.Avg_Rating__c, "n2"));

                        if(result.socialOverall.Total_Likes__c > 0){
                            $('#likeSpan').removeClass('commandCenterDisabledLike');    
                            $('#likeSpan').addClass('commandCenterLike');   
                        }else{
                            $('#likeSpan').addClass('commandCenterDisabledLike');   //removeClass
                            $('#likeSpan').removeClass('commandCenterLike');
                        }
                        
                        if(result.socialOverall.Total_Dislikes__c > 0){
                            $('#disLikeSpan').removeClass('commandCenterDisabledDisLike');  
                            $('#disLikeSpan').addClass('commandCenterDisLike'); 
                        }else{
                            $('#disLikeSpan').removeClass('commandCenterDisLike');  
                            $('#disLikeSpan').addClass('commandCenterDisabledDisLike');
                        }
                        
                        if(social == 'Dislike') {
                             $('.dislike-val').html(result.socialOverall.Total_Dislikes__c); //
                             $('.like-val').html(result.socialOverall.Total_Likes__c);
                             $('#disLikeSpan0').removeClass('socialDisabledDislike');   
                             $('#disLikeSpan0').addClass('socialDislike');
                             $('#likeSpan0').addClass('socialDisabledLike');    
                             $('#likeSpan0').removeClass('socialLike');     
                        }
                    }
                    if(social == 'Mood') {
                        document.getElementById('pg:commandCenterMoodText').innerHTML = moodArrayOnCommandCenter[result.socialOverall.Avg_Mood__c];
                        document.getElementById('pg:socialMoodText').innerHTML = moodArrayOnCommandCenter[result.socialOverall.Avg_Mood__c];
                        showAvgMood(result.socialOverall.Avg_Mood__c, result.socialOverall.Mood_Count__c);
                    }
                    // enable or disable only for RACI roles
                    if(result.socialIndividual.Accountable__c || result.socialIndividual.Backup_for_Accountable__c || result.socialIndividual.Responsible__c || result.socialIndividual.Consulted__c || result.socialIndividual.Informed__c){
                    
                        if(  ( result.socialIndividual.Rating__c == undefined ) || ( result.socialIndividual.Mood__c == undefined ) || (  result.socialIndividual.Like__c  == undefined &&  result.socialIndividual.Dislike__c == undefined ) )  
                        {
                                document.getElementById('glyphSocial').style.display = 'block'
                        }
                        else
                        {
                                document.getElementById('glyphSocial').style.display = 'none';
                        } 
                        //enable or disable glyph in evaluation.            
                        if( (  ( result.socialIndividual.Effort__c == undefined ) || ( result.socialIndividual.Result__c == undefined  )  ) && ( result.socialIndividual.Decision__r.phase__c == 'Evaluate' || result.socialIndividual.Decision__r.phase__c == 'Close' )   )  
                        {
                                document.getElementById('glyphEvaluation').style.display = 'block';
                        }
                        else
                        {
                                document.getElementById('glyphEvaluation').style.display = 'none';
                        }
                     }
                     else{
                                document.getElementById('glyphEvaluation').style.display = 'none';
                                document.getElementById('glyphSocial').style.display = 'none';
                     }
                 }
             }, {escape:true});
             
         }  
         // finish social command //
    </script>
    <script>
        // Code for custom section should be default collapsed.
        $(document).ready(function(){            
            UpdateDueDateInCommandCenter();
        });
         function showScroll(x) {
            $(x).find('.thumb').show()
         }
        
         function hideScroll(x) {
             $(x).find('.thumb').hide()
         }
            var userId;
        $(document).ready(function(){
            starRate('{!JSENCODE(TEXT(socialInput.Rating__c))}');
            starValueSet('{!JSENCODE(TEXT(socialInput.Rating__c))}');
            var avgMood = '{!JSENCODE(TEXT(social.Avg_Mood__c))}';
            var moodCount = '{!JSENCODE(TEXT(social.Mood_Count__c))}'; 
            var  moodVal = '{!JSENCODE(TEXT(socialInput.Mood__c))}';
            
            imageURLonDecision =  '{!imageURLonDecision}';
            if(moodVal == 1){
                $('#moodWorried').addClass('active-angry');
            }else if(moodVal == 2){
                $('#moodPoor').addClass('active-Sad');
            }
            else if(moodVal == 3){
                $('#moodNormal').addClass('active-neutral');
            }
            else if(moodVal == 4){
                $('#moodHappy').addClass('active-smiley');
            }
            else if(moodVal == 5){
                $('#moodLaugh').addClass('active-happy');
            }
            showAvgMood(avgMood, moodCount);
            
            if({!socialInput.Accountable__c} || {!socialInput.Backup_for_Accountable__c} || {!socialInput.Responsible__c}){
                if('{!JSENCODE(socialInput.Role_Acceptance_Status__c)}' == 'Approved/Accepted'){    
                    $('#enabledSetTiming').css('display','block');
                    $('#disabledSetTiming').css('display','none');
                    if(   imageURLonDecision.length < 1){   
                        $('#updateImageId').css('display','block');
                        $('#changeImageId').css('display','none');
                    } else {
                        $('#changeImageId').css('display','block');
                        $('#updateImageId').css('display','none');
                        //$('#enabledSetTiming').css('display','none');
                        //$('#disabledSetTiming').css('display','block');
                    }
                } else {
                    $('#updateImageId').css('display','none');
                    $('#enabledSetTiming').css('display','none');
                    $('#changeImageId').css('display','none');
                    $('#disabledSetTiming').css('display','block');
                }
            } else {
                $('#changeImageId').css('display','none');
                $('#updateImageId').css('display','none');
                $('#enabledSetTiming').css('display','none');
                $('#disabledSetTiming').css('display','block');
            }
            
            if('{!socialInput.Stance_Approval_Status__c}' == 'Pending Approval' && ({!socialInput.Accountable__c} || {!socialInput.Backup_for_Accountable__c} || {!socialInput.Responsible__c} || {!socialInput.Consulted__c})){
                document.getElementById('myStanceApprovalIcon').style.display = 'block';
                document.getElementById('glyphOverview').style.display = 'block';

            } else {
                document.getElementById('myStanceApprovalIcon').style.display = 'none';
                document.getElementById('glyphOverview').style.display = 'block';

            }
            
            if( '{!socialInput.Stance_Approval_Status__c}' != 'Pending Approval' ) {
                if('{!socialInput.Final_Approval_Status__c}' == 'Pending Approval'){
                    if({!socialInput.Accountable__c} || {!socialInput.Backup_for_Accountable__c}){
                        document.getElementById('statusApprovalIcon').style.display = 'block';
                        document.getElementById('glyphOverview').style.display = 'block';
    
                    } else {
                        document.getElementById('statusApprovalIcon').style.display = 'none';
                        document.getElementById('glyphOverview').style.display = 'none';
    
                    }
                } else {
                    document.getElementById('statusApprovalIcon').style.display = 'none';
                    document.getElementById('glyphOverview').style.display = 'none';
    
                }
            }
            if( '{!JSENCODE(TEXT(social.Total_Likes__c))}' != '')
            $('.like-val-CommandCenter').html( kendo.toString(   '{!JSENCODE(TEXT(social.Total_Likes__c))}' , "n0") );
            else
            $('.like-val-CommandCenter').html( kendo.toString(   0 , "n0") );
            if( '{!JSENCODE(TEXT(social.Total_Dislikes__c))}' != '')
            $('.dislike-val-CommandCenter').html( kendo.toString( '{!JSENCODE(TEXT(social.Total_Dislikes__c))}', "n0"));
            else
            $('.dislike-val-CommandCenter').html( kendo.toString( 0, "n0"));
            $('#avg-relevance').html( kendo.toString({!JSENCODE(TEXT(social.Avg_Rating__c))}, "n2"));
            $('#avgrelevance').html( kendo.toString( {!JSENCODE(TEXT(social.Avg_Rating__c))}, "n2"));

            if( '{!JSENCODE(TEXT(social.Total_Likes__c))}' != '' )
            $('.like-val').html(kendo.toString('{!JSENCODE(TEXT(social.Total_Likes__c))}', "n0"));
            else
            $('.like-val').html(kendo.toString(0, "n0"));
            if( '{!JSENCODE(TEXT(social.Total_Dislikes__c))}' != '')
            $('.dislike-val').html(kendo.toString('{!JSENCODE(TEXT(social.Total_Dislikes__c))}', "n0"));
            else
            $('.dislike-val').html(kendo.toString(0, "n0"));
            if('{!JSENCODE(TEXT(social.Total_Likes__c))}' > 0){
                $('#likeSpan').removeClass('commandCenterDisabledLike');    
                $('#likeSpan').addClass('commandCenterLike');   
            }
                    
            if('{!JSENCODE(TEXT(social.Total_Dislikes__c))}' > 0){
                $('#disLikeSpan').removeClass('commandCenterDisabledDisLike');  
                $('#disLikeSpan').addClass('commandCenterDisLike'); 
            }
            
            if('{!JSENCODE(TEXT(socialInput.Like__c))}' > 0){
                $('#likeSpan0').removeClass('socialDisabledLike');  
                $('#likeSpan0').addClass('socialLike'); 
            }
            
            if('{!JSENCODE(TEXT(socialInput.Dislike__c))}' > 0){
                $('#disLikeSpan0').removeClass('socialDisabledDislike');    
                $('#disLikeSpan0').addClass('socialDislike');
            }
            
            var resultAvg = showResultEffortAvg('{!JSENCODE(TEXT(social.Avg_Result__c))}','{!JSENCODE(TEXT(social.Result_Count__c))}');
                                   
            var effortAvg = showResultEffortAvg('{!JSENCODE(TEXT(social.Avg_Effort__c))}', '{!JSENCODE(TEXT(social.Effort_Count__c))}' );
                        
                        // Average of outcome and results with count
                        $('.result-avg-val').html( kendo.toString(resultAvg,'n'));
                        $('.effort-avg-val').html( kendo.toString(effortAvg,'n'));
                          
                        // Average of outcome and result for command center overview.
                        $('.result-avg').html( kendo.toString('{!JSENCODE(TEXT(social.Avg_Result__c))}','n'));
                        $('.effort-avg').html( kendo.toString('{!JSENCODE(TEXT(social.Avg_Effort__c))}','n'));
            
            // private checked unchecked
            if(convertStringToBoolean('{!decision.Private__c}')) {
                $('#privateImgSpan0').css('display','block');
                $('#privateImgSpan1').css('display','block');
                $('#privateImgSpan2').css('display','block');
                $('#privateImgSpan3').css('display','block');
                $('#privateImgSpan4').css('display','block');
                $('#privateImgSpan5').css('display','block');
            }
            else {
                $('#privateImgSpan0').css('display','none');
                $('#privateImgSpan1').css('display','none');
                $('#privateImgSpan2').css('display','none');
                $('#privateImgSpan3').css('display','none');
                $('#privateImgSpan4').css('display','none');
                $('#privateImgSpan5').css('display','none');
            }
            
            // On load of page and phase is Close, the status(Command Center) title displays when hovered.
            if('{!JSENCODE(decision.Phase__c)}' == 'Close') {
                $('#status-block').attr('title', '{!JSENCODE(decision.Reason_for_Close__c)}');
            }
        
            if({!socialInput.Accountable__c} || {!socialInput.Backup_for_Accountable__c} || {!socialInput.Responsible__c} || {!socialInput.Consulted__c}   ||  {!socialInput.Informed__c}    ){
                //enable or disable glyph in social.            
                if(  ( '{!JSENCODE(TEXT(socialInput.Rating__c))}' == '' ) || ( '{!JSENCODE(TEXT(socialInput.Mood__c))}' == '' ) || (  '{!JSENCODE(TEXT(socialInput.Like__c))}' == '' && '{!JSENCODE(TEXT(socialInput.Dislike__c))}' == '') )  
                {
                        document.getElementById('glyphSocial').style.display = 'block';
                }
                else
                {
                        document.getElementById('glyphSocial').style.display = 'none';
                }
                //enable or disable glyph in evaluation.            
                if( ( ( '{!socialInput.Effort__c}' == '' ) || ( '{!socialInput.Result__c}' == '' ) ) && (  '{!Decision__c.Phase__c}' == 'Evaluate' || '{!Decision__c.Phase__c}' == 'Close')  )  
                {
                        document.getElementById('glyphEvaluation').style.display = 'block';
                }
                else
                {
                        document.getElementById('glyphEvaluation').style.display = 'none';
                }
            }
             if( '{!socialInput.Role_Acceptance_Status__c}' == 'Pending Approval' )  
              {
                  document.getElementById('glyphOverview').style.display = 'block';
                  document.getElementById('glyphTiming').style.display = 'none';
                  document.getElementById('glyphSocial').style.display = 'none';
                  document.getElementById('glyphEvaluation').style.display = 'none';
              
              }
               if( '{!socialInput.Role_Acceptance_Status__c}' == 'Not Accepted' )  
              {
                  document.getElementById('glyphOverview').style.display = 'none';
                  document.getElementById('glyphTiming').style.display = 'none';
                  document.getElementById('glyphSocial').style.display = 'none';
                  document.getElementById('glyphEvaluation').style.display = 'none';
              
              }
            profileName = '{!JSENCODE(profileName)}';
           chkRecPermission={!chkRecPermission};
           
            
            addCIMember = '{!decision.Add_C_I_Members__c}';
            
            userId = '{!socialInput.User__c}';
            // decision life cycle controll
           
            decisionSocialInputDetail(
                '{!JSENCODE(decision.Id)}', 
                    '{!JSENCODE(socialInput.Id)}', 
                        '{!JSENCODE(decision.Phase__c)}', 
                            '{!JSENCODE(decision.Status__c)}', 
                                '{!socialInput.Accountable__c}', 
                                    '{!socialInput.Responsible__c}' , 
                                        '{!socialInput.Consulted__c}',  
                                            '{!socialInput.Informed__c}', 
                                                '{!socialInput.Backup_for_Accountable__c}',  
                                                    '{!socialInput.Veto_Rights__c}',
                                                        '{!JSENCODE(socialInput.Role_Acceptance_Status__c)}',
                                                             '{!JSENCODE(socialInput.Final_Approval_Status__c)}',
                                                                '{!JSENCODE(socialInput.Stance_Approval_Status__c)}',
                                                                    '{!JSENCODE(socialInput.Role__c)}',
                                                                        '{!decision.test__c}'
            );
            
            
            // decision tab bold unbold handler
            
            // for bold and unbold tab
            decisionTabControll(
                '{!JSENCODE(socialInput.Id)}',
                    '{!socialInput.SYS_Tab_View_Social_Input__c}',
                        '{!socialInput.SYS_Tab_View_Tasks__c}',
                            '{!socialInput.SYS_Tab_View_Activites__c}',
                                '{!socialInput.SYS_Tab_View_Relations__c}',
                                    '{!socialInput.SYS_Tab_View_Attachments__c}',
                                        '{!socialInput.SYS_Tab_View_Quality__c}',
                                            '{!socialInput.SYS_Tab_View_History__c}'
             );
             
             $('#btnApproveReject').addClass('role-AcceptanceCommandCenter-BtnDisabled');
             var approvalRejectJsonString = $.parseJSON('{!JSENCODE(approvalJSON)}');
             
             setApprovalButtonName('{!JSENCODE(socialInput.Role_Acceptance_Status__c)}',
                                    '{!JSENCODE(socialInput.Stance_Approval_Status__c)}',
                                       '{!JSENCODE(socialInput.Final_Approval_Status__c)}'
                                          
             );
             if(approvalRejectJsonString.length > 0){
                 if(approvalRejectJsonString[0].step != null){
                     decisionApprovals('{!JSENCODE(decision.Id)}',
                                            $.parseJSON('{!JSENCODE(approvalJSON)}')
                     );
                 }
             }
             
             
       });
       
        function decisionApprovals(decisionId,approveRejectJsonObject){
             if( approveRejectJsonObject.length < 1 )
             return false;
            if(approveRejectJsonObject[0].step == 'Role Acceptance'){
                $('#btnApproveReject').removeClass('role-AcceptanceCommandCenter-BtnDisabled');
                $('#btnApproveReject').html('Accept/Reject');
                $("#btnApproveReject").removeClass('stance-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('decision-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").addClass('role-AcceptanceCommandCenter-Btn');
                $("#btnApproveReject").click(function() {
                     showDecisionApprovalModal(decisionId, approveRejectJsonObject[0].id,approveRejectJsonObject[0].step, 'commandCenter');
                });
            }else if(approveRejectJsonObject[0].step == 'My Stance'){
                //$('#btnApproveReject').removeClass('role-AcceptanceCommandCenter-BtnDisabled');
                //$('#btnApproveReject').html('Support/Oppose');
                //$("#btnApproveReject").addClass('stance-ApprovalCommandCenter-Btn');
                //$("#btnApproveReject").removeClass('decision-ApprovalCommandCenter-Btn');
                //$("#btnApproveReject").removeClass('role-AcceptanceCommandCenter-Btn');
                $("#myStanceApprovalIcon").click(function() {
                     showDecisionApprovalModal(decisionId, approveRejectJsonObject[0].id,approveRejectJsonObject[0].step, 'commandCenter');
                });
            }else if(approveRejectJsonObject[0].step == 'Decision Approval'){
                //$('#btnApproveReject').removeClass('role-AcceptanceCommandCenter-BtnDisabled');
                //$("#btnApproveReject").removeClass('stance-ApprovalCommandCenter-Btn');
                //$("#btnApproveReject").addClass('decision-ApprovalCommandCenter-Btn');
                //$("#btnApproveReject").removeClass('role-AcceptanceCommandCenter-Btn');
                //$('#btnApproveReject').html('Approve/Reject');
                $("#statusApprovalIcon").click(function() {
                     showDecisionApprovalModal(decisionId, approveRejectJsonObject[0].id,approveRejectJsonObject[0].step, 'commandCenter');
                });
            }else{
                $('#btnApproveReject').addClass('role-AcceptanceCommandCenter-BtnDisabled');    
            }
            
        }
        
        function setApprovalButtonName(roleAcceptanceStatus,stanceApprovalStatus,decisionApprovalStatus){
            if(roleAcceptanceStatus != 'Pending Approval'){
                $('#btnApproveReject').html('Accept/Reject');
                $("#btnApproveReject").removeClass('stance-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('decision-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").addClass('role-AcceptanceCommandCenter-Btn');
            }
            if(stanceApprovalStatus != 'Pending Approval'){
                $('#btnApproveReject').html('Suppose/Oppose');
                $("#btnApproveReject").addClass('stance-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('decision-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('role-AcceptanceCommandCenter-Btn');
            }
            if(decisionApprovalStatus != 'Pending Approval' && stanceApprovalStatus != 'Pending Approval'){
                $('#btnApproveReject').html('Approve/Reject');
                $("#btnApproveReject").removeClass('stance-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").addClass('decision-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('role-AcceptanceCommandCenter-Btn');
            }
            if(roleAcceptanceStatus == 'Approved/Accepted'){
                $('#btnApproveReject').html('Support/Oppose');
                $("#btnApproveReject").removeClass('stance-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('decision-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").addClass('role-AcceptanceCommandCenter-Btn');
            }
            if(decisionApprovalStatus == 'Approved' || decisionApprovalStatus == 'Rejected'){
                $('#btnApproveReject').html('Approve/Reject');
                $("#btnApproveReject").removeClass('stance-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").addClass('decision-ApprovalCommandCenter-Btn');
                $("#btnApproveReject").removeClass('role-AcceptanceCommandCenter-Btn');
            }
        }
        
        // remove quate from json string 
        function removeQuotes(mystring) {
                
            newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
                return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
            });
            
            //var newJ= $.parseJSON(newString);
            var  newJ = eval ("(" + newString+ ")");
            return newJ;
        }
        
        function addAttach(){
            window.location = "/p/attach/NoteAttach?pid="+'{!JSINHTMLENCODE(decision.Id)}'+"&parentname="+'{!JSINHTMLENCODE(decision.Title__c)}'+"&retURL=/apex/DecisionView?id="+'{!JSINHTMLENCODE(decision.Id)}'+"&sfdc.override=1&addNote=true"; 
        }
    
        function addNote(){  
            window.location = "/002/e?parent_id="+'{!JSINHTMLENCODE(decisionID)}'+"&retURL=/apex/DecisionView?id="+'{!JSINHTMLENCODE(decision.Id)}'+"&sfdc.override=1&addNote=true"; 
        }        
        function addEditPeople(){
            window.location = "/apex/AddEditPeopleOnDecision?id="+'{!JSINHTMLENCODE(decision.Id)}'+"&ObjType=Decision";     
        }        
        function addRelations(){
            window.location = "/apex/AddRelationship?id="+'{!JSINHTMLENCODE(decision.Id)}'+"&recType=Decision&relType=Relation";         
        }        
        function addTask(){
            //window.location = "/00T/e?what_id="+'{!JSINHTMLENCODE(decision.Id)}'+"&retURL=/"+'{!JSINHTMLENCODE(decision.Id)}'+"&addTask=true";     
        }        
        function newEvent(){
            window.location = "/00U/e?what_id="+'{!JSINHTMLENCODE(decision.Id)}'+"&retURL=/"+'{!JSINHTMLENCODE(decision.Id)}';         
        }
        
        function logCall(){
            window.location = "/00T/e?title=Call&what_id="+'{!JSINHTMLENCODE(decision.Id)}'+"&followup=1&tsk5=Call&retURL=/apex/DecisionView?id="+'{!JSINHTMLENCODE(decision.Id)}'+"&&addAct=true&";
        }
        
        function sendEmail(){
            window.location = "/_ui/core/email/author/EmailAuthor?p3_lkid="+'{!JSINHTMLENCODE(decision.Id)}'+"&retURL=/apex/DecisionView?id="+'{!JSINHTMLENCODE(decision.Id)}'+"&&";
        }

        function addShare(){
            window.location = "/p/share/CustomObjectSharingDetail?parentId="+'{!JSINHTMLENCODE(decision.Id)}';     
        }
        
        function addSubDecision(){
            //window.location = "/apex/DecisionNew?parentId="+'{!JSINHTMLENCODE(decision.Id)}';   
             window.location = " /apex/DecisionQuickCreate?parentId="+'{!JSINHTMLENCODE(decision.Id)}';
        }
        
        function counDownPhases(data) {
            var j =0;
            var dateArray = new  Array();
            for(var i = 0 ; i<data.length; i++) {
                dateArray[j] = data[i].plannedStart;
                j ++;
                dateArray[j] = data[i].actualEndTime;
                j ++;
            }
            var currentphases = data[0].currentphases;
            var phaseArray = new Array('Draft', 'Share','Propose','Decide','Execute','Evaluate','Close');
            for(var i =phaseArray[currentphases]; i<=data.length ; i++) {
                if(dateArray[i+1] != null || dateArray[i+1] != '') {
                    alert('Current phase end date' + dateArray[i+1]);
                }
            }
        }
        
        function showAvgMood(avgMoodValues, moodCount) {
            if(avgMoodValues == 0 || avgMoodValues == null || avgMoodValues == 'NaN') {
                avgMoodValues = 6
            }
            avgMoodValues = parseInt(avgMoodValues) * (-25);
            //$('.mood-avg').css('backgroundPosition','0 ' +avgMoodValues+ 'px');
            //alert(avgMoodValues)
            $('#yourSmileyRat .mood-avg').removeClass('icon-angry').removeClass('icon-Sad').removeClass('icon-neutral').removeClass('icon-smiley').removeClass('icon-happy')
            $('#commandCentreSmiley').removeClass('icon-angry').removeClass('icon-Sad').removeClass('icon-neutral').removeClass('icon-smiley').removeClass('icon-happy')
            if(avgMoodValues==-25){
                $('#yourSmileyRat .mood-avg').addClass('icon-angry').css('color','#be1900').css('font-size','1.6em');
                $('#commandCentreSmiley').addClass('icon-angry').css('color','#be1900').css('font-size','1.6em');
            }else if(avgMoodValues==-50){
                $('#yourSmileyRat .mood-avg').addClass('icon-Sad').css('color','#ff2500').css('font-size','1.6em');
                $('#commandCentreSmiley').addClass('icon-Sad').css('color','#ff2500').css('font-size','1.6em');
            }else if(avgMoodValues==-75){
                $('#yourSmileyRat .mood-avg').addClass('icon-neutral').css('color','#ffb400').css('font-size','1.6em');
                $('#commandCentreSmiley').addClass('icon-neutral').css('color','#ffb400').css('font-size','1.6em');
            }else if(avgMoodValues==-100){
                $('#yourSmileyRat .mood-avg').addClass('icon-smiley').css('color','#92d050').css('font-size','1.6em');
                $('#commandCentreSmiley').addClass('icon-smiley').css('color','#92d050').css('font-size','1.6em');
            }else if(avgMoodValues==-125){
                $('#yourSmileyRat .mood-avg').addClass('icon-happy').css('color','#00b050').css('font-size','1.6em');
                $('#commandCentreSmiley').addClass('icon-happy').css('color','#00b050').css('font-size','1.6em');
            }else if(avgMoodValues==-150){
                $('#yourSmileyRat .mood-avg').addClass('icon-neutral').css('color','#a9a5a0').css('font-size','1.6em');
                $('#commandCentreSmiley').addClass('icon-neutral').css('color','#a9a5a0').css('font-size','1.6em');
            }
           
            moodCount = '(' +moodCount+ ')';
            $('.mood-avg-val').html(moodCount);
        }
        function showResultEffortAvg(resulEfforttAvg, resulEfforttCount) {
            var resulEfforttAvg = parseFloat(resulEfforttAvg);
            var resulEfforttCount = parseInt(resulEfforttCount)
            var returnStr = resulEfforttAvg;
            return returnStr;
        }
        
        // countdown
        //var timingGridata =  $.parseJSON('{!JSENCODE(timeSectionJSON)}');
        //updateTimerCountdown();
        
        function updateTimerCountdown(gridDataFromTimingSection){
            var gridData = gridDataFromTimingSection ;
            if(gridData == ''){
                gridData = $.parseJSON('{!JSENCODE(timeSectionJSON)}'); 
                commentSectionTime(gridData);
            }
            //kendoTiming (gridData);
            if(  gridData != undefined )
            {  
                var statusRep = gridData[0].currentPhases;
                var de = gridData[0].plannedEnd
                var ss = gridData[1].plannedStart;
                var se = gridData[1].plannedEnd
                var des = gridData[2].plannedStart;
                var dee = gridData[2].plannedEnd
                var as = gridData[3].plannedStart;
                var ae = gridData[3].plannedEnd
                var exs = gridData[4].plannedStart;
                var exes =gridData[4].plannedEnd
                var evs = gridData[5].plannedStart;
                var eve = gridData[5].plannedEnd
                var cs = gridData[6].plannedStart;
                var ce = gridData[6].plannedEnd
                
                commentSectionTime(gridData);
                updateTimerwithParam(de,ss,se,des,dee,as,ae,exs,exes,evs,eve,cs,ce,statusRep);
            } 
        }
        
        
    
        function updateTimerwithParam(de,ss,se,des,dee,as,ae,exs,exes,evs,eve,cs,ce,statusRep) {
       // alert('updateTimerwithParam');
            str = '';
            $('#day-block').html('');
            $('#hour-block').html('');
            $('#min-block').html('');
            now = new Date();
            
            var timerArray = new Array(de,ss,se,des,dee,as,ae,exs,exes,evs,eve,cs,ce);
            if(statusRep == 'Draft'){
                if(timerArray[0] != null && timerArray[0] != '' ){
                    str = timerArray[0];
                }else{
                    for(i=1; i<timerArray.length;i++)
                    {  
                        if(timerArray[i] != null && timerArray[i] != ''){
                            str = timerArray[i];
                            break;
                        }
                    }
                }
            }
            if(statusRep == 'Share'){
               
                if(timerArray[2] != null && timerArray[2] != ''){
                    str = timerArray[2];
                }else{
                    for(i=3; i<timerArray.length;i++)
                    {
                        if(timerArray[i] != null && timerArray[i] != ''){
                            str = timerArray[i];
                            break;
                        }
                    }
                }
            }
            if(statusRep == 'Propose'){
                if(timerArray[4] != null && timerArray[4] != ''){
                    str = timerArray[4];
                }else{
                    for(i=5; i<timerArray.length;i++)
                    {
                        if(timerArray[i] != null && timerArray[i] != '' ){
                            str = timerArray[i];
                            break;
                        }
                    }
                }
            }
            
            
            if(statusRep == 'Decide'){
                if(timerArray[6] != null && timerArray[6] != ''){
                    str = timerArray[6];
                   // alert('1'+str);
                }else{
                    for(i=7;i<timerArray.length;i++)
                    {
                        if(timerArray[i] != null && timerArray[i] != ''){
                            str = timerArray[i];
                            //alert('2'+str);
                            break;
                        }
                    }
                }
            }
            
            if(statusRep == 'Execute'){
                if(timerArray[8] != null && timerArray[8] != ''){
                    str = timerArray[8];
                }else{
                    for(i=9;i<timerArray.length;i++)
                    {   
                        if(timerArray[i] != null && timerArray[i] != ''){
                            str = timerArray[i];
                            break;
                        }
                    }
                }
            }
            
            if(statusRep == 'Evaluate'){
                if(timerArray[10] != null && timerArray[10] != ''){
                    str = timerArray[10];
                }else{
                    for(i=11;i<timerArray.length;i++)
                    {
                        if(timerArray[i] != null && timerArray[i] != ''){
                            str = timerArray[i];
                            break;
                        }
                    }
                }
            }
            
            if(statusRep == 'Close'){
                if(timerArray[12] != null && timerArray[12] != ''){
                    str = timerArray[12];
                }
            }
            if(str != null && str != ''){
                strData = kendo.parseDate(str);
                if(strData > now){  
                    differ = strData - now;
                } else {
                    differ = now - strData;
                }
                days = Math.floor( differ / (1000*60*60*24) );
                hours = Math.floor( differ / (1000*60*60) );
                mins = Math.floor( differ / (1000*60) );
                //secs = Math.floor( differ / 1000 );
                dd = days;
                hh = hours - days * 24;
                mm = mins - hours * 60;
                //ss = secs - mins * 60;
                // document.getElementById("worldcup_countdown_time").innerHTML = dd + ' days<br/>' + hh + ' hours<br/>' + mm + ' minutes<br/>' + ss + ' seconds' ;
                if(dd >= 0){  
                    document.getElementById('pg:timingCenterDueDate').innerHTML = kendo.toString( strData,kendo.culture().calendar.patterns.g );  
                    $('#numberOfDaysLeft').html(dd+'d'+' '+':'+' '+hh+'h'+' '+':'+' '+mm+'m');
                    if(strData < now){  
                        $('#numberOfDaysLeft').css('color','Red');
                    } else {
                        $('#numberOfDaysLeft').css('color','Black');
                    }
                    $('.countdown-on').css('display','block');
                    $('#day-block').html(dd);
                    $('#hour-block').html(hh);
                    $('#min-block').html(mm);
                }else{  
                    $('#day-block').html('&nbsp;');
                    $('#hour-block').html('&nbsp;');
                    $('#min-block').html('&nbsp;');
                    
                    
                }
                document.getElementById('glyphTiming').style.display  = 'none';

                
            }else{
                    $('#day-block').html('&nbsp;');
                    $('#hour-block').html('&nbsp;');
                    $('#min-block').html('&nbsp;');
                    document.getElementById('pg:timingCenterDueDate').innerHTML = 'N/A';
                    if( ( {!socialInput.Accountable__c} || {!socialInput.Backup_for_Accountable__c} || {!socialInput.Responsible__c} ) && ( '{!Decision__c.phase__c}' != 'Close' ) ){
                      if( roleAcceptanceStatusGolbal == 'Approved/Accepted')
                      document.getElementById('glyphTiming').style.display  = 'block';
                    }
                    
                    $('#numberOfDaysLeft').html('&nbsp;');
                    //$('.countdown-on').css('display','none');
                    //$('.countdown-na').css('display','block');
            }
            window.setTimeout('updateTimerCountdown()', 60000 );
        }
        
        
    
        function getLocaleConvertedData(str){
            
            var localeFormat = '{!JSENCODE(dateFormat)}';
            localeFormat =  localeFormat.replace(/[^a-zA-Z 0-9]+/g,'/');
            str = str + '';
            strSplitDate =  str.split(' '); 
            
            var strDate = strSplitDate[0].replace(/[^a-zA-Z 0-9]+/g,'/');
            var localeFormatSplit = localeFormat.split('/');
            var strDateSplit = strDate.split('/');
            var dIndex = localeFormatSplit.indexOf('d');
            if(dIndex == -1){
                var dIndex = localeFormatSplit.indexOf('dd');
            }
            var mIndex = localeFormatSplit.indexOf('M');
            if(mIndex == -1){
                var dIndex = localeFormatSplit.indexOf('MM');
            }
            var yIndex = localeFormatSplit.indexOf('yyyy');
            if(strSplitDate.length == 2)
                str = strDateSplit[mIndex]+'/'+strDateSplit[dIndex]+'/'+strDateSplit[yIndex]+' '+strSplitDate[1];
            else
                str = strDateSplit[mIndex]+'/'+strDateSplit[dIndex]+'/'+strDateSplit[yIndex]+' '+strSplitDate[1]+' '+strSplitDate[2];
            strData = new Date(str);
            return strData;
        }
        function removeHTML (removedStr) {
            var removedStr = removedStr .replace(/\&quot/g,'\"');
            removedStr = removedStr .replace(/\&#039;/g,'\'');
            removedStr = removedStr .replace(/\&lt;/g,'<');
            removedStr = removedStr .replace(/\&gt;/g,'>');
            return removedStr;
        }
        function stripHTML(removedStr) {
            return removedStr.replace(/<\S[^><]*>/g,"");
            //return removedStr;
        }
        
        function showModalUpload(){
            // ----------------  implemented to have kendo popup ---------
            $('body').css('overflow','hidden');
            $('.bg-fade').fadeIn('slow');    
            $(".modal-window-upload").data("kendoWindow").center().title("Upload Decision Image").open().setOptions({width: 816});
            setTimeout(function(){ $(".modal-window-upload").data("kendoWindow").center()  },10)
            // ---------------- Ends implemented to have kendo popup ---------
        }
        function hideModalUpload(){            
            $('.bg-fade').fadeOut('slow');
            $('#modal-upload-image').data("kendoWindow").close();
            $('body').css('overflow','auto');
        }
        
        function showModalUpdate(){
            
            $('body').css('overflow','hidden');
            $('.bg-fade').fadeIn('slow'); 
            // ---------------- implemented to have kendo popup --------- 
            $("#modal-update-image").data("kendoWindow").center().title("Upload Image").open().setOptions({width: 816});
            setTimeout(function(){ $("#modal-update-image").data("kendoWindow").center()  },10)
            // ---------------- Ends implemented to have kendo popup ---------
        }
        function hideModalUpdate(){            
            $('.bg-fade').fadeOut('slow'); 
            $('#modal-update-image').data("kendoWindow").close();
            $('body').css('overflow','auto');
        }
      
        function deleteDecisionImage(){
            deleteDecisionImage1();
        }
        
        function isNumberKey(evt){
            if( event.target.value.length  == 16 )
            {
             alert('Maximum number of digits is 16');
              return false;
            }
             var charCode = (evt.which) ? evt.which : event.keyCode
            if ((charCode < 48 || charCode > 57 ) && charCode != 32 && charCode != 44 && charCode != 46 && charCode != 8 )
                return false;
    
            return true;
        }
         
        placeHoldersForFinancialFields(); 
        
        // Code for search on enter for Activities tab
        $('#searchActivity').keypress(function(e){
            if (e.keyCode == '13'){
                searchEventTask('{!JSENCODE(decision.id)}',$('#searchActivity').val());
                return false;
            }
        }); 
        
        
        // Get all TAsk and Event 
        function getAllTaskEvent(decisionId) {
            //setTextAreaSize();
            hideModal();
            DecisionView.activitiesTabWithSearch(decisionId, '' ,'', function(result, event)
            {
                if (event.status)
                {
                    var newTaskEvent = removeQuotes(result.taskEvent);
                    var grid = $("#gridTaskEvent").data("kendoGrid");
                    grid.dataSource.data(newTaskEvent);
                     viewModel.ds.data(
                        viewModel.ds.options.schema.parse(newTaskEvent || []) //just in case thenew data is null
                    );
                    $('.task-tab').html('('+newTaskEvent.length+')');
                    var isTaskDelay;
                    //if(newTaskEvent != null){
                        for(var i = 0; i < newTaskEvent.length ; i ++ ) {
                            if(newTaskEvent[i].delayTaskClass == 'delayTask' ) {
                                isTaskDelay = 'true';
                            }
                        }
                    //}
                    if(isTaskDelay == 'true') {
                        $('#activityTab a').css('color','#ff0000 !important');
                    }
                    else {
                        $('#activityTab a').css('color','#222');
                    }
                    //grid.dataSource.update();
                }
                
            }, {escape:true});
        }
        
        //Batch update for Activites tab method
        function parsingModifieData(t){
            var searchTextforActivities = $('#searchActivity').val();
            //js method to call controller method to update Activities.
            parseModifiedData(t,searchTextforActivities,'{!decision.Id}');
        }
        
        // Code for search on enter for People tab
        $('#searchPeople').keypress(function(e){
            if (e.keyCode == '13'){
                searchPeople('{!JSENCODE(decision.id)}',$('#searchPeople').val());
                return false;
            }
        }); 
        
        $('#opposeRejectBtn').click(function(){
            if({!socialInput.Veto_Rights__c}){
                var approvalHeader = document.getElementById('approve-header').innerHTML;
                if( ( approvalHeader.indexOf('Stance') != -1 ) || ( approvalHeader.indexOf('stance') != -1 ) ){ 
                     
                    $('#modal-decision-approve').data("kendoWindow").close();  
                    $('.modal-window-vetorejection').data("kendoWindow").center().open().setOptions({width: 500});
                    setTimeout(function(){ $('.modal-window-vetorejection').data("kendoWindow").center()  },10)
                    $('.bg-fade').fadeIn('slow');
                    $('body').css('overflow','hidden'); 
                }
                else 
                {
                  approvedReject('{!JSENCODE(decision.Id)}', 'Reject');
                }
            } else {  
                approvedReject('{!JSENCODE(decision.Id)}', 'Reject');
            }           
        });
        
        function GoToTimingTab(){ 
            $("#tabs").kendoTabStrip().data("kendoTabStrip").activateTab($('#timingsTab'));
            window.location.hash='#timingsTab_act';           
        }
        function GoToDetailsTab(){ 
            $("#tabs").kendoTabStrip().data("kendoTabStrip").activateTab($('#detailsTab'));
            window.location.hash='#detailsTab_act';           
        }
         
      //store Timing Id for remote call
       var protimingRecid;
       var exetimingRecid;
       var evaltimingRecid;
    // model declaration for propose phase date time picklist 
    
    /*  var ModelDecision = kendo.observable({
                selectedDate: null,
                isEnabled: false,
                isVisible: true,
                onChange: function() {
                    recodsPlannedEndate =  this.get("selectedDate") ;
                    if(recodsPlannedEndate != null){
                         var grid = $("#gridTime").data("kendoGrid");
                         grid.dataSource.data()[2].set('plannedEnd', recodsPlannedEndate);
                         grid.dataSource.sync();
                         grid.dataSource.data()[2].set('plannedEnd', ProEnddt);
                         $("#crrntEndDec").val(kendo.toString(ProEnddt));
                     }
                }
            });*/
    // kendo.bind($("#decisionDate"), ModelDecision);
     
    $("#crrntEndDec").kendoDateTimePicker({
                    value:null,
                    visible:true,
                    enabled:false,
                    format:kendo.culture().calendar.patterns.g,
                    change: function(e) {  
                    recodsPlannedEndate =  this.value() ;
                    if(recodsPlannedEndate != null){
                         var grid = $("#gridTime").data("kendoGrid"); 
                               
                         if( validateDatePickers(2, this.value(),'crrntEndDec')  == false )
                         return false; 
                        
                         grid.dataSource.data()[2].set('plannedEnd', recodsPlannedEndate); 
                         grid.dataSource.sync();
                         grid.dataSource.data()[2].set('plannedEnd', ProEnddt);
                         $("#crrntEndDec").val(kendo.toString(ProEnddt));
                     }
                 }
                });
     
 
     
      $("#crrntEndExe").kendoDateTimePicker({
                    value:null,
                    visible:true,
                    enabled:false,
                    change: function() {
                        recodsPlannedEndate =  this.value() ;
                        
                        if(recodsPlannedEndate != null){
                             var grid = $("#gridTime").data("kendoGrid");
                              if( validateDatePickers(4, this.value(),'crrntEndExe')  == false )
                              return false; 
                             grid.dataSource.data()[4].set('plannedEnd', recodsPlannedEndate);
                             grid.dataSource.sync();
                             grid.dataSource.data()[4].set('plannedEnd', ExeEnddt);
                             $("#crrntEndExe").val(kendo.toString(ExeEnddt));
                    
                         }
                    }
      
      }); 
     
     
     $("#crrntEndEval").kendoDateTimePicker({
                    value:null,
                    visible:true,
                    enabled:false,
                    change: function() {
                        recodsPlannedEndate =  this.value() ;
                        if(recodsPlannedEndate != null){
                             var grid = $("#gridTime").data("kendoGrid");

                             if( validateDatePickers(5, this.value(),'crrntEndEval')  == false )
                              return false; 

                             grid.dataSource.data()[5].set('plannedEnd', recodsPlannedEndate);
                             grid.dataSource.sync();
                              grid.dataSource.data()[5].set('plannedEnd', EvalEnddt);
                              $("#crrntEndEval").val(kendo.toString(EvalEnddt));
                           
                         } 
                    }
      
      });
     
     function validateDatePickers(phase,date,datepicker){
     
                               var grid = $("#gridTime").data("kendoGrid").dataSource.data();
                               // get a reference to the grid widget
                            
                               var recodsPhase ;
                               if( phase == 2)
                               recodsPhase = 'Propose';
                               if( phase == 4)
                               recodsPhase = 'Execute';
                               if( phase == 5)
                               recodsPhase = 'Evaluate'; 
                               
                               var recodsPlannedStartDate = grid[phase].get('plannedStart') ;
                               var recodsPlannedEndate =  date ;
                               var recordPhaseArray = ['Draft','Share','Propose','Decide','Execute','Evaluate','Close'];
                               var recordPhaseNum = recordPhaseArray.indexOf(recodsPhase) ;
                               var plannedDates = new Array();
                               var j=0; 
                               for(m=0;m<7;m++){
                                    if(recordPhaseNum != m) { 
                                        if(grid[m].plannedStart != ' ' && grid[m].plannedStart != null){
                                            plannedDates[j] = kendo.parseDate(grid[m].plannedStart);
                                        }else{
                                            plannedDates[j] = '';
                                        }
                                    }
                                    else {   
                                        if(recodsPlannedStartDate != ' ' && recodsPlannedStartDate != null) {
                                            plannedDates[j] = recodsPlannedStartDate;
                                        }
                                        else {
                                            plannedDates[j] = '';
                                        }
                                    }
                                    j++;
                                    if(recordPhaseNum != m) {   
                                        if(grid[m].plannedEnd != ' ' && grid[m].plannedEnd != null){
                                             plannedDates[j] = kendo.parseDate(grid[m].plannedEnd);
                                        }else{
                                            plannedDates[j] = '';
                                        }
                                    }
                                    else {   
                                        if(recodsPlannedEndate != ' ' && recodsPlannedEndate != null) {
                                            plannedDates[j] = recodsPlannedEndate;
                                        }
                                        else {
                                            plannedDates[j] = '';
                                        }
                                    }
                                    j++;    
                               } 
                              
                               if((recodsPlannedStartDate != '' && recodsPlannedStartDate != null) || (recodsPlannedEndate != '' && recodsPlannedEndate != null)){
                                   var today = new Date();
                                   if(recodsPlannedStartDate != '' && recodsPlannedStartDate != null && recodsPlannedStartDate != ''){
                                        if(recodsPlannedStartDate < today){
                                             alert(recordPhaseArray[recordPhaseNum]+' start date should be a date after today');
                                             $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );
                                             return false;
                                        }
                                   }
                                   if(recodsPlannedEndate != '' && recodsPlannedEndate != null && recodsPlannedEndate != ''){
                                       if(recodsPlannedEndate < today){
                                            alert(recordPhaseArray[recordPhaseNum]+' end date should be a date after today');
                                             $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );
                                            return false;                                           
                                        }
                                   }
                                   if((recodsPlannedStartDate != ''  && recodsPlannedStartDate != null && recodsPlannedStartDate != ' ') && (recodsPlannedEndate != ''  && recodsPlannedEndate != null && recodsPlannedEndate != ' ')){
                                        if(recodsPlannedStartDate > recodsPlannedEndate){
                                            alert(recordPhaseArray[recordPhaseNum]+' start date should be a date after '+ recordPhaseArray[recordPhaseNum]+' start date');
                                             $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );
                                            return false;
                                        }
                                   }
                                 
                                   if(recodsPlannedStartDate != '' && recodsPlannedStartDate != null && recodsPlannedStartDate != ' '){  
                                        
                                        for(i=(recordPhaseNum*2) - 1 ;i>=0;i--){
                                            if(plannedDates[i] != ''){
                                                var strDate = plannedDates[i];
                                                var recordDate = new Date(strDate);
                                                if(recodsPlannedStartDate < recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' start date should be a date after previous phases');
                                                    $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );
                                                    return false;   
                                                }
                                            }   
                                        }
                                        
                                        for(i=(recordPhaseNum*2) + 1;i<=13;i++){    
                                            if(plannedDates[i] != ''){
                                                var strDate = plannedDates[i];
                                                var recordDate = new Date(strDate);
                                                if(recodsPlannedStartDate > recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' start date should be a date before next phases');
                                                    $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );
                                                    return false;   
                                                }
                                            }   
                                        }           
                                   }     
                                   if(recodsPlannedEndate != '' && recodsPlannedEndate != null && recodsPlannedEndate != ' '){     
                                        for(i=(recordPhaseNum*2) - 1;i>=0;i--){
                                            if(plannedDates[i] != ''){  
                                                var strDate = plannedDates[i];    
                                                var recordDate = new Date(strDate);  
                                                if(recodsPlannedEndate < recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' end date should be a date after previous phases');
                                                     $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );
                                                    return false;   
                                                }
                                            }   
                                        }
                                        for(i=(recordPhaseNum*2) + 2;i<=13;i++){
                                            if(plannedDates[i] != ''){ 
                                                var strDate = plannedDates[i];
                                                var recordDate = new Date(strDate);
                                                if(recodsPlannedEndate > recordDate){
                                                    alert(recordPhaseArray[recordPhaseNum]+' end date should be a date before next phases');
                                                    $("#"+datepicker).data('kendoDateTimePicker').value( grid[phase].get('plannedEnd') );  
                                                    return false;   
                                                }
                                            }   
                                        }           
                                   }
                                   
                               } 
     
     } 
            
        // enable & desable timing section & as per current pahase in Command center  
    function commentSectionTime(gridData){
        // current value assignment
         ProEnddt = kendo.parseDate( gridData[2].plannedEnd);
         ExeEnddt = kendo.parseDate( gridData[4].plannedEnd);
         EvalEnddt = kendo.parseDate(  gridData[5].plannedEnd);
         var chkpermission = (convertStringToBoolean('{!socialInput.Accountable__c}') ||  convertStringToBoolean('{!socialInput.Backup_for_Accountable__c}')  ||  convertStringToBoolean('{!socialInput.Responsible__c}') )  ? true : false;
  
         // update timing record Id 
         protimingRecid = gridData[2].id;
         exetimingRecid = gridData[4].id;
         evaltimingRecid = gridData[5].id;
            
             if((gridData[2].currentPhases == 'Propose' || gridData[2].currentPhases == 'Share' ||  gridData[2].currentPhases == 'Draft') && chkpermission == true   ){
                   var datetimepicker = $("#crrntEndDec").data("kendoDateTimePicker");
                   datetimepicker.enable();
              }else{
                    var datetimepicker = $("#crrntEndDec").data("kendoDateTimePicker");
                    datetimepicker.enable(false);
              }
              
             if((gridData[4].currentPhases == 'Execute' || gridData[4].currentPhases == 'Draft'  || gridData[4].currentPhases == 'Share' || gridData[4].currentPhases == 'Propose' || gridData[4].currentPhases == 'Decide') && chkpermission == true  ){
                   
                    var datetimepicker = $("#crrntEndExe").data("kendoDateTimePicker");
                    datetimepicker.enable();
                   
              }else{
                     var datetimepicker = $("#crrntEndExe").data("kendoDateTimePicker");
                     datetimepicker.enable(false);
              }
              
              if((gridData[5].currentPhases == 'Evaluate' || gridData[5].currentPhases == 'Draft'  || gridData[5].currentPhases == 'Execute'  || gridData[5].currentPhases == 'Share' || gridData[5].currentPhases == 'Propose' || gridData[5].currentPhases == 'Decide') && chkpermission == true  ){
                    var datetimepicker = $("#crrntEndEval").data("kendoDateTimePicker");
                     datetimepicker.enable();       
              }else{
                   var datetimepicker = $("#crrntEndEval").data("kendoDateTimePicker");
                     datetimepicker.enable(false); 
              }
            //console.log( typeof ProEnddt)
           $("#crrntEndDec").data("kendoDateTimePicker").value(ProEnddt);
           $("#crrntEndExe").data("kendoDateTimePicker").value(ExeEnddt);
           $("#crrntEndEval").data("kendoDateTimePicker").value(EvalEnddt);
    }
    
           $('#crrntEndDec').on("keypress keydown keyup", function(e) {
                
                   if(e.keyCode == 8 || e.keyCode == 46) {
                    recodsPlannedEndate= '';
                    var grid = $("#gridTime").data("kendoGrid");
                    grid.dataSource.data()[2].set('plannedEnd', recodsPlannedEndate);
                    grid.dataSource.sync();
                     
                 }else{
                            e.preventDefault();
                       }
            });
           $('#crrntEndExe').on("keypress keydown keyup", function(e) {
                
                   if(e.keyCode == 8 || e.keyCode == 46) {
                    recodsPlannedEndate= '';
                    var grid = $("#gridTime").data("kendoGrid");
                    grid.dataSource.data()[4].set('plannedEnd', recodsPlannedEndate);
                    grid.dataSource.sync();
                     
                 }else{
                            e.preventDefault();
                       }
            });
           
              $('#crrntEndEval').on("keypress keydown keyup", function(e) {
                
                   if(e.keyCode == 8 || e.keyCode == 46) {
                    recodsPlannedEndate= '';
                    var grid = $("#gridTime").data("kendoGrid");
                    grid.dataSource.data()[5].set('plannedEnd', recodsPlannedEndate);
                    grid.dataSource.sync();
                     
                 }else{
                            e.preventDefault();
                       }
            });
            
            
  
        
    </script>
    <script>
        // the following script is used to refresh the activities tab when a task is created from chatter.
        // here I am refreshing the activity tab by delaying 3 secs once I create a task because the task has to be inserted and then refreshed.
        $("#publishersharebutton").click(function() {
            setTimeout(function(){
              getAllTaskEvent('{!decision.id}');
            }, 3000);
        });
    </script>
    <script>
        
        function chatterRerender(){
            //setTimeout(function(){
                chatterRefresh();
            //}, 3000);
        }
        
        function refreshActivities(){ alert(2);
            var searchTextActivity = $('#searchActivity').val();
            DecisionView.activitiesTabWithSearch('{!decision.Id}', null, searchTextActivity, function(result, event)
             {
                 if (event.status)
                 {
                    var newTaskEvent = removeQuotes(result.taskEvent);
                    var grid =$("#gridTaskEvent").data("kendoGrid");
                    grid.dataSource.data(newTaskEvent );
                    viewModel.ds.data(
                     viewModel.ds.options.schema.parse(newTaskEvent || []) //just in case thenew data is null
                    );
                    $('.task-tab').html('('+newTaskEvent.length+')');
                    isTaskDelay  = false;
                    if(newTaskEvent != null){
                        for(var i = 0;  newTaskEvent.length > i; i ++ ) {
                            if(newTaskEvent[i].delayTaskClass == 'delayTask' ) {
                                isTaskDelay = true;
                            }
                        }
                    }
                    if(isTaskDelay) {
                        $('#activityTab a').css('color','#ff0000 !important');
                    }
                    else {
                        $('#activityTab a').css('color','#222');
                    }
                    //hidefade();
                    //kendoTaskEvent(newTaskEvent,'','{!socialInput.Accountable__c}','{!socialInput.Backup_for_Accountable__c}','{!socialInput.Role_Acceptance_Status__c}','{!socialInput.Responsible__c}');
                 }
             }, {escape:true});
        }
        
        function closeTaskPopup(){
            hideTaskPopup();
            selectedTasks = new Array();
            $('#deleteTask').addClass('btn-disabled');
            $('#deleteTask').attr('onclick','').unbind('click');
            $('#editTask').addClass('btn-disabled');
            $('#editTask').attr('onclick','').unbind('click');
            DecisionView.activitiesTabWithSearch('{!decision.Id}', null, '', function(result, event)
             {
                 if (event.status)
                 {
                     //update Activities tab
                    var newTaskEvent = removeQuotes(result.taskEvent);
                    $('.task-tab').html('('+newTaskEvent.length+')');
                    isTaskDelay  = false;
                    if(newTaskEvent != null){
                        for(var i = 0;  newTaskEvent.length > i; i ++ ) {
                            if(newTaskEvent[i].delayTaskClass == 'delayTask' ) {
                                isTaskDelay = true;
                            }
                        }
                    }
                    if(isTaskDelay) {
                        $('#activityTab a').css('color','#ff0000 !important');
                    }
                    else {
                        $('#activityTab a').css('color','#222');
                    }
                    kendoTaskEvent(newTaskEvent,'','{!socialInput.Accountable__c}','{!socialInput.Backup_for_Accountable__c}','{!socialInput.Role_Acceptance_Status__c}','{!socialInput.Responsible__c}');
                 }
             }, {escape:true});
             chatterRerender();
        }
        
        $(document).ready(function () {
            hideLoaderAndFade();
                    });
        
            kendo.ui.TabStrip.fn._keydown = function(e) {
                var that = this,
                key = e.keyCode;
        
                that._last = key;
        
               clearTimeout(that._typing);
           
               if (  key !== kendo.keys.DOWN && key !== kendo.keys.UP && key !== kendo.keys.LEFT && key !== kendo.keys.RIGHT ) {
                   //that._search();
               }
            };
            function showIndicator(){
                var chkpermission = (convertStringToBoolean('{!socialInput.Accountable__c}') ||  convertStringToBoolean('{!socialInput.Backup_for_Accountable__c}')  ||  convertStringToBoolean('{!socialInput.Responsible__c}') )  ? true : false;
               // if(!chkpermission){
               if(document.getElementById("indicatorDropDownComm").style.display=="none"){
                    document.getElementById("indicatorDropDownCommDisplay").style.display="block";
                    document.getElementById("indicatorComm").style.cursor="default";
                }
                //}
            }
            function hideIndicator(){
                var chkpermission = (convertStringToBoolean('{!socialInput.Accountable__c}') ||  convertStringToBoolean('{!socialInput.Backup_for_Accountable__c}')  ||  convertStringToBoolean('{!socialInput.Responsible__c}') )  ? true : false;
               // if(!chkpermission){
                    document.getElementById("indicatorDropDownCommDisplay").style.display="none";
                //}
            } 
            function openIndicator(){
                var chkpermission = (convertStringToBoolean('{!socialInput.Accountable__c}') ||  convertStringToBoolean('{!socialInput.Backup_for_Accountable__c}')  ||  convertStringToBoolean('{!socialInput.Responsible__c}') )  ? true : false;
               var chkStancePermission= false;
                if('{!socialInput.Role_Acceptance_Status__c}' == 'Approved/Accepted'){
                    chkStancePermission = true
                }
               var chkClosePhase = $('#status-block').text();//'{!decision__c.Phase__c}'
              // alert('chkClosePhase'+chkClosePhase)
                if((chkpermission && chkStancePermission) && chkClosePhase != 'Closed' ){
                    if(document.getElementById("indicatorDropDownComm").style.display=="none"){
                        document.getElementById("indicatorDropDownCommDisplay").style.display="none";
                        document.getElementById("indicatorDropDownComm").style.display="block";
                    }else{
                        document.getElementById("indicatorDropDownComm").style.display="none";
                    }
                }
            }
            function selectIndicator(indicatorID){  
                //alert('tt'+indicatorID);  
                document.getElementById("indicatorDropDownComm").style.display="none";
                $('#indicatorComm').css('color','#dedbd7 !important');
                //$('#indicatorComm').removeClass('notGiven').removeClass('good').removeClass('minorChallenges').removeClass('critical').removeClass('completed').removeClass('completedProb');
                switch(indicatorID) {
                    case "notGiven":
                        DecisionView.updatePulse('Not Given','{!Decision__c.Id}',function(result,event){})
                        //document.getElementById("indicatorComm").style.backgroundPosition="0px 0px";
                        //$('#indicatorComm').addClass('notGiven');
                        $('#indicatorComm').css('color','#dedbd7');
                        break;
                    case "good":
                        DecisionView.updatePulse('Good','{!Decision__c.Id}',function(result,event){})
                        //document.getElementById("indicatorComm").style.backgroundPosition="0px -15px";
                        //$('#indicatorComm').addClass('good');
                        $('#indicatorComm').css('color','#009940');
                        break;
                    case "minorChallenges":
                        DecisionView.updatePulse('Minor Challenges','{!Decision__c.Id}',function(result,event){})
                        //document.getElementById("indicatorComm").style.backgroundPosition="0px -30px";
                        //$('#indicatorComm').addClass('minorChallenges');
                        $('#indicatorComm').css('color','#ffca30');
                        break;
                    case "critical":
                        DecisionView.updatePulse('Critical','{!Decision__c.Id}',function(result,event){})
                        //document.getElementById("indicatorComm").style.backgroundPosition="0px -45px";
                        //$('#indicatorComm').addClass('critical');
                        $('#indicatorComm').css('color','#ff0000');
                        break;
                    case "completed":
                        DecisionView.updatePulse('Completed','{!Decision__c.Id}',function(result,event){})
                        //document.getElementById("indicatorComm").style.backgroundPosition="0px -60px";
                        //$('#indicatorComm').addClass('completed');
                        $('#indicatorComm').css('color','#0099ff');
                        break;
                    case "completedProb":
                        DecisionView.updatePulse('Completed with Problems','{!Decision__c.Id}',function(result,event){})
                        //document.getElementById("indicatorComm").style.backgroundPosition="0px -75px";
                        //$('#indicatorComm').addClass('completedProb');
                        $('#indicatorComm').css('color','#993399');
                        break;        
                    }
            }
            
    </script>
    <script>
        
        viewModelTiming = '';
        $(document).ready(function () {
            selectIndicator('{!progress}');
             var datetimepicker = $("#crrntEndEval").data("kendoDateTimePicker");
             var datePickerOptions = {
                                    format: kendo.culture().calendar.patterns.g
                                };
             datetimepicker.setOptions(datePickerOptions);
             $("#typeSelect").kendoDropDownList({change: function(e) {
                       saveClassification();
              }});
             $("#prioritySelect").kendoDropDownList({change: function(e) {
                        saveClassification();
              }});
             
               if( '{!socialInput.Role_Acceptance_Status__c}' == 'Pending Approval' )  
              {
                  document.getElementById('glyphOverview').style.display = 'block';
                  document.getElementById('glyphTiming').style.display = 'none';
                  document.getElementById('glyphSocial').style.display = 'none';
                  document.getElementById('glyphEvaluation').style.display = 'none';
              
              }  
              
             $('#tabs-6 .pbButton input').addClass('k-button');  
             $('#tabs-6 .pbButton input').removeClass('btn');  
           
         });
         
        function saveClassification(){
             
                var  typeSelect = $("#typeSelect").data('kendoDropDownList').value();
                var  prioritySelect = $("#prioritySelect").data('kendoDropDownList').value();
                var  topics =    $("#TopicMultiSelectClassification").data('kendoMultiSelect').value().toString();;
                var  topicsArray =    $("#TopicMultiSelectClassification").data('kendoMultiSelect').value(); 
                DecisionView.saveClassification('{!Decision__c.id}',typeSelect,prioritySelect,topics,function(result,event){
                    
                    
                     $("#TopicMultiSelect").data('kendoMultiSelect').value(topicsArray );  
                     document.getElementById("pg:generalViewFrm:decisionType").value = typeSelect;  
                     document.getElementById("pg:generalViewFrm:priorityValue").value =prioritySelect ;     
                     
                     document.getElementById("pg:decisonViewState:topicsview").innerHTML = topics;  
                     document.getElementById("pg:decisonViewState:priorityview").innerHTML =prioritySelect ; 
                     document.getElementById("pg:decisonViewState:decisionTypeView").innerHTML =typeSelect ; 
                });   

         }
    </script>
    <script>
    $(document).ready(function(){
        var decisionWindows = $(".modal-window-upload,.modal-window-relation,.modal-update-image,#modal-decision-approve,.modal-decision-approve,.modal-window-approval, .modal-window,.modal-window-activitywarning,.modal-window-massEditing,.modal-window-phasewarning,.modal-window-vetorejection,.modal-window-massDelete,.modal-window-noPermission");
        var onClose = function(){
            $('.bg-fade').fadeOut('slow');
            $('body').css('overflow','auto'); 
        }
        if (!decisionWindows.data("kendoWindow")){
            decisionWindows.kendoWindow({      
               
                actions:[
                            "Close" 
                        ],
                        close: onClose  
                });
        } 
    })  
    </script>
    <style>
        .modal-window-newTaskPopup {
            min-height: 38em;
          }
           .modal-window-newTaskPopup  .k-multiselect {
            background: #fff !important;
            width: 62.3em !important;
        }
        .modal-window-newTaskPopup .k-state-hover:hover {
            border-color: #ccc !important;
        }
        .modal-window-newTaskPopup .k-header{
            margin-top: 0px;
        }
        .modal-window-newTaskPopup .dateOnlyInput input{
            width: 5.2em !important;
        }
        #topicsSelection .k-input{
            border: 0px ;
        }
        #topicsSelection{
            height: 4.5em;
            width: 21em;
            background:#fff;
            background-color:#fff;
            margin-top: -8px;
            border:1px solid #ccc;
            margin-left: 59px;
            overflow: auto;
        }
       #topicsSelection .k-header{
            margin-top: 0px;
        }
        #gridForm ul {
            margin-top: 1em;
        }   
        
        #TopicMultiSelectClassification{
            width: 255px;
            max-height:52px;
            min-height:51px;
            
        }
        #topicsSelection .k-header{
            border:1px solid #ccc !important;
        }
    .k-state-selected, .k-list>.k-state-selected, .k-list>.k-state-focused, .k-panelbar .k-state-selected, .k-button:active, .k-ghost-splitbar-vertical, .k-ghost-splitbar-horizontal, .k-draghandle.k-state-selected:hover{
        background-color: #999;
        border-color: #999;
      }
      #lookUp div{
            margin-right: 6.5em !important;
        }
        .decisionSearch, .taskSearch, .planSearch {
            margin-top: -3px;
        }
        .taskSearch .k-textbox, .decisionSearch .k-textbox, .planSearch .k-textbox{
            height: 32px;
            background-image: none,linear-gradient(to bottom,rgba(255,255,255,.6) 0,rgba(255,255,255,.0) 100%);
            background-position: 50% 50%;
            background-color: #e3e3e3;
            outline: 0;
            padding: 2px .3em;
            line-height: 1.6em;
            display: inline-block;
            vertical-align: middle;
        }
        .decisionSearch .k-textbox > input, .taskSearch .k-textbox > input, .planSearch .k-textbox > input{
            height: 0.6em;
            width: 9.5em;
        }
        div#tabs{
           background: none;
        }
    </style>
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-ui-1.10.3.js')}"/>  
    
    <apex:includeScript value="{!URLFOR($Resource.KendoMetroNewLibrary, '/kendoMetroNewLibrary/kendo.all.min.js')}"/> 
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/console.js')}"/>
    
     <!--------- FT Scripts ----------->
            
        <apex:includeScript value="{!$Page.DecisionScripts}" />
    
    <script id="checkbox-template" type="text/kendo-ui-template">
      <div align="center"> <input type="checkbox" class="taskCheckbox" onclick="selectTaskFunc('#:id#','#:isDeletable#',this)" #if(isSelected){# checked="checked" #}# #if(toDisable == 'disabled'){# disabled="disabled" #}# ></input></div>
     </script>
       <script type="text/javascript">
                $(function() {
                    // check native support
                    $('#support').text($.fullscreen.isNativelySupported() ? 'supports' : 'doesn\'t support');

                    // open in fullscreen
                    $('.requestfullscreen').click(function() {  
                    var winHeight = $(window).height();
                    document.getElementById('networkframe').src =  '/apex/networkgraph?id=' + '{!Decision__c.id}';
                    $('#networkframe').css('height',winHeight+'px').css('margin-top','50px');
                    showLoader()
                      
                       $('#fullscreen').fullscreen();
                       return false;
                    });

                    // exit fullscreen
                    $('.exitfullscreen').click(function() {
                        
                     document.getElementById('networkframe').src =  '/apex/networkgraph?id=' + '{!Decision__c.id}';
                      $('#networkframe').css('height','400px').css('margin-top','10px');
                     showLoader()

                        $.fullscreen.exit();
                        return false;
                    });

                    // document's event
                    $(document).bind('fscreenchange', function(e, state, elem) {
                        // if we currently in fullscreen mode
                        if ($.fullscreen.isFullScreen()) {
                            $('#fullscreen .requestfullscreen').hide();
                            $('#fullscreen .exitfullscreen').show();
                        } else {
                            $('#fullscreen .requestfullscreen').show();
                            $('#fullscreen .exitfullscreen').hide();
                        }

                        $('#state').text($.fullscreen.isFullScreen() ? '' : 'not');
                    });
               });
            </script>
</html>
    <apex:form >
        <apex:actionFunction name="hideTaskPopup" action="{!closeTaskPopup}" reRender="TaskpopupComponantId" oncomplete="hidefade();closewrappertaskPopup()"/>
    </apex:form>  
</apex:page>