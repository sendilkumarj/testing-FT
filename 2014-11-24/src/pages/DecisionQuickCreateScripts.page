<apex:page contentType="text/javascript"  >
    
    function showInfoIcon() {
         var count = $('#approveCheck :checkbox:checked').length;
         if(count > 0){
             $('#qcdInfo').css('display','block');
             var accountable = $("#demo-input-pre-populated-with-tokenlimit").data("kendoMultiSelect");
			accountable.enable(true);
         }else{
             $('#qcdInfo').css('display','none');
             var accountable = $("#demo-input-pre-populated-with-tokenlimit").data("kendoMultiSelect");
			  accountable.enable(false);
         }
    }
    
    function disableImmediateCheckBoxes(t,propId,decId){
    	if(t.checked){
    		document.getElementById(propId).disabled = false;
			document.getElementById(decId).disabled = true;
    	} else if(document.getElementById(propId).checked == false || document.getElementById(decId).checked == false){
    		document.getElementById(propId).disabled = false;
			document.getElementById(decId).disabled = false;
    	} else {
    		document.getElementById(propId).disabled = true;
			document.getElementById(decId).disabled = false;
    	}	
    }
    
    // accountable
    function addAccountable(userId) {
        accountable = userId;
        
    }
    function removeAccountable(userId) {
        accountable = '';
        
    }    
    
    
    // responsiable
    function addResponsiable(userId) {
        var index = responsiable.indexOf(userId);
        if(index == -1){
            responsiable.push(userId);
        }
    }
    function removeResponsiable(userId) {
        var index = responsiable.indexOf(userId);
        if(index!=-1){
            responsiable.splice(index, 1);
        }        
    }
    
    // consulted
    function addConsulted(userId) {
        
        var index = consulted.indexOf(userId);
        if(index == -1){
            consulted.push(userId);
        }   
    }
    function removeConsulted(userId) {
        var index = consulted.indexOf(userId);
        if(index!=-1){
            consulted.splice(index, 1);
        }        
    }
    
    //informed
    function addInformed(userId) {  
        
        var index = informed.indexOf(userId);
        if(index == -1){
            informed.push(userId);
        }
    }
    function removeInformed(userId) {
        var index = informed.indexOf(userId);
        if(index!=-1){
            informed.splice(index, 1);
        }        
    }
    
    
    function addedGroup(groupId, currentFieldId, existingGroup, role) {
        console.log('currentFieldId'+currentFieldId);
        DecisionQuickCreate.addGroupMember(groupId, function(result, event)
        {
            if (event.status)
            {
                // update issues quality
                var item = removeQuotes(result);
              // console.log('item'+JSON.stringify(item));
             	 var oldMembers = $("#"+currentFieldId).data("kendoMultiSelect").value();
                 var newMembers =new Array();
                 var newMembersIds =new Array();
                 var oldMembersIds = new Array();
                 var newgroupsAsinfo = new Array();
                 var oldgroupsAsinfo = $('#demo-input-local3').data("kendoMultiSelect").value();
               
               
               	 for(i = oldMembers.length -1   ;i >= 0  ; i --) {
               	 	if(oldMembers[i].indexOf('00G') != 0) {
                    	oldMembersIds.push(oldMembers[i]) ; 
                   }else{
                   		newgroupsAsinfo.push(oldMembers[i]);
                   }	                    	 
                 }
                
                for(i = item.length -1   ;i >= 0  ; i --) {
                    newMembersIds.push(item[i].id) ;                    	 
                }
                 
                 oldMembersIds = oldMembersIds.concat( newMembersIds)
                 
                 oldgroupsAsinfo = oldgroupsAsinfo.concat( newgroupsAsinfo);
                 //make unique id for group and informed
                 
	                  var uniqueUserIds = [];
	                  var uniqueGrpIds = [];
	                  
	                  $.each(oldMembersIds, function(i, el){
						    if($.inArray(el, uniqueUserIds) === -1) uniqueUserIds.push(el);
						});
					
					 $.each(oldgroupsAsinfo, function(i, el){
						    if($.inArray(el, uniqueGrpIds) === -1) uniqueGrpIds.push(el);
						});
					 
                 //for individual user
                 
                 $("#"+currentFieldId).data("kendoMultiSelect").dataSource.filter({});
                 $("#"+currentFieldId).data("kendoMultiSelect").value(uniqueUserIds);
               
                // for informed as group
                
                
                $('#demo-input-local3').data("kendoMultiSelect").dataSource.filter({});
                $('#demo-input-local3').data("kendoMultiSelect").value(uniqueGrpIds);
               
               
            }
        }, {escape:true});
        
        
     }

    
    // SAVE DECISION
    function saveDecision() {
    
        var title = document.getElementById('pageId:qcdEditForm:title').value;
        var decision = document.getElementById('pageId:qcdEditForm:decision').value ;
        var problemStatement = document.getElementById('pageId:qcdEditForm:problemStatement').value ;
        var approvalCheckBox = document.getElementById('pageId:qcdEditForm:approvalChecknBoxVal').checked;
        var proposeCheckBox = document.getElementById('pageId:qcdEditForm:proposedecision').checked;
        var privateCheckbox = document.getElementById('pageId:qcdEditForm:privateDecision').checked;
        var accVal = $('#demo-input-pre-populated-with-tokenlimit').val(); 
        var priorityVal =  $('#decisionPriority').data('kendoDropDownList').value();
        var dueDate    = kendo.toString($('#decisionDue').data('kendoDateTimePicker').value(),"yyyy-MM-dd HH:mm:ss"); 
        accountable = $("#demo-input-pre-populated-with-tokenlimit").data("kendoMultiSelect").value();
        responsiable = $('#demo-input-local').val();
        consulted = $('#demo-input-local2').val();
        informed = $('#demo-input-local3').val();
        if(responsiable == null){
        	responsiable = '';
        }
        
        if(consulted == null){
        	consulted = '';
        }
        
        if(informed == null){
        	informed = '';
        }
        
        if(title == '') {
            alert('Please enter the decision title');
            return false;
        } 
        
        if(priorityVal == '') { 
            alert('Please enter the priority');   
            return false;
        }
        
        if(problemStatement == '') {
            alert('Please enter the Description');
            return false;
        }
        if(decision == '') {
            if(convertStringToBoolean(approvalCheckBox) || convertStringToBoolean(proposeCheckBox)) {
            //if(convertStringToBoolean(approvalCheckBox) ) {
                alert('Please enter the decision');
                return false;
            }
        }
        
        if(accountable == ''){
            alert('Each decision must have exactly one accountable assigned.');
            return false;
        }
        var quickA = $('#approveCheck :checkbox:checked').length;
        //alert(approvalCheckBox);
        if(approvalCheckBox == false) {
        	if(proposeCheckBox == false){
	            if(accountable != loggedInUser) {
	                alert('The accountable cannot be changed before the decision is first saved,and then shared with others.');
	                return false;
	            } 
	        }else {
	            if(accountable != loggedInUser) {
	                if(responsiable.indexOf(loggedInUser) != -1 || consulted.indexOf(loggedInUser) != -1 || informed.indexOf(loggedInUser) != -1) {
	                }
	                else {
	                    alert('If you approve the decision with immediate effect, you must remain a collaborator.');
	                    return false;
	                }
	            }
	        }
        }
        else {
            if(accountable != loggedInUser) {
                if(responsiable.indexOf(loggedInUser) != -1 || consulted.indexOf(loggedInUser) != -1 || informed.indexOf(loggedInUser) != -1) {
                }
                else {
                    alert('If you approve the decision with immediate effect, you must remain a collaborator.');
                    return false;
                }
            }
        }
        showLoader();
         $('.preloader').css('z-index','100000');
	    $('.bg-fade').css('z-index','100001');
        save(title,problemStatement,decision,accountable,responsiable.toString(),consulted.toString(),informed.toString(),privateCheckbox,approvalCheckBox,priorityVal,dueDate,proposeCheckBox);
        //save(title,problemStatement,decision,accountable,responsiable.toString(),consulted.toString(),informed.toString(),privateCheckbox,approvalCheckBox,priorityVal,dueDate);
        return false;
    }
    
    // CONVERT STRING TO BOOLEAN
    function convertStringToBoolean(srcValue) {
        
        var destinationValue;
        if(srcValue == 'true') {
            destinationValue = true;
        }
        else if (srcValue == 'True') {
            destinationValue = true;
        }
        else if  (srcValue == true) {
            destinationValue = true;
        }
        else if  (srcValue == '1') {
            destinationValue = true;
        }
        else if  (srcValue == '0') {
            destinationValue = false;
        }
        else if(srcValue == 'false') {
            destinationValue = false;
        }
        else if (srcValue == 'False') {
            destinationValue = false;
        }
        else if  (srcValue == false) {
            destinationValue = false;
        }
        
        return destinationValue;
     }

</apex:page>