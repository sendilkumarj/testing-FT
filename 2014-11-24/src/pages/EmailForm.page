<apex:page showHeader="false" docType="xhtml-1.0-strict"   sidebar="false" controller="EmailController">
 <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>   


 <apex:stylesheet value="{!$Page.CommonStyles}" />
 <style>
 /*Email form outer conainer*/
 .email-feedback-wrap
 {
   width:100%;
   padding:0px 0px 0px 0px;
   margin:0px 0px 0px 0px;
 }
 /*Feedback header*/
 .feedback-head
 {
   background-color:black;
   height:40px;
   padding-left: 17px;
 }
 /*Subhead*/
 .feedback-subhead
 { 

     padding:8px 0px 8px 20px
 }
 /*Text inside the subhead*/
 .subhead-text
 {
   float:left;
   font-weight:bold;
 }
 /*for wrapping all fields and labels*/
 .field-wrap
 {
     padding:8px 0px 0px 30px;
     margin-bottom: 8px;
     margin-top: 5px;
 }
 /*fingertip image container*/
 .logo-thumb
 {
  float:left;
  padding-top: 4px;
 // width:30px;
 // height:100%;  
 // background: url("{!URLFOR($Resource.FTIcon)}") 0 0 no-repeat; 
 // background-size:38px 30px;
 }
 /*Support link*/
 .link-support
 {
  float:right;
  margin-right: 21px;
  padding: 16px 0px 0px 0px;
 }
 /* Support title container*/
 .title-support
 { margin-left:5px;
   float:left;
   padding: 8px 0px 0px 3px;
 }
 /* adjust width*/
 .input-subject
 {
  width:93%;
 }
 /*Used for all text area*/
 .text-area
 {
  height:100px;
 }
 /*Support text container*/
 .support-text
 {
  color:#FFFFFF;
  font-size: 19px !important;
  font-weight: bold;
 }
 
  .support-link
 {
  color:#FFFFFF;
  font-size: 12px !important;
  font-weight: normal;
 }
 
   .support-link:hover
 {
  color:#FFFFFF;
  font-size: 12px !important;
  font-weight: normal;
 }
  .pointer
  {
   cursor:pointer;
   text-align:center;
  }
  .attachment
  {
   width:200px; !important
  }
  #errorpanel
  {
   display:none;
   color:red;
  }
  
   #errorpanelmsg
  {
   display:none;
   color:red;
  }
  #errorpanelemptysubj
  {
   display:none;
   color:red;
  }
  #errorpanelfile
 {
   display:none;
   color:red;
 }
  .field-label
  {
   font-weight:bold;
  }
  .subhead-line
  {
   clear: both; 
   float: left;
   width:94%;
   height:100%;
  }
  
  .inputborder
  {
     border:solid 1px #000000 !important;
     outline: none;
  }
  .fileborder
  {
   width: 468px;
   padding: 8px 0px 8px 5px;
  }
  hr 
  { display: block; height: 1px;
    border: 0; border-top: 1px solid #ccc;
  }
  .textarea
  {
   width: 463px  !important;
   height: 68px  !important;
  }
  .text
  {
  width: 468px;
  }
  .select
  {
   width: 475px;
  }
  .sendbutton
  {
   width:78px;
  }

 </style>
 <!--form to submit data -->
 <apex:form id="email-feedback-form">
  <!--Feedback container -->
 <div class="email-feedback-wrap">
     <!-- Header for image Fingertip support text and Go to support link and close button -->
     <div class="feedback-head">
        <div class="logo-thumb">
           <img style="width:28px;height42px"  src="{!$Resource.FTIcon}"/> 
        </div>
         <div class="title-support">
            <span class="support-text">Fingertip Support</span>
        </div>
         <div class="link-support">
             <span class="support-text"><a class="support-link" target="_blank" href="http://support.fingertip.fi/"> <img style="width:18px;height:12px" src="{!$Resource.SupportUIcon}"/>Go to Support Center</a></span>
        </div>
     </div>
     <!-- Sub head --->
     <div class="feedback-subhead">
     <span class='subhead-text'>Email Support</span>
     <span class='subhead-line'><hr></hr></span>

     </div>
     <!-- Subject field comes here.  -->
     <div class="field-wrap">
         <div class="field-label">
              Subject:
         </div>
         <div class="field">
              
              <apex:inputText id="input-subject"  maxlength="255" onkeyup="validateSubject()"  onchange="validateSubject()" value="{!subject}" styleClass="input-subject inputborder text"/>
              <span id="errorpanel"> <b>Subject cannot be more than 255 characters</b></span>
              <span id="errorpanelemptysubj"> <b>Subject cannot be empty</b></span>
         </div>
     </div>
     <!-- Request type field and label comes here -->
     <div class="field-wrap">
         <div class="field-label">
             Request Type:
         </div>
         <div class="field">
             <apex:selectList value="{!requestType}" size="1" multiselect="false" styleClass="input-subject inputborder select">
                <apex:selectOption itemLabel="Ask a Question" itemValue="Ask a Question"></apex:selectOption>
                <apex:selectOption itemLabel="Report a Problem" itemValue="Report a Problem"></apex:selectOption>
                <apex:selectOption itemLabel="Propose an Idea" itemValue="Propose an Idea"></apex:selectOption>
                <apex:selectOption itemLabel="Other" itemValue="Other"></apex:selectOption>
             </apex:selectList>
         </div>
     </div>
     <!-- Priority field comes here -->
     <div class="field-wrap">
         <div class="field-label">
             Priority:
         </div>
         <div class="field">
              <apex:selectList value="{!priority}"  size="1" multiselect="false" styleClass="input-subject inputborder select">
                <apex:selectOption itemLabel="High" itemValue="High"></apex:selectOption>
                <apex:selectOption itemLabel="Normal" itemValue="Normal"></apex:selectOption>
                <apex:selectOption itemLabel="Low" itemValue="Low"></apex:selectOption>
             </apex:selectList>
         </div>
     </div>
     <!-- Message comes here -->
     <div class="field-wrap" style="height:100px">
         <div class="field-label">
             Message:
         </div>
         <div class="field">
              <apex:inputTextarea rows="5"  id="input-message" onkeyup="validateMessage()" value="{!message}" styleClass="input-subject inputborder textarea"/><br/>
              <span id="errorpanelmsg"> <b>Message cannot be empty</b></span>
         </div>
     </div> 
     <!-- File attachement here -->
     <div class="field-wrap">
         <div class="field-label">
            File Attachment:
         </div>
         <div class="inputborder fileborder">
             <div class="field attachment">
                  <apex:inputFile id="inputfile"   styleclass="attachment" fileName="{!attachmentName}" value="{!attachment}" styleClass="input-subject"/>
                 <span id="errorpanelfile"> <b>File cannot be empty</b></span>
             </div>
         </div>
     </div> 
     <!--- Send Button--->
      <div class="field-wrap">
         <div class="center pointer">
           <apex:image onclick=" if (! validateFields() ){   return false; } sendEmail() " styleClass="sendbutton" value="{!URLFOR($Resource.Images, 'feedback/image-sendButton-94x34.png')}">
           </apex:image>
            <apex:actionFunction name="sendEmail"   action="{!sendEmail}"/>
         </div>
     </div> 
     <apex:outputPanel id="reRender"></apex:outputPanel>
     <apex:inputHidden id="userContext" value="{!userContext}"/>
     <apex:inputHidden id="domain" value="{!domain}"/>
     
     <script type="text/javascript">
     //Get context information like domain on page language etc..
     $(document).ready(function(){
           var url = (window.location != window.parent.location) ? document.referrer: document.location;
           var urlSplits= url.split("/");
           var userContext = 'Domain: '+urlSplits[2]+ '\nOn Page: '+url +'\nBrowser: '+BrowserDetect.browser+' '+ BrowserDetect.version +'\nOS: '+BrowserDetect.OS+ '\nViewport: '+ screen.width+'x'+screen.height +'\nLanguage: '+( navigator.language || navigator.userLanguage )
           $('input[id$="userContext"]').val(userContext);
           $('input[id$="domain"]').val(urlSplits[2]);
           
     });
      //Validate on key press of message email if message empty
      function validateMessage()
      {
      
       if( this.value != undefined || this.value != '' ) 
       {
         document.getElementById("errorpanelmsg").style.display = 'none'; 
       }
       else
       {
         document.getElementById("errorpanelmsg").style.display = 'block'; 
       }
       
      }
      //Validate on subject keypress if subject empty or length >=255
      function validateSubject()
      {  
         if( document.getElementById("j_id0:email-feedback-form:input-subject").value.length >= 255 )
         {  
            document.getElementById("errorpanel").style.display = 'block';
            
         }
         else
         {
            document.getElementById("errorpanel").style.display = 'none';
            
         }
        if( document.getElementById("j_id0:email-feedback-form:input-subject").value == undefined || document.getElementById("j_id0:email-feedback-form:input-subject").value == '' )
        {  
             document.getElementById("errorpanelemptysubj").style.display = 'block'; 
        }
        else
        {
                   document.getElementById("errorpanelemptysubj").style.display = 'none'; 

          }
         
           
      }
      //Validate all fields when sending email
      function validateFields()
      {  
          
          
          
          var  subject = false;
           var  message = false;
           if( document.getElementById("j_id0:email-feedback-form:input-subject").value == undefined || document.getElementById("j_id0:email-feedback-form:input-subject").value == '' )
           {  
             document.getElementById("errorpanelemptysubj").style.display = 'block'; 
             subject  = true;
           }
         
         
         
           if( document.getElementById("j_id0:email-feedback-form:input-message").value == undefined || document.getElementById("j_id0:email-feedback-form:input-message").value == '' )
           {
               document.getElementById("errorpanelmsg").style.display = 'block'; 
               message = true;
           }
           if( subject ||  message    )
           {
            return false
           }
           else
           {
            return true;
           }
          
      }
    
      
      //Not used currently
      function operatingSystem()
      {
        var OSName="unknown OS";
        if (navigator.appVersion.indexOf("Win")!=-1) OSName="Windows";
        if (navigator.appVersion.indexOf("Mac")!=-1) OSName="MacOS";
        if (navigator.appVersion.indexOf("X11")!=-1) OSName="UNIX";
        if (navigator.appVersion.indexOf("Linux")!=-1) OSName="Linux";
        return OSName;
      }
      
  //Not used as IE8 wont support
  function getLocation()
  {
    if (navigator.geolocation)
    {
      return navigator.geolocation.getCurrentPosition(showPosition);
    }
    else
    { 
      return 'Location Not Supported';
    }
  }
  //Not used as IE8 wont support
function showPosition(position)
  {
    position.coords.latitude + 
    position.coords.longitude; 
    return   position.coords.latitude + ' '+    position.coords.longitude;
  }
    
    
    
    //BrowserDetect  detect to identify OS Browser name and Version
    var BrowserDetect = {
    init: function () {
        this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
        this.version = this.searchVersion(navigator.userAgent)
            || this.searchVersion(navigator.appVersion)
            || "an unknown version";
        this.OS = this.searchString(this.dataOS) || "an unknown OS";
    },
    searchString: function (data) {
        for (var i=0;i<data.length;i++) {
            var dataString = data[i].string;
            var dataProp = data[i].prop;
            this.versionSearchString = data[i].versionSearch || data[i].identity;
            if (dataString) {
                if (dataString.indexOf(data[i].subString) != -1)
                    return data[i].identity;
            }
            else if (dataProp)
                return data[i].identity;
        }
    },
    searchVersion: function (dataString) {
        var index = dataString.indexOf(this.versionSearchString);
        if (index == -1) return;
        return parseFloat(dataString.substring(index+this.versionSearchString.length+1));
    },
    dataBrowser: [
        {
            string: navigator.userAgent,
            subString: "Chrome",
            identity: "Chrome"
        },
        {   string: navigator.userAgent,
            subString: "OmniWeb",
            versionSearch: "OmniWeb/",
            identity: "OmniWeb"
        },
        {
            string: navigator.vendor,
            subString: "Apple",
            identity: "Safari",
            versionSearch: "Version"
        },
        {
            prop: window.opera,
            identity: "Opera",
            versionSearch: "Version"
        },
        {
            string: navigator.vendor,
            subString: "iCab",
            identity: "iCab"
        },
        {
            string: navigator.vendor,
            subString: "KDE",
            identity: "Konqueror"
        },
        {
            string: navigator.userAgent,
            subString: "Firefox",
            identity: "Firefox"
        },
        {
            string: navigator.vendor,
            subString: "Camino",
            identity: "Camino"
        },
        {       // for newer Netscapes (6+)
            string: navigator.userAgent,
            subString: "Netscape",
            identity: "Netscape"
        },
        {
            string: navigator.userAgent,
            subString: "MSIE",
            identity: "Explorer",
            versionSearch: "MSIE"
        },
        {
            string: navigator.userAgent,
            subString: "Gecko",
            identity: "Mozilla",
            versionSearch: "rv"
        },
        {       // for older Netscapes (4-)
            string: navigator.userAgent,
            subString: "Mozilla",
            identity: "Netscape",
            versionSearch: "Mozilla"
        }
    ],
    dataOS : [
        {
            string: navigator.platform,
            subString: "Win",
            identity: "Windows"
        },
        {
            string: navigator.platform,
            subString: "Mac",
            identity: "Mac"
        },
        {
               string: navigator.userAgent,
               subString: "iPhone",
               identity: "iPhone/iPod"
        },
        {
            string: navigator.platform,
            subString: "Linux",
            identity: "Linux"
        }
    ]

};
BrowserDetect.init();
    
     </script>  
 </div>
 </apex:form> 
</apex:page>