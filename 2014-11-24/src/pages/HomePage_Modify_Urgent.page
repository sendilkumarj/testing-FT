<apex:page standardStylesheets="false"  controller="HomePage" showChat="true" tabStyle="Fingertip__tab">
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>   
    <!-- Kendo Library -->
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/examples-offline.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.common.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.metro.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.dataviz.metro.min.css')}"/><!--  
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo-theme.css')}"/> -->
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.default.min.css')}"/>
    
    <apex:stylesheet value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.css')}"/><!--
    <apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/decision-jquery-ui.css')}"/>
    
    --><apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-1.9.1.js')}"/>   
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-ui-1.10.3.js')}"/>  
    <apex:includeScript value="{!URLFOR($Resource.KendoMetroNewLibrary, '/kendoMetroNewLibrary/kendo.all.min.js')}"/> 
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/console.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.js')}"/>
    
    <!--------- FT Stylesheets ----------->
             
    <apex:stylesheet value="{!$Page.CommonStyles}" /> 
    <apex:stylesheet value="{!$Page.HomeStyles}" />
    <apex:stylesheet value="{!$Page.OverrideStyles}" />   
     <apex:stylesheet value="{!$Page.cardStyles}" />
    
    <apex:includeScript value="{!$Page.CommonScripts}" /> 
   <apex:includeScript value="{!$Page.HomePageScripts}" />   
    
    
    <script>
    $(function() {
        $( "#tabs" ).tabs();  
        $( "#tabs" ).css('display','block');
        dragModalApprove();
        document.getElementById('searchUrgentTable').placeholder = 'Search Urgent...';
        dragModaldecisionVetoRejectWarningonHome();
        changeFooterText();
        
        
    });
    
    // ========= Below code used for custom scroll in important section columns =======//
    $(document).ready(function() {
        $(function enableCustomScroll()
        {
        
            $('.thumb').hide();
        });
    });
    // ========= Ends code used for custom scroll in important section columns =======//
        
       var id;
        var status;
        var dropdownlist;
        var priorities;
          

           function onChange(e) {   
                 status=this.text();
                 //alert('iddd::'+id+':::eeeee:::'+this.text())           
            }
            
           function onChangeCall(recId,e) {
                id=recId;
             //   alert('iddd::'+id+':::changecalleeeee:::'+e)
                calRemote();
            }
                        
            function calRemote(){
            //alert('iddd::'+id+':::anoootheeeeeeee:::'+status);
            HomePage.getTaskById( id,status,function(result, event){          
                       if (event.status && event.result) {  
                             rederOncomplete();
                             changeTiming();
                             
                       } else {
                          //alert(event.message);  
                     }
                 }, {escape:true}); 
                 
            }
            
             function forIndexing(index,count,status){
                //alert(count);
                // alert('in fun'+index); text : status, value:status,autoBind :false,
                $("#statusDropDownId"+count).kendoDropDownList({
                    dataTextField: "StatusName",
                    dataSource: StatusData,
                    change: onChange
                    
        
                });  
                var dropdownlist = $("#statusDropDownId"+count).data("kendoDropDownList");
                dropdownlist.select(index);
        }
          
    </script>
    <c:WalkMeAndSupportButton />
        <!-- Begin code for urgent section  -->
        <div class = "preloader"></div>     
        <div class = "bg-fade"></div>
        <div class = "tabs-block border-blue-light" id="urgent_section" style="display:block">
            <div class = "tabs-block-head">
                <div class = "tabs-block-left">
                <div id="dropBtnDecision" class="dropBtnImportantSection floatLeft"  onclick="showhideImportant()"></div>                
                   <h3 class = "ft-left" title = "This section displays all the items that require your immediate attention.">Important</h3>
                </div>
                <div class = "urgent-right ft-right">                    
                    <div class = "urgent-sel ft-left">
                        <span  class="home-font">Due Date within</span> &nbsp;
                        <select id="chooseTime"  class="home-font" onchange="changeTiming()">
                               <option value="24hours">24 Hours</option>
                               <option value="48hours">48 Hours</option>
                               <option value="7days" selected = "selected">7 Days</option>
                               <option value="1month">1 Month</option>
                               <option value="All">All</option>
                        </select>
                    </div>
                    <div class = "urgent-search">
                        <input   id="searchUrgentTable" type = "text" class = "search-input ft-left"/>  &nbsp;
                        <script>
                            $('#searchUrgentTable').keypress(function(e){ 
                                if (e.keyCode == '13'){
                                  changeText();
                                  return false;
                                }
                            });
                        </script>
                        <a href="javascript:void(0);" onclick="changeText();" class="search-urgent ft-left" ></a>
                        <div class="floatLeft"> 
                             <div class="urgentListIcon" title="Table view" id="importantListIconUrgent"  ></div>
                             <div class="urgentGridIcon cursor-default" title="Timeline Card view"  id="importantGridIconUrgent" onclick="switchview()"></div>
                        </div>
                    </div>
                </div>   
                <div class="toClear"></div> 
            </div>
            <div id="tabsimortant" class="toClear">
            <div id="tabs">              
              <ul>
              <li><a href="#tabs-1" onclick="$('#importantsection .k-grid-content').css('height','156px');">TO DO<span id="importantsection"></span></a></li>
                <li><a href="#tabs-2" onclick="$('#kendoUrgentTasks .k-grid-content').css('height','156px');">Tasks<span id="urgentTaskNo"></span></a></li>
                <li><a href="#tabs-3" onclick="$('#kendoUrgentDecisions .k-grid-content').css('height','188px');" >Decisions<span id="urgentDecisionNo"></span></a></li>
                <li><a href="#tabs-4" onclick="$('#kendoUrgentApprovals .k-grid-content').css('height','188px');" >Approvals<span id="urgentApprovalsNo"></span></a></li>
                <li><a href="#tabs-5" onclick="$('#myCollegueTasks .k-grid-content').css('height','188px');">Assigned &amp; Delayed<span id="urgentAssignedNo"></span></a></li>
                <li><a href="#tabs-6" onclick="$('#kendoUrgentIssues .k-grid-content').css('height','188px');">Issues<span id="urgentIssues"></span></a></li>
                <li><a href="#tabs-7" onclick="$('#pendingApprovals .k-grid-content').css('height','188px');">Pending Approvers<span id="pendingApprovalsNo"></span></a></li>
              
              </ul>
             
               <div id="tabs-1">                  
                <div id="importantsection" class="important_container">
                    <style>
             /*================ overriding the style to avoid scroll bar in task care kendo drop down ====================*/
                     .k-list{
                        overflow: hidden !important;
                        height: 100%;
                     }
             
             /* ====================== overriding ends here ================ */                
                  .dropBtn{
                   position:static !important
                  }
                   .cardTop{
                   position:static !important
                  }
                  .viewCardTop
                  {
                   position:static !important
                  }
                  .viewDropBtn
                  {
                  // position:static !important
                  }
                  .important_container
                  { 
                    width:1270px;
                    height:620px;
                    
                  }
                  .important_column
                  {
                    min-width:222px;
                    height:100%;
                    //border:solid 1px red; 
                    float:left;
                    margin-right:12px;
                    
                  }
                  #tabs-done{
                    height:500px;
                    border-top: solid 1px #d4d4d4 !important;
                  }
                  .important_head
                  { 
                   width: 100%;
                   height: 39px;
                   margin-bottom: 8px;
                   -webkit-border-radius: 6px;
                   -moz-border-radius: 6px;
                   border-radius: 6px;
                  }
                  .important_column_body
                  {
                    width: 210px;
                    height:466px;
                    border:solid 1px #ccc;
                    -webkit-border-radius: 2px;
                    -moz-border-radius: 2px;
                    border-radius: 2px;
                    //overflow-y:hidden; 
                    padding-right: 6px !important;
                    padding-bottom: 0px !important; 
                    
                  }
                 .head_left
                  {
                    float:left;
                    width: 8px;
                    height: 37px;
                    background-color: green;
                    border-top-left-radius: 6px;
                    border-bottom-left-radius: 6px;
                  }
                  .head_center
                  {
                      width: 210px;
                      height: 37px;
                      background-color: #373737;
                      text-align: center;
                      color: #FFF;
                      line-height: 37px;
                      border-bottom-right-radius: 6px;
                      border-top-right-radius: 6px;
                      float:left;
                      font-size: 13px;
                  }
                  .head_right
                  {
                    width:10%;
                    height:100%;
                    float:left;
                    background-color: green;
                    
                    
                  }
                  
                 #tskplanTab  .ui-state-active a  
                 {
                    border-color: #cccccc !important;
                    background: #fff !important;
                    color: #727272 !important;
                    border-bottom: none !important;
                 }
                 
                 #tskplanTab     .ui-state-hover a 
                 {
                    border-color: #cccccc !important;
                    background: #ccc !important;
                    border-bottom: none !important;
                 } 
                 .checkboxHeight{
                    height: 32px;
                 }
                 #tskplanTab 
                 {
                    border-bottom: none !important;
                 }
                 #tabsimortant
                 {
                    background: #F8F8F8;
                 }
                </style>
                <apex:stylesheet value="{!$Page.CommonStyles}" /> 
                    <apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/plan-jquery-ui.css')}"/>
                    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>   
                    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jqueryui-1.9.1.js')}"/>
                    
                    <apex:stylesheet value="{!$Page.CommonStyles}" />  
                    <apex:stylesheet value="{!$Page.PlanStyles}" />
                    <apex:stylesheet value="{!$Page.OverrideStyles}" />
                    <apex:stylesheet value="{!$Page.WorkbenchStyles}" /> 
                       <div> 
                                
                                <!--<div class="floatLeft fontStyle fontWeightBold improtantSectionTitle">Important</div> -->
                                                           
                              </div> 
                                      
                                         <!--   <ul class = "ui-tabs toClear" id = "tskplanTab" style="float:left">
                                                <li><a href="#tabs-done">To Do</a></li>
                                                
                                            </ul>-->
                                            <div class="floatRight checkboxHeight">
                                               <div  class="important-options fontStyle fontWeightBold floatLeft" >
                                               <apex:form >
                                                <apex:actionFunction name="rederOncomplete" action="{!viewImportantCards}" oncomplete="hideLoader();  $('.bg-fade').fadeOut('slow');"   rerender="todopanel"/>
                                                    <div class="important-item">
                                                        <apex:inputCheckbox onclick="showLoader()"  value="{!planCheckboxSelected}">
                                                            <apex:actionSupport action="{!viewImportantCards}" oncomplete="hideLoader();  $('.bg-fade').fadeOut('slow'); $('.bg-fade').fadeOut('slow'); " event="onchange"  rerender="todopanel"/>
                                                        </apex:inputCheckbox> 
                                                         Plans
                                                    <!--  <input type="checkbox"/> <span class="important-options-text">Plans</span> --->
                                                     </div> 
                                                     <div class="important-item">
                                                        <apex:inputCheckbox onclick="showLoader()"  value="{!decisionCheckboxSelected}">
                                                           <apex:actionSupport action="{!viewImportantCards}" oncomplete="hideLoader();  $('.bg-fade').fadeOut('slow');$('.bg-fade').fadeOut('slow'); "  event="onchange" rerender="todopanel" />
                                                        </apex:inputCheckbox>
                                                         Decisions
                                                     </div>
                                                        <div class="important-item">
                                                            <apex:inputCheckbox onclick="showLoader()"  value="{!taskCheckboxSelected}">
                                                               <apex:actionSupport action="{!viewImportantCards}" oncomplete="hideLoader();  $('.bg-fade').fadeOut('slow');$('.bg-fade').fadeOut('slow'); "  event="onchange" rerender="todopanel"/>
                                                            </apex:inputCheckbox>
                                                             Tasks
                                                     </div>                                     
                                                    <div class="important-item">
                                                        <apex:inputCheckbox onclick="showLoader()"  value="{!approvalCheckboxSelected}">
                                                           <apex:actionSupport action="{!viewImportantCards}" oncomplete="hideLoader();  $('.bg-fade').fadeOut('slow'); "   event="onchange" rerender="todopanel"/>
                                                        </apex:inputCheckbox>
                                                         Approvals
                                                </div> 
                                               <apex:actionFunction name="updateImportant" action="{!viewImportantCards}"  oncomplete="hideLoader();  $('.bg-fade').fadeOut('slow'); "    rerender="todopanel"/>
                                                
                                             </apex:form>
                                             
                                            </div>
                                             
                                            
                                            <div class="floatLeft ">
                                                <div class="importantListIcon  cursor-default" title="Table view" id="importantListIconImportant"  onclick="switchview()"></div>
                                                <div class="importantGridIcon" title="Timeline Card view" id="importantGridIconUrgentImportant" ></div>
                                            </div>
                                         
                                        </div>                                        
                                            <div id="tabs-done" class="toClear"> 
                                                <apex:outputpanel id="todopanel"> 
                                                 <!-- repeated this styles to rerender when the user checks and unchecks the plan,decision and other filters -->
                                                <style>
                                                        .important_container
                                                      { 
                                                        width:1270px;
                                                        height:620px;
                                                        
                                                      }
                                                      .important_column
                                                      {
                                                        min-width:222px;
                                                        height:100%;
                                                        //border:solid 1px red; 
                                                        float:left;
                                                        margin-right:12px;
                                                        
                                                      }
                                                       .important_column_body
                                                      {
                                                        width: 210px;
                                                        height:466px;
                                                        border:solid 1px #ccc;
                                                        -webkit-border-radius: 2px;
                                                        -moz-border-radius: 2px;
                                                        border-radius: 2px;
                                                        //overflow-y:hidden; 
                                                        padding-right: 6px !important;
                                                        padding-bottom: 0px !important; 
                                                        
                                                      }
                                                </style>
                                                 <!-- ENDS --- repeated this styles to rerender when the user checks and unchecks the plan,decision and other filters -->
                                                <apex:variable value="{!0}" var="count"/> 
                                            
                                                 <apex:repeat value="{!importantListHeaders}" var="importantKey">
                                                     <div class="important_column">
                                                        <div class="important_head">
                                                    
                                                           <div class="head_left"  style="height: 37px; background-color:{! if ( importantKey == 'Today','#216baa',  if (importantKey == 'Overdue','#c60000','#16a43e') )   }">&nbsp;</div>
                                                          <!-- <div class="head_right" >&nbsp;</div> -->
                                                             <div class="head_center">  {!importantKey } ({! importantWrapperMapCount[importantKey]})</div>
                                                        </div>
                                                        <div class="important_column_body " onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                                                        
                                                        <script>
                                                         </script>
                                                             <!-- card starts here -->
                                                             
                                                                <apex:repeat value="{!importantWrapperMap[importantKey]}" var="listVal">   
                                                                    <apex:variable var="count" value="{!count+ 1}"/>
                                                                    <apex:outputPanel rendered="{!IF(listVal.cardType == 'Decision', TRUE, FALSE)}" > 
                                                                        <div class="viewCardContainer"> <!-- Card main Container -->
                                                                            <div class="viewCardTop"> </div> <!-- blue top border-->
                                                                            <div class="viewCardIcon">&nbsp;</div>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'High',true,false)}">
                                                                                <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button --> 
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                                                                <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'Low',true,false)}">
                                                                                <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button --> 
                                                                            </apex:outputPanel>
                                                                            <div id="dropBtnDecision{!count}" class="viewDropBtn" onclick="showBottonDecision('{!count}')"></div>
                                                                            <div class="viewCardText fontWeightBold"><a href="/{!listVal.decisionId}">{!listVal.decisionName}</a></div>
                                                                            <div class="vewDateBtns viewTopborder">
                                                                                <div class="dueDateDiv">
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Due Date</div> 
                                                                                    <div class="fontCardContentText fontWeightBold secondLineTextPadding" style="{!if(listVal.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}" >{!listVal.deadlineNum}</div> 
                                                                                </div>
                                                                                <div class="viewStatusDiv"> 
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Status</div> 
                                                                                    <div class="fontCardContentText  secondLineTextPadding fontWeightBold">{!listVal.status}</div>
                                                                                </div>
                                                                                <div class="statusColorDiv" style="background-color:#{!listVal.statusColor}"></div> 
                                                                            </div>
                                                                            <div class="viewCardBottom viewTopborder" id="cardBottomDecision{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                                                                <div>
                                                                                    <div class="phaseDiv ">
                                                                                        <div class="cardTitleText fontWeightBold commonCardPadding">Phase</div> 
                                                                                        <div class="fontCardContentText secondLineTextPadding fontWeightBold" >{!listVal.phases}</div> 
                                                                                    </div>
                                                                                    <div class="mystanceDiv">
                                                                                        <div class="cardTitleText fontWeightBold commonCardPadding commonCardPadding">My Stance</div>
                                                                                        <div class="fontCardContentText commonCardPadding secondLineTextPadding fontWeightBold">{!listVal.stanceApprovalStatus}</div>
                                                                                    </div>
                                                                                    <div class="mystanceColorDiv" style="background-color:#{!listVal.stanceApprovalStatusColor}"></div> 
                                                                                </div>
                                                                                <div id="" class="cardMyRole cardCellTopLine toClear bottomMargin">
                                                                                    <div class="cardTitleText fontWeightBold myRoleTitle commonCardPadding" id="">My Role</div>
                                                                                    <div id="" class="rolesIconGroup actionsDirect commonCardPadding">
                                                                                        <div class = "raci-block floatLeft" id = "a-block" style="{!IF(listVal.Accountable,'background-color:#474747','background-color:#d9d9d9')}" >A</div>
                                                                                        <div class = "raci-block floatLeft" id = "r-block" style="{!IF(listVal.Responsible,'background-color:#474747','background-color:#d9d9d9')}">R</div>
                                                                                        <div class = "raci-block floatLeft" id = "c-block" style="{!IF(listVal.Consulted,'background-color:#474747','background-color:#d9d9d9')}">C</div>
                                                                                        <div class = "raci-block floatLeft" id = "i-block" style="{!IF(listVal.Informed,'background-color:#474747','background-color:#d9d9d9')}">I</div>
                                                                                        <div class="floatLeft splitLine" id="">&nbsp;</div>
                                                                                        <div class = "raci-block floatLeft" id = "b-block" style="{!IF(listVal.Backup,'background-color:#474747','background-color:#d9d9d9')}">B</div>
                                                                                        <div class = "raci-block floatLeft" id = "v-block" style="{!IF(listVal.Veto,'background-color:#474747','background-color:#d9d9d9')}">V</div>
                                                                                    </div>
                                                                                </div>
                                                                                <div id="" class="decisionByDiv cardCellTopLine commonCardPadding">
                                                                                    <div class="cardTitleText fontWeightBold ">Decision By</div>
                                                                                    <div class="toClear">
                                                                                        <div id="" class="decisionCardProfilePic viewCardTopBottomMargin toClear floatLeft"><img src="{!listVal.ownerPhoto}" title="{!listVal.OwnerName}"  style="width:36px;height:36px;"/></div>
                                                                                        <div class="floatLeft viewCardProfileNameWidth">
                                                                                            <div class="fontCardContentText fontWeightBold viewCardTopBottomMargin viewCardLeftMargin">{!HTMLENCODE(listVal.ownerName)}</div>
                                                                                            <div class="fontCardContentText fontWeightBold viewCardTopBottomMargin viewCardLeftMargin">{!HTMLENCODE(listVal.ownerDept)}</div>
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="toClear"></div>
                                                                                </div>
                                                                                <div id="" class="qualityDiv cardCellTopLine toClear commonCardPadding">
                                                                                    <div class="cardTitleText fontWeightBold ">Tasks</div> 
                                                                                    <div class="fontCardContentText viewCardTopBottomMargin fontWeightBold" >
                                                                                        <apex:outputPanel rendered="{!IF(listVal.pendingTaskCount > 0, TRUE, FALSE)}" >
                                                                                            <div style="color:red;font-weight:bold;font-size:10px;"><apex:outputText value="{!listVal.pendingTaskCount}" /> Task Late </div>
                                                                                        </apex:outputPanel>
                                                                                        <!--<apex:outputPanel rendered="{!IF(listVal.pendingIssueCounts > 0, TRUE, FALSE)}" >
                                                                                            <div style="color:red;font-weight:bold;font-size:10px;"><apex:outputText value="{!listVal.pendingIssueCounts}" /> unresolved Issue</div> 
                                                                                        </apex:outputPanel>-->
                                                                                    </div> 
                                                                                </div>
                                                                                <div id="" class="averageDiv cardCellTopLine commonCardPadding bottomMargin">
                                                                                    <div class="cardTitleText fontWeightBold">Average Relevance</div>
                                                                                    <div class="floatLeft viewCardTopBottomMargin " id="yourAveStars"><div class="viewAvgstar" ><img src="/{!listVal.relevenceImage}" /></div></div>
                                                                                    <div class="floatLeft viewCardTopBottomMargin viewAveRat"><span class = "fontWeightBold"  style="color:#cf3f67">{!listVal.AverageRating}</span> </div>
                                                                                </div>
                                                                                <div class="viewSocialGroupDiv   toClear floatLeft cardCellTopLine">   
                                                                                    <div id="" class="floatLeft socialDiv ">
                                                                                        
                                                                                        <div class="floatLeft topMargin">
                                                                                            <div  id="likeSpan0" class="viewSocialLike floatLeft " ><img src="{!URLFOR($Resource.Images, 'newDecisionLifeCycle/icon_like_01-22x20.png')}"/></div>
                                                                                            <div class="fontCardContentText  floatLeft likeDislikeCounts">{!listVal.TotalLikes}</div>
                                                                                            <div  id="disLikeSpan0" class="viewSocialDislike floatLeft" ><img src="{!URLFOR($Resource.Images, 'newDecisionLifeCycle/icon_dislike_01-22x20.png')}"/></div>
                                                                                            <div class="fontCardContentText  floatLeft likeDislikeCounts ">{!listVal.TotalDislikes}</div>
                                                                                        </div>
                                                                                    </div>
                                                                        
                                                                                    <div id="" class="viewSocialMoodDiv floatLeft">
                                                                                        <div id="" class="viewSmiely floatLeft" style='background:url("/{!listVal.moodImage}") {!listVal.moodImagePosition} no-repeat' >&nbsp;</div>
                                                                                        <div class="fontCardContentText  viewSmielyRating fontWeightBold floatLeft" >{!listVal.moodStatus}({!listVal.moodNumber})</div> 
                                                                                    </div>
                                                                                </div>
                                                                                <div class="toClear"> </div>
                                                                            </div>
                                                                            <div class="toClear"> </div>
                                                                        </div>
                                                                    </apex:outputPanel> 
                                                                    
                                                                    <!-- Decision Card ends here -->
                                                                    
                                                                    <!-- Approval Card starts here -->
                                                                    <apex:outputPanel rendered="{!IF(listVal.cardType == 'Approval', TRUE, FALSE)}" > 
                                                                        <div class="viewCardContainer"> <!-- Card main Container -->
                                                                            <div class="approvalCardTop"> </div> <!-- blue top border-->
                                                                            <div class="approvalCardIcon">&nbsp;</div>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'High',true,false)}">
                                                                                <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button -->
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                                                                <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'Low',true,false)}">
                                                                                <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button --> 
                                                                            </apex:outputPanel>
                                                                            <div id="dropBtnDecision{!count}" class="viewDropBtn" onclick="showBottonDecision('{!count}')"></div>
                                                                            <div class="viewCardText fontWeightBold"><a href="/{!listVal.decisionId}" id="{!listVal.id}title"> {!listVal.title}</a></div>
                                                                            <div class="vewDateBtns viewTopborder">
                                                                                <div class="dueDateDiv">
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Due Date</div> 
                                                                                    <div class="fontCardContentText secondLineTextPadding fontWeightBold" style="{!if(listVal.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}" >{!listVal.duedate}</div> 
                                                                                </div>
                                                                                <div class="viewStatusDiv"> 
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Status</div> 
                                                                                    <div class="fontCardContentText  secondLineTextPadding fontWeightBold">{!listVal.approvalStatus}</div>
                                                                                </div>
                                                                                <div class="statusColorDiv" style="background-color:#{!listVal.statusColor}"></div> 
                                                                            </div>
                                                                            <div class="viewCardBottom cardCellTopLine" id="cardBottomDecision{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                                                                <div id="" class="cardMyRole  toClear bottomMargin">
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding" id="">My Role</div>
                                                                                    <div id="" class="rolesIconGroup actionsDirect commonCardPadding">
                                                                                        <div class = "raci-block floatLeft" id = "a-block" style="{!IF(listVal.Accountable,'background-color:#474747','background-color:#d9d9d9')}" >A</div>
                                                                                        <div class = "raci-block floatLeft" id = "r-block" style="{!IF(listVal.Responsible,'background-color:#474747','background-color:#d9d9d9')}">R</div>
                                                                                        <div class = "raci-block floatLeft" id = "c-block" style="{!IF(listVal.Consulted,'background-color:#474747','background-color:#d9d9d9')}">C</div>
                                                                                        <div class = "raci-block floatLeft" id = "i-block" style="{!IF(listVal.Informed,'background-color:#474747','background-color:#d9d9d9')}">I</div>
                                                                                        <div class="floatLeft splitLine" id="">&nbsp;</div>
                                                                                        <div class = "raci-block floatLeft" id = "b-block" style="{!IF(listVal.Backup,'background-color:#474747','background-color:#d9d9d9')}">B</div>
                                                                                        <div class = "raci-block floatLeft" id = "v-block" style="{!IF(listVal.Veto,'background-color:#474747','background-color:#d9d9d9')}">V</div>
                                                                                    </div>
                                                                                </div>
                                                                                <div id="" class="decisionByDiv cardCellTopLine commonCardPadding">
                                                                                    <div class="cardTitleText fontWeightBold ">Requested By</div>
                                                                                    <div class="toClear">
                                                                                        <div id="" class="decisionCardProfilePic viewCardTopBottomMargin toClear floatLeft"><img src="{!listVal.requestedPhoto}" title="{!listVal.nameOfRequeste}"  style="width:36px;height:36px;"/></div>
                                                                                        <div class="floatLeft viewCardProfileNameWidth">
                                                                                            <div class="fontCardContentText fontWeightBold viewCardTopBottomMargin viewCardLeftMargin">{!HTMLENCODE(listVal.nameOfRequeste)}</div>
                                                                                            <div class="fontCardContentText fontWeightBold viewCardTopBottomMargin viewCardLeftMargin">{!HTMLENCODE(listVal.ownerDept)}</div>
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="toClear"></div>
                                                                                </div>
                                                                                <div id="" class="cardCellTopLine toClear toCenter">
                                                                                    <div class="switchDecisionIcons floatLeft" id="switchProblemStatement{!count}" onclick="switchProblemStatement('{!count}')"> </div>
                                                                                    <div class="switchProblemIcons floatLeft"  id="switchDecisionStatement{!count}" onclick="switchDecisionStatement('{!count}')"> </div>
                                                                                </div>
                                                                                
                                                                                 <div class="commentsTab cardCellTopLine toClear" id="problemstatement{!count}" > 
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Description</div>
                                                                                    <div class="viewCardText fontWeightBold"><div style="display:none" id="{!listVal.id}"><apex:outputText value="{!listVal.problemStatementFull}"   escape="false"/></div><div style="" id="{!listVal.id}"><apex:outputText value="{!listVal.problemStatement}"   escape="false"/></div></div>
                                                                                </div> 
                                                                                <div class="commentsTab cardCellTopLine toClear decisionHide" id="decisionstatement{!count}"> 
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Decision  Statement</div>
                                                                                    <div class="viewCardText fontWeightBold"><div style="display:none" id="{!listVal.id}append"><apex:outputText value="{!listVal.decisionNameFull}" escape="false"/></div><div style="" ><apex:outputText value="{!listVal.decisionName}" escape="false"/></div></div>
                                                                                </div> 
                                                                                <apex:outputPanel rendered="{!listVal.typeOfApproval ==  'Decision'}">
                                                                                  <div id="" class="cardCellTopLine toClear toCenter">
                                                                                    <div class="approveButton toCenter" onclick="showDecisionApprovalModal('{!listVal.typeOfApproval}','{!listVal.id}','{!listVal.decisionId}','important','{!listVal.role}','{!listVal.Veto}')">&nbsp;&nbsp;&nbsp;&nbsp; Approve/Reject</div>
                                                                                  </div>
                                                                               </apex:outputPanel>
                                                                               <apex:outputPanel rendered="{!listVal.typeOfApproval ==  'Stance'}">
                                                                                  <div id="" class="cardCellTopLine toClear toCenter">
                                                                                    <div class="supportButton toCenter" onclick="showDecisionApprovalModal('Stance Approval','{!listVal.id}','{!listVal.decisionId}','important','{!listVal.role}','{!listVal.Veto}')">&nbsp;&nbsp;&nbsp;&nbsp; Support/Oppose</div>
                                                                                  </div>
                                                                               </apex:outputPanel>
                                                                               <apex:outputPanel rendered="{!listVal.typeOfApproval ==  'Role'}">
                                                                                  <div id="" class="cardCellTopLine toClear toCenter">
                                                                                    <div class="acceptButton toCenter" onclick="showDecisionApprovalModal('Role Acceptance','{!listVal.id}','{!listVal.decisionId}','important','{!listVal.role}','{!listVal.Veto }')">&nbsp;&nbsp;&nbsp;&nbsp; Accept/Reject</div>
                                                                                  </div>
                                                                               </apex:outputPanel> 
                                                                                
                                                                                <div class="toClear"> </div>
                                                                            </div>
                                                                            <div class="toClear"> </div>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                    <!-- Approval Card ends here -->
                                                                    
                                                                    <!-- Plan Card start here -->
                                                                    <apex:outputPanel rendered="{!IF(listVal.cardType == 'Plan', TRUE, FALSE)}" > 
                                                                        <div class="viewCardContainer"> <!-- Card main Container -->
                                                                            <div class="planCardTop"> </div> <!-- blue top border-->
                                                                            <div class="planCardIcon">&nbsp;</div>  
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'High',true,false)}">
                                                                                <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button -->
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                                                                <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!if(listVal.priority == 'Low',true,false)}">
                                                                                <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button --> 
                                                                            </apex:outputPanel>
                                                                            <div id="dropBtnDecision{!count}" class="viewDropBtn" onclick="showBottonDecision('{!count}')"></div>
                                                                            <div class="viewCardText fontWeightBold"><a href="/{!listVal.cardId}"> {!listVal.cardTitle}</a></div>
                                                                            <div class="vewDateBtns viewTopborder">
                                                                                <div class="dueDateDiv">
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Start Date</div> 
                                                                                    <div class="fontCardContentText secondLineTextPadding fontWeightBold" style="{!if(listVal.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}">{!listVal.startdate}</div> 
                                                                                </div>
                                                                                <div class="viewStatusDiv">  
                                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">End Date</div> 
                                                                                    <div class="fontCardContentText secondLineTextPadding fontWeightBold" style="{!if(listVal.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}">{!listVal.enddate}</div>
                                                                                </div>
                                                                                
                                                                            </div>
                                                                            <div class="viewCardBottom viewTopborder" id="cardBottomDecision{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                                                                <div class="decisionByDiv">
                                                                                    <div class="phaseDiv " style="border:none">
                                                                                        <div class="cardTitleText fontWeightBold commonCardPadding">Modified Date</div> 
                                                                                        <div class="fontCardContentText secondLineTextPadding fontWeightBold" >{!listVal.modifieddate}</div> 
                                                                                    </div>
                                                                                    <div class="mystanceDiv planLocationDiv">
                                                                                        <div class="cardTitleText fontWeightBold commonCardPadding">Location</div>
                                                                                        <div class="fontCardContentText secondLineTextPadding fontWeightBold">{!listVal.location}</div>
                                                                                    </div>
                                                                                </div>
                                                                                <div class="cardCellTopLine toClear">
                                                                                    <div class="phaseDiv ">
                                                                                        <div class="cardTitleText fontWeightBold commonCardPadding">Items</div> 
                                                                                        <div class="fontCardContentText secondLineTextPadding fontWeightBold" >{!listVal.itemCount}</div> 
                                                                                    </div>
                                                                                    <div class="mystanceDiv ">
                                                                                        <div class="cardTitleText fontWeightBold commonCardPadding">Activities</div>
                                                                                        <div class="fontCardContentText secondLineTextPadding fontWeightBold">{!listVal.activityCount}<apex:panelGroup rendered="{!listVal.dueCount > 0}"><span style="color:red" >({!listVal.dueCount})</span></apex:panelGroup></div>
                                                                                    </div>
                                                                                </div>
                                                                                <div id="" class="decisionByDiv cardCellTopLine commonCardPadding toClear">
                                                                                    <div class="cardTitleText fontWeightBold">Description</div>
                                                                                    <div class="viewCardText fontWeightBold"><div style=""><apex:outputText value="{!listVal.description}" /></div></div>
                                                                                    <div class="toClear"></div>
                                                                                </div>
                                                                                 <div id="" class="decisionByDiv cardCellTopLine commonCardPadding">
                                                                                    <div class="cardTitleText fontWeightBold ">Accountable</div>
                                                                                    <div class="toClear">
                                                                                        <div id="" class="decisionCardProfilePic viewCardTopBottomMargin toClear floatLeft"><img src="{!listVal.accountableImage}" title="{!listVal.accountableImage}"  style="width:36px;height:36px;"/></div>
                                                                                        <div class="floatLeft viewCardProfileNameWidth">
                                                                                            <div class="fontCardContentText fontWeightBold viewCardTopBottomMargin viewCardLeftMargin">{!HTMLENCODE(listVal.accountableName)}</div>
                                                                                            <div class="fontCardContentText fontWeightBold viewCardTopBottomMargin viewCardLeftMargin">{!HTMLENCODE(listVal.accountableDept)}</div>
                                                                                        </div>
                                                                                    </div> 
                                                                                    <div class="toClear"></div>
                                                                                </div>
                                                                             
                                                                                <div class="toClear"> </div>  
                                                                            </div>
                                                                            <div class="toClear"> </div>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                       <!-- plan card ends here -->             
                                                                    
                                                      <!-- task card starts here -->              
                                                                    
                                                     <apex:outputPanel rendered="{!listVal.cardType == 'Task'}" >  
                                                    <apex:outputPanel id="closeRerender" >
                                                        <div class="{!if(listVal.recordAccess,'viewCardContainer','noDrop')}" id="{!listVal.Kanbantask.Id}"> <!-- Card main Container -->
                                                            <div class="taskCardTop"> </div> <!-- blue top border-->
                                                            <div class="taskCardIcon">&nbsp;</div>
                                                            <apex:outputPanel rendered="{!if(listVal.kanbanTask.Priority == 'High',true,false)}">
                                                               <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button -->
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!if(listVal.kanbanTask.priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                                                <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!if(listVal.kanbanTask.Priority == 'Low',true,false)}">
                                                                <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button -->
                                                            </apex:outputPanel>
                                                            <div class="accessLock" ><img src="/{!listVal.lockImg}" class="lock-icon"/></div>
                                                            <div id="dropBtnDecision{!count}" class="viewDropBtn" onclick="showBottonDecision('{!count}')"></div>
                                                            <div class="viewCardText fontWeightBold">
                                                                <a href="/{!listVal.kanbanTask.id}" onclick="getPopupDetailsWithLoader('{!listVal.kanbanTask.id}','{!listVal.recordAccess}')">{!listVal.kanbanTask.Subject}</a>  
                                                            </div>
                                                            <div class="dateBtns cardCellTopLine">
                                                                <div class="dueDate ">
                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Due Date</div> 
                                                                    <div class="fontCardContentText fontWeightBold secondLineTextPadding" style="{!if(listVal.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}"> <apex:outputText rendered="{!listVal.kanbanTask.ActivityDate == null }"  value="N/A" /> <apex:outputField value="{!listVal.kanbanTask.ActivityDate}" /></div>
                                                                </div>
                                                                <div class="deadLine">
                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Deadline</div> 
                                                                    <div class="fontCardContentText fontWeightBold secondLineTextPadding" style="{!if(listVal.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}">{!listVal.deadlineNum}&nbsp;<apex:outputText value="days" rendered="{!   if(listVal.deadlineNum != null,true,false) }" /></div> 
                                                                </div>
                                                            </div>
                                                                           
                                                            <div class="toClear"> 
                                                                <div class="cardBottomDecision cardCellTopLine" id="cardBottomDecision{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                                                    <div class="qualityDiv toClear">
                                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Status</div>
                                                                    <div class="secondLineTextPadding statusInput" >
                                                                     
                                                                    <input class="statusDropDown" id="statusDropDownId{!count}" value="{!listVal.kanbanTask.Priority}"  onChange="onChangeCall('{!listVal.kanbanTask.id}',event);"></input>
                                                                        <script>
     
                                                                                      // callForIndex('{!listVal.kanbanTask.Status}',{!count})
                                                                                   var StatusData = [{!taskStatusPicklist} ];
                                                                                        var count={!count}
                                                                                        var status = '{!listVal.kanbanTask.Status}';
                                                                                        var index ;
                                                                                      console.log('listVal.kanbanTask.Status---'+status);
                                                                                        if(status == 'Not Started'){
                                                                                            index = 0;
                                                                                            forIndexing(index,count,status)
                                                                                        }
                                                                                        else if (status == 'In Progress') {
                                                                                        //alert(count)
                                                                                            index = 1;
                                                                                            forIndexing(index,count,status)
                                                                                        }
                                                                                        else if (status == 'Waiting on someone else') {
                                                                                            index = 2;
                                                                                            
                                                                                            forIndexing(index,count,status)
                                                                                        }
                                                                                        else if (status == 'Deferred') {
                                                                                            index = 3;
                                                                                            forIndexing(index,count,status)
                                                                                        }
                                                                                        else if (status == 'Completed') {
                                                                                            index = 4;
                                                                                            forIndexing(index,count,status)
                                                                                        }
                                                                                        else if (status == 'Rejected') {
                                                                                            index = 5;
                                                                                            forIndexing(index,count,status)
                                                                                        }
                                                                                        else if (status == 'N/A') {
                                                                                            index = 6;
                                                                                            forIndexing(index,count,status)
                                                                                        }   
                                                                                                                                                  
                                                                             </script>
                                                                          </div>
                                                                        </div>
                                                                        <div class="cardCellTopLine">
                                                                    <div id="relationBtn{!count}" class="relationBtn" onclick="showContents('relationBtn{!count}','relationTab{!count}','commentBtn{!count}','assignBtn{!count}','commentsTab{!count}','assignTab{!count}')"><img src="{!URLFOR($Resource.Images, 'kanbanImages/share-36x36.png')}" class="imgSize" title="Related to"/></div>
                                                                    <div id="commentBtn{!count}" class="commentBtn" onclick="showContents('commentBtn{!count}','commentsTab{!count}','relationBtn{!count}','assignBtn{!count}','relationTab{!count}','assignTab{!count}')" ><img src="{!URLFOR($Resource.Images, 'kanbanImages/comment-36x36.png')}" class="imgSize" title="Comments"/> </div>
                                                                    <div id="assignBtn{!count}" class="assignBtn" onclick="showContents('assignBtn{!count}','assignTab{!count}','relationBtn{!count}','commentBtn{!count}','relationTab{!count}','commentsTab{!count}')"><img src="{!URLFOR($Resource.Images, 'kanbanImages/user-36x36.png')}" class="imgSize" title="Assigned"/>  </div>
                                                                    <div class="openState">
                                                                        <div class="relationTab" id="relationTab{!count}">  <!-- relational drop down to hide / unhide -->
                                                                            <div class="selectedContent">
                                                                                <div class="cardTitleText fontWeightBold commonCardPadding">Related to</div>
                                                                                <div class="cardTitleText fontWeightBold commonCardPadding" ><div style=""><a class="task-title" href="/{!listVal.relatedToId}" ><apex:outputText value="{!listVal.relatedTo}" /></a></div> </div>
                                                                            </div>
                                                                        </div> 
                                                                        <div class="commentsTab" id="commentsTab{!count}" style="display:none"> <!-- comments drop down to hide / unhide -->
                                                                            <div class="selectedContent">
                                                                                <div class="cardTitleText fontWeightBold commonCardPadding">Comments</div>
                                                                                <div class="viewCardText fontWeightBold"><div style=""><apex:outputText value="{!listVal.comments}" /></div></div>
                                                                            </div>    
                                                                        </div> 
                                                                        <div class="assignTab" id="assignTab{!count}" style="display:none"> <!-- assigned drop down to hide / unhide -->
                                                                            <div class="selectedContent">
                                                                                <div>
                                                                                    <div class="assignedby-task">
                                                                                        <div  class="cardTitleText fontWeightBold ">Assigned By</div>
                                                                                        <div class="assignedby-task-div">
                                                                                            <div class="floatLeft"><img src="{!listVal.userAssignedImgUrl}" class="assignedby-img" /></div>
                                                                                            <div style="width:70%" class="floatLeft commonCardPadding"> 
                                                                                                <div style="width:100%;padding-bottom:5px;" class="fontCardContentText fontWeightBold">{!listVal.userAssignedName}  </div>
                                                                                                <div class="fontCardContentText fontWeightBold">{!listVal.userAssignedDept}</div>
                                                                                            </div> 
                                                                                        </div> 
                                                                                    </div>
                                                                                    <div class="assignedto-task">
                                                                                        <div style="margin-bottom:5px;" class="cardTitleText fontWeightBold floatRight">Assigned To</div>
                                                                                        <div class="assignedto-task-div toClear">
                                                                                            <div class="floatRight"><img src="{!listVal.userAssignImgUrl}"  class="assignedto-img" /></div>
                                                                                            <div style="width:70%" class="floatLeft">
                                                                                                <div class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!listVal.userAssigneeName}</div>
                                                                                                <div style="padding-top:5px" class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!listVal.userAssigneeDept}</div>
                                                                                            </div>
                                                                                        </div> 
                                                                                    </div>
                                                                                </div>
                                                                                <div style="clear:both" ></div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                                <!-- -------- Task ends Here----------- -->
                                                
                                                
                                                                </apex:repeat> 
                                                             <!-- card ends here -->
                                                            
                                                        </div>
                                                           
                                                     </div>
                                                    
                                                 </apex:repeat>
                                                  
                                                 <script>
                                           
                        function showDecisionDetails(ele1,ele2,ele3){
                            $('#'+ele1).css('display','block');
                            $('#'+ele2).css('display','block');
                            $('#'+ele3).css('display','none');
                        }
                        function hideDecisionDetails(ele1,ele2,ele3){
                            $('#'+ele1).css('display','none');
                            $('#'+ele2).css('display','none');
                            $('#'+ele3).css('display','block');
                        }
                        
                        function showBottonDecision(count){
                        
                            if(document.getElementById("cardBottomDecision"+count).style.display=="none"){
                                    //$( containerBottom ).slideDown( "slow" );
                                    document.getElementById("cardBottomDecision"+count).style.display="block";
                                    document.getElementById("dropBtnDecision"+count).style.backgroundPosition="0px 0px";
                                    
                            }else{
                                document.getElementById("cardBottomDecision"+count).style.display="none";
                                document.getElementById("dropBtnDecision"+count).style.backgroundPosition="0px -8px"; 
                               
                            }
                           
                               $(".important_column_body").customScrollbar("resize", true);
    
                        }
                    </script>                   
                                                  <script>
                                                    $('.important_column_body').customScrollbar({
                                                        skin: "default-skin",
                                                        hScroll: false,
                                                        //vScroll: false,
                                                         
                                                    });
                                                    $('.thumb').hide();
                                                 </script>  
                                                 </apex:outputpanel>
                                            </div>
                                              
                                 </div>
                                 <script>
                        function disabledate(e){
                            if(!e.checked){
                                document.getElementById('workBenchHomePage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:setReminderDate').value = '';
                                $('input[id$="setReminderDate"]').attr('disabled','disabled');
                            }
                            else
                            {
                              $('input[id$="setReminderDate"]').removeAttr('disabled');
                            }
                        }
                        
                        function showContents(whiteBackground,contentShow,greyBackgroundA,greyBackgroundB,hideContent1,hideContent2){
                            document.getElementById(whiteBackground).style.backgroundColor="#fbfbfb";
                            document.getElementById(whiteBackground).style.borderBottom="1px solid #fbfbfb";
                            document.getElementById(contentShow).style.display="block";
                            document.getElementById(greyBackgroundA).style.backgroundColor="#f2f2f2";
                            document.getElementById(greyBackgroundB).style.backgroundColor="#f2f2f2";
                            document.getElementById(greyBackgroundA).style.borderBottom="1px solid #ccc";
                            document.getElementById(greyBackgroundB).style.borderBottom="1px solid #ccc";
                            document.getElementById(hideContent1).style.display="none";
                            document.getElementById(hideContent2).style.display="none"; 
                            $(".important_column_body").customScrollbar("resize", true);
                        }
                        
                       /* function expandAllCards(){
                            
                            if(document.getElementById('cardExpandChk').checked == true){
                                for(count=0;count<ListSize;count++){
                                    document.getElementById("cardBottom"+count).style.display="block";
                                    document.getElementById("dropBtn"+count).style.backgroundPosition="0px 0px";    
                                }
                            }else{
                                for(count=0;count<ListSize;count++){
                                    document.getElementById("cardBottom"+count).style.display="none";
                                    document.getElementById("dropBtn"+count).style.backgroundPosition="0px -8px";
                                }
                            }
                        }*/
                        
                                         $(function() {
                                              $( "#tabsimortant" ).tabs();
                                              $('#tabsimortant').css('display','block'); 
                                          });
                </script>
                
                
                </div>
             
              
              <div id="tabs-2">                  
                <div id="kendoUrgentTasks" ></div>
                <script>
                    $(document).ready(function () {
                        
                         kendoUrgentTasks ($.parseJSON('{!JSENCODE(urgentTaskJSON)}'));
                    });
                </script>
              </div>
              <div id="tabs-3">
                <div id="kendoUrgentDecisions" ></div>
                <script>
                    $(document).ready(function () {
                         kendoUrgentDecisions ($.parseJSON('{!JSENCODE(urgentDecisionJSON)}'));
                    });
                </script>
              </div>
              <div id="tabs-4">
                <div id="kendoUrgentApprovals" ></div>
                <script>
                    $(document).ready(function () {
                         kendoUrgentApprovals ($.parseJSON('{!JSENCODE(urgentApprovalJSON)}'));
                    });
                </script>
              </div>
              <div id="tabs-5">
                <div id="myCollegueTasks" ></div>
                <script>
                    $(document).ready(function () {
                         kendoMyCollegueList ($.parseJSON('{!JSENCODE(myCollegueTaskJSON)}'));
                    });
                </script>
              </div>
              <div id="tabs-6">
                <div id="kendoUrgentIssues" ></div>
                <script>
                    $(document).ready(function () {
                        kendoUrgentIssues ($.parseJSON('{!JSENCODE(myIssuesJson)}'));
                    });
                </script>
              </div>
              <div id="tabs-7">
                <div id="pendingApprovals" ></div>
                <script>
                    $(document).ready(function () {
                        kendoPendingApprovals ($.parseJSON('{!JSENCODE(pendingApprovalJSON)}'));
                    });
                </script>
              </div>
            </div>
          </div>
        </div>    
        <!----- important starts here  ----->
        <div  class = "tabs-block border-blue-light"  id="important_section" style="display:none">
                     
                      
             
 
        </div>
        <!----- important starts here  ----->

        <!-- End code for urgent section -->
        
        <!-- Begin code for My Decisions and Approval/Stance  -->
        <div class = "home-table-wrap"> 
            <table cellspacing = "0" cellpadding = "0" class = "home-tbl">
                <tr>
                    <td class = "home-cell-left">
                        <div class = "tabs-block border-blue-light">
                            <div class = "tabs-block-head">
                                <div class = "tabs-block-left">                
                                    <h3 class = "ft-left" title="This section displays all the decisions for the role selected except the decisions that are closed.">Recent Decisions</h3>
                                </div>
                                <div class = "tabs-block-right ft-right">        
                                  <span  class="home-font">My Role</span> &nbsp;
                                    <select id="chooseRole"  class="home-font" onchange="changeRole()">
                                           <option value="Accountable">Accountable</option>
                                           <option value="Responsible">Responsible</option> 
                                           <option value="Consulted">Consulted</option>
                                           <option value="Informed">Informed</option>
                                           <option value="Backup">Backup</option>
                                           <option value="Veto">Veto</option> 
                                           <option value="All" selected = "selected">All</option>  
                                    </select>
                                </div>
                            </div>
                            <div id="myDecisions"></div>
                            <script>
                                $(document).ready(function () {                                 
                                     kendoMyDecision ($.parseJSON('{!JSENCODE(myDecisionsJson)}'));
                                });
                            </script>
                        </div>     
                    </td>
                    <td class = "home-cell-right">
                        <div class = "tabs-block border-blue-light">
                            <div class = "tabs-block-head">
                                <div class = "tabs-block-left">                
                                    <h3 class = "ft-left" title="This section displays all your pending role, stance & approval requests.">Approval/Stance</h3>
                                </div>
                            </div>
                        
                            <div id="itemsToAprove"></div>
                            <script>
                                $(document).ready(function () {
                                     kendoApprovals ($.parseJSON('{!JSENCODE(approvalJSON)}'));
                                });
                            </script>
                        </div>    
                    </td>
                </tr>
            </table> 
        </div>       
        <!-- End code for My Decisions and Approval/Stance  -->
        
        
        <!-- Accordion menu for kendo  -->
        <div class = "home-table-wrap">
            <div class = "tabs-block border-blue-light">
                <div class = "tabs-block-head">
                    <div class = "tabs-block-left">                
                       <h3 class = "ft-left" >Decisions Overview</h3>
                    </div>
                </div>
                <div class="k-content">
                    <ul id="panelbar">
                        <li id="decisionHighlistList">
                            <span title="This section displays all the decisions you are a part of with additional social information except the decisions that are closed."><span style="font-weight: bold">Decision Highlights</span></span>
                            <div id="decisionHighlights" >Loading...</div>
                        </li>
                        <li id="dashboardList" >
                            <span style="font-weight: bold">Dashboards</span>
                            <div id="link2">
                                <table cellspacing = "0" cellpadding = "0" class = "home-tbl">
                                    <tr>
                                        <td class = "chart-cell"><a href="/{!linkDecisionCreated}" target="_parent"><div id="Decision"></div></a></td>
                                        <td class = "chart-cell"><a href="/{!linkDecisionProgress}" target="_parent"><div id="DecisionProgress"></div></a></td>
                                        <td class = "chart-cell"><a href="/{!linkDecisionCreatedByUser}" target="_parent"><div id="DecisionUserCreatedBy"></div></a></td>
                                    </tr>
                                </table>
                            </div>
                        </li>
                    </ul>
                </div>
                <script>
                    var firstLine,secondLine;
                    function onSelect(e) {
                        //alert("Select: " + $(e.item).find("> .k-link").text());
                    }
        
                    function onExpand(e) {
                        
                        //alert("Expand: " + $(e.item).find("> .k-link").text());
                        if($(e.item).find("> .k-link").text() == 'Decision Highlights'){
                            if(contentLoadChkForDecisionHighlights == 'stateless'){
                                
                                HomePage.DecisionHighlist( function(result, event)
                                {
                                    if (event.status)
                                    {  
                                        $('#decisionHighlights').html('');      
                                        var decisionHighlightsJson = removeQuotes(result);
                                        kendoDecisionHighlights (decisionHighlightsJson); 
                                        contentLoadChkForDecisionHighlights = 'statefull';                     
                                    }
                                }, {escape:true});
                            }
                        }else{
                            if(contentLoadChkForDashboards == 'stateless'){
                                
                                HomePage.DefineHomeCharts( function(result, event)
                                {
                                    if (event.status)
                                    {  
                                        decisionProgressVal = removeQuotes(result.decisionProgressStr);
                                        decisionUserCreatedBy = removeQuotes(result.decisionCreatedStr);
                                        lastWeekDecisionSize = result.lastWeekDecisionSizeStr;
                                        twoWeekAgoDecisionSize = result.twoWeekAgoDecisionSizeStr;
                                        threeWeekAgoDecisionSize = result.threeWeekAgoDecisionSizeStr;
                                        fourWeekAgoDecisionSize = result.fourWeekAgoDecisionSize;
                                        internetUsers = [ {
                                            
                                            "year": "Last Week",
                                            "value": lastWeekDecisionSize <!--XSS Fixed-->
                                            
                                        }, {
                                           
                                            "year": "2 Weeks Ago",
                                           "value": twoWeekAgoDecisionSize <!--XSS Fixed-->
                                           
                                        }, {
                                           
                                            "year": "3 Weeks Ago",
                                            "value":threeWeekAgoDecisionSize <!--XSS Fixed-->
                                            
                                        }, {
                                           
                                            "year": "4 Weeks Ago",
                                             "value": fourWeekAgoDecisionSize <!--XSS Fixed-->
                                          
                                        } ];
                                        setTimeout(function() {
                                                decisionProgress();
                                                decisionUser();
                                                createDecision();
                                                $("#example").bind("kendo:skinChange", function(e) {
                                                   
                                                   decisionProgress();
                                                   decisionUser();
                                                   createDecision();
                                                });
                                        }, 400); 
                                        
                                        contentLoadChkForDashboards = 'statefull';                     
                                    }
                                }, {escape:true});
                            }
                        }
                    }
        
                    function onCollapse(e) {
                        //alert("Collapse: " + $(e.item).find("> .k-link").text());
                        
                    }
        
                    function onActivate(e) {
                        //alert("Activate: " + $(e.item).find("> .k-link").text());
                        $('#decisionHighlights .k-grid-content').css('height','250px');
                        $('#decisionHighlights .k-grid-content').css('font-weight','normal');
                    }
        
                    function onContentLoad(e) {
                        //alert("Content loaded in <b>"+ $(e.item).find("> .k-link").text() +
                                         //"</b> and starts with <b>" + $(e.contentElement).text().substr(0, 20) + "...</b>");
                        
                        
                    }
                    var contentLoadChkForDecisionHighlights = 'stateless';
                    var contentLoadChkForDashboards = 'stateless';
                    $("#panelbar").kendoPanelBar({
                        
                        select: onSelect,
                        expand: onExpand,
                        collapse: onCollapse,
                        activate: onActivate,
                        contentLoad: onContentLoad
                    });//.css({ width: "250px" }).css({ margin: "20px auto" });
                    
                    
                    
                    function decisionProgress() {
                         $("#DecisionProgress").kendoChart({
                             theme: $(document).data("kendoSkin") || "blueOpal",
                             dataSource: {
                                 data: decisionProgressVal
                             },
                             title: {
                                 text: "Decision Progress",
                                 font: "14px Arial,Helvetica,sans-serif",
                                 align: "left",
                                 color: "black"
                             },
                             legend: {
                                 position: "bottom"
                             },
                             seriesDefaults: {
                                 type: "bar",
                                 labels: {
                                     visible: true,
                                     format: "{0}"
                                 }
                             },
                             series: [{
                                 field: "yAxis",
                                 name: "Total # of decisions at different stages"
                             }],
                             valueAxis: {
                                 labels: {
                                     format: "{0}"
                                 }
                             },
                             categoryAxis: {
                                 field: "xAxis"
                             }
                         });
                     }
                     
                     function SortByValue(x,y) {
                           return y.value -  x.value ; 
                    }
                   // decisionUserCreatedBy.sort(SortByValue);
                    function decisionUser() {
                         $("#DecisionUserCreatedBy").kendoChart({
                             theme: $(document).data("kendoSkin") || "blueOpal",
                             dataSource: {
                                 data: decisionUserCreatedBy
                             },
                             title: {
                                 text: "Decisions Created By Users",
                                 font: "14px Arial,Helvetica,sans-serif",
                                 align: "left",
                                 color: "black"
                             },
                             legend: {
                                 position: "bottom"
                             },
                             seriesDefaults: {
                                 type: "bar",
                                 labels: {
                                     visible: true,
                                     format: "{0}"
                                 }
                             },
                             series: [{
                                
                                  field: "yAxis",
                                 name: "Total # of decisions created by different users"
                             }],
                             valueAxis: {
                                 labels: {
                                     format:  "{0}"
                                 }
                             },
                             categoryAxis: {
                                 field: "xAxis"
                             }
                         });
                     }
                     
                     function createDecision() {
                        $("#Decision").kendoChart({
                             theme: $(document).data("kendoSkin") || "blueOpal",
                             dataSource: {
                                 data: internetUsers
                             },
                             title: {
                                 text: "Decisions Created",
                                 font: "14px Arial,Helvetica,sans-serif",
                                 align: "left",
                                 color: "black"                                                
                             },
                             legend: {
                                 position: "bottom"
                             },
                             seriesDefaults: {
                                 type: "bar",
                                 labels: {
                                     visible: true,
                                     format: "{0}"
                                 }
                             },
                             series: [{
                                 field: "value",
                                 name: "Total # of decisions created in the last month",
                                 align: "left"
                             }],
                             valueAxis: {
                                max: 100,
                                 labels: {
                                     format: "{0}"
                                 }
                             },
                             categoryAxis: {
                                 field: "year"
                             }
                         });
                     }
                </script>                
                
            </div>    
        </div>
        <!-- Begin code for Decision Highlights  -->
        <!-- <div class = "home-table-wrap">
            <div class = "tabs-block border-blue-light">
                <div class = "tabs-block-head">
                    <div class = "tabs-block-left">                
                       <h3 class = "ft-left" title="This section displays all the decisions you are a part of with additional social information except the decisions that are closed."> Decision Highlights</h3>
                    </div>
                </div>
                
                
            </div>    
        </div>  -->
        <!-- End code for Decision Highlights  -->
        
    <!--------- Decision Approval Popup ----------->
    <div class = "bg-fade fade-white"></div>
    <div class = "modal-window-approve" id = "modal-decision-approve">
        <div class = "modal-approval-head">
            <!--------- Popup Decision Approval Header -----------> 
            <div class = "modal-plan-header ft-left" id = "approve-header">
            </div>
            <!--------- End Popup Decision Approval Header ----------->             
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideDecisionApprovalModal()"></a>
        </div>
        <div class = "modal-approval-content">
            <!--------- Popup Decision Approval Content -----------> 
            <div class = "modal-plan-content" id = "note-body">
                <div id="processInstanceId" ></div>
                <div id="decisionId"></div>
                <div id="typeOfApproval"></div>
                <input id="vetoRightsId" type="hidden"></input>
                <table cellspacing = "0" cellpadding = "6" class = "modal-tbl">
                    <tr>
                        <td class = "cell-left popover-label">
                            Title 
                        </td>
                        <td class = "cell-right">
                            <div class="title-bold" id="decisionTitleInPopup"></div> 
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left popover-label">
                            Description
                        </td>
                        <td class = "cell-right">
                            <div id="prblmStmt"></div>                            
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left popover-label">
                            Decision
                        </td>
                        <td class = "cell-right">                           
                            <div id="decisionTaken"></div>
                        </td>
                    </tr>
                    <tr>
                        <td class = "cell-left popover-label">
                            Comments
                        </td>
                        <td class = "cell-right">
                            <textarea class = "modal-textarea" id="approvalComments"></textarea>
                        </td>
                    </tr>
                </table>
                
            </div> 
                <!--------- End Popup Decision Approval Content ----------->
           </div>
           <div class = "modal-approval-btm">
                    <!--------- Popup Decision Approval Footer ----------->  
                <div id = "decision-footer-approve">
                    <button type = "button" id="approveAccpetBtn" onclick="approveReject($('#decisionId').val(),$('#processInstanceId').val(),'Approve',$('#approvalComments').val(),$('#typeOfApproval').html());hideDecisionApprovalModal()" class="home-btn" >Approve</button>
                    <button type = "button" id="opposeRejectBtn" class="home-btn"  >Reject</button>
                    <button type = "button" class="home-btn" onclick = "hideDecisionApprovalModal()">Cancel</button>
                </div>    
                    <!--------- End Popup Decision Approval Footer ----------->             
           </div>
    </div>  
    <!--------- End Decision Approval Popup ----------->    
      
    <!-- Decision tab popup -->
    <div class = "popover-sf border-blue-light" id = "item-call">
        <div class = "popover-sf-arrow"></div>
        <div class = "popover-title border-btm-bluelight">
        </div>
        <table cellspacing = "0" cellpadding = "0" class = "page-block-tbl" id = "item-hover-tbl">
            <tr>
                <td class = "cell-left gen-block-cell fld-title1 left-width popover-label"></td>
                <td class = "gen-block-cell fld-value1" ></td>
            </tr>
            <tr>
                <td class = "cell-left gen-block-cell fld-title2 left-width popover-label"></td>
                <td class = "gen-block-cell fld-value2"></td>
            </tr>
        </table>
    </div>      
    
    <!--  Veto rejection warning  -->
    <div class = "modal-window-vetorejectiononhome">  
             <!--------- Popup activity warning Header ----------->
         <div class = "modal-vetorejection-head">    
             <div class = "modal-vetorejection-header ft-left" id = "vetorejection-header">
                Warning!
             </div>                        
             <a class = "modal-close" href = "javascript: void(0);" onclick = "cancelVetoRejectPopup();"></a> 
         </div> 
             <!--------- End Veto rejection Header ----------->   
             <!--------- Popup Veto rejection Content ----------->
         <div class = "modal-vetorejection-content">
             <p class= "vetorejection-help">
                  When a Veto <b>Reject</b> a decision all other approvals are overridden. <br/>
                  Are you sure you want to reject? 
                <!-- You are about to <b>Reject</b> and block the decision. To continue click Yes. If you do not wish to continue click Cancel. --->
             </p>
         </div>    
             <!--------- End Veto rejection Content ----------->  
             <!--------- Popup Veto rejection Footer ----------->  
         <div class = "modal-vetorejection-btm">
             <div id = "vetorejection-footer">
                 <button type = "button" onclick = "approveReject($('#decisionId').val(),$('#processInstanceId').val(),'Reject',$('#approvalComments').val(),$('#typeOfApproval').html());">Yes</button>
                 <button type = "button" onclick = "cancelVetoRejectPopup();">Cancel</button>
             </div>  
         </div>      
             <!--------- End Veto rejection Footer ----------->
     </div>
     <!--  End of Veto rejection warning  -->
    
    <script>
        // Assigned and Delayed tab in urgent section
        function  kendoMyCollegueList (gridData) {
            $('#urgentAssignedNo').html('('+gridData.length+')');
            function SortByValue1(x,y) {
                 return x.DueDate- y.DueDate; 
            }
            data1 = gridData;
            if(data1 != null){
                //data1.sort(SortByValue1);
            }
            var dataSource = new kendo.data.DataSource({
                data: data1,        
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            Name: { type: "string"},
                            Status : {type: "string"},
                            DueDate : {type:"date"},
                            Priority : {type:"string"},
                            AssignedName : {type : "string" , editable: false},
                            relatedToName : {type:"string" , editable: false},
                            typeOfTask : {type:"String" , editable: false}
                        }
                    }
                },pageSize:5
            });
            var grid = $("#myCollegueTasks1").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                sortable: true,
                editable: false,
                pageable: true,
                columns: [
                    
                    {
                        field: "Subject",
                        title: "Title",
                        template: '<a class="Id" href=/#:Id# target="_parent">#=Subject#</a>'
                    },
                    {
                        field: "relatedToName",
                        title: "Related To",
                        template: '<a class="Id" href=/#:relatedToId# target="_parent">#:relatedToName#</a>'
                    },
                    {
                       field: "DueDate",
                       title: "Due Date",
                       format:'{0:{!JSENCODE(dateFormat)}}',
                       width:80
                    },
                    {
                       field: "Status",
                       title: "Status",
                       editor: statusDropDownEditor ,
                       template: '<div>#:Status#<div>',
                       width: 100                 
                    },
                    {
                       field: "Priority",
                       editor: priporityDropDownEditor,
                       title: "Priority",
                       width: 70
                    },
                    {
                       field: "AssignedName",
                       title: "Assigned To",
                       template: '<a class="Id" href=/#:AssignedId# target="_parent">#:AssignedName#</a>'
                    }
                    ],
                    
            }).data("kendoGrid");
        }
        
        // My Decision table
        function  kendoMyDecision (gridData) { 
          function SortByValue1(x,y) {
                                  return x.Position- y.Position; 
                           }
            data1 = gridData;
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            var dataSource = new kendo.data.DataSource({
                data: data1,
                 transport: {
                    read: function(event) {   
                        dataSource.sync();
                        event.success(gridData);
                    },
                    update: function(e) {  
             
                    }
                 },          
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            Name: { type: "string" , editable: false},
                            phase : {type: "string", editable:false},
                            lastModifiedDate: { type: "dateTime", editable: false },
                            dueDate: { type: "string" , editable: false}
                        }
                    }
                },pageSize:5
            });
            var grid = $("#myDecisions").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                sortable: true,
                editable: false ,
                height:250,
                pageable: true,
                columns: [
                    {
                        field: "Name",
                        title: "Name/Title",
                        template: '<a href=/#:Id# target="_parent">#:Name#</a>'
                    },
                    {
                        field: "phase",
                        title: "Phase",
                        template: '<div align = "center"><img src=/#:phaseImg# title=#:phase# /><div>',
                        width:60
                    },
                    {
                        field: "lastModifiedDate",
                        title: "Last Activity Date",
                        format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                        width:130
                    },
                    {
                       field: "dueDate",
                       title: "Due Date",
                       format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                       width:130
                    }],
            }).data("kendoGrid");
        }
        
       // My Tasks table
       function  kendoMyTasks (gridData) {
            function SortByValue1(x,y) {
                                  return x.Position- y.Position; 
                           }
            data1 = gridData;
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            dateFormat = '{0:{!JSENCODE(dateFormat)}}';
            var dataSource = new kendo.data.DataSource({
                data: gridData,     
                batch: true,   
                transport: {
                    read: function(event) {  
                        //dateFormat = '{0:{!JSENCODE(dateFormat)}}';
                        dataSource.sync();
                        event.success(gridData);
                    },
                    parameterMap: function(data, type) {
                  }
                  ,
                    update: function(e) {  
                        var stringifiedData = JSON.stringify(e);  
                        var recodsId = e.data.models[0].Id;
                        var recodsSubject = e.data.models[0].Subject;
                        var recodsStatus = e.data.models[0].Status;
                        var recodsPriority = e.data.models[0].Priority;
                        var recodsDueDate = e.data.models[0].DueDate;
                        recodsDueDate = kendo.toString(recodsDueDate,"MM,dd,yyyy");
                        updateMyTask(recodsId, recodsSubject, recodsPriority, recodsStatus,recodsDueDate);
                    }
                 },   
                schema: {
                    parse: function(response) {
                      
                   
                     return response; 
                    },
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            Subject: { type: "string" , validation: { required: {message: "Must not be empty!"}}},
                            Status: { type: "string"},
                            Priority: { type: "string"},
                            CreatedBy: { type: "string" , editable: false},
                            relatedTo: { type: "string" , editable: false},
                            DueDate: {type:"Date",editable:true},
                            dateFormatToBeSet: {type:"string",editable:false}
                        }
                    }
                },pageSize: 5
            });
            var isEdit = false; 
            
            var grid = $("#myTasks").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                sortable:true,
                editable: true,
                height: 250,
                pageable: true,
                editable: "inline",
                columns: [
                    {
                        field: "Subject",
                        title: "Subject",
                        template: '<a href=/#:Id# target="_parent">#=Subject#</a>'
                    },
                    {
                        field: "relatedTo",
                        title: "Related To",
                        editable:false,
                        template: '<a href=/#:relatedToId# target="_parent">#=relatedTo#</a>'
                    },
                    {
                        field: "DueDate",
                        title: "Due Date",
                        editable:true,
                        editor : dateTimeEditor,
                        format:'{0:{!JSENCODE(dateFormatStatic)}}'  ,
                        width: 100
                    },
                    {
                       field: "Status",
                       title: "Status",
                       editor: statusDropDownEditor ,
                       template: '<div>#:Status#<div>',
                       width: 125                   
                    },
                    {
                       field: "Priority",
                       title: "Priority",
                       editor: priporityDropDownEditor,
                       width: 100,
                       template: "#:Priority#"
                    },{ command: ["edit"], title: "&nbsp;", width: "95px" }],
                                    
            }).data("kendoGrid");
        }
        
        var priorities = [
            {!taskPriorityPicklist},
        ];
        var types = [
            { typesName: "Inactivity" }, 
            { typesName: "Quality"}, 
            { typesName: "Lack of Resources" }, 
        ];
        var statusValue = [
            {!taskStatusPicklist},
        ];
        
        function priporityDropDownEditor(container, options) {
            $('<input data-text-field="PriorityName" data-value-field="PriorityName" data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: false,
                dataSource: priorities,
                width:200
            });
        }
        
        
        function typesDropDownEditor(container, options) {
            $('<input data-text-field="typesName" data-value-field="typesName" data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: false,
                dataSource: types
            });
        }
        
        function statusDropDownEditor(container, options) {
            $('<input data-text-field="StatusName" data-value-field="StatusName" data-bind="value:' + options.field + '"/>' )
            .appendTo(container)
            .kendoDropDownList({
                height : 240,
                autoBind: false,
                dataSource: statusValue
            });
        }
       
        function dateTimeEditor(container, options) {
            
            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({});
        }
      
      
        
      
        // Tasks tab in urgent section enabled with autoSync attribute for auto save functionality
        function  kendoUrgentTasks (gridData) {
            //alert(JSON.stringify(gridData));
            $('#urgentTaskNo').html('('+gridData.length+')');
            var dataSource = new kendo.data.DataSource({
                data: gridData,
                autoSync: true,      
                batch: true,   
                transport: {
                    read: function(event) { 
                        dataSource.sync();
                         
                        event.success(gridData);
                    },
                    update: function(event) {   
                        var stringifiedData = JSON.stringify(event); 
                        var updatedData = parsingModifieData(stringifiedData);
                        event.success();
                    }
                 },   
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            title: { type: "string" , validation: { required: {message: "Must not be empty!"}}},
                            relatedTo: {type:"string", editable: false},
                            status: {type:"string"},
                            priority: {type:"string"},
                            relatedToId: {type:"string", editable: false},
                            CreatedById: {type:"string", editable: false},
                            DueDate: {type:"dateTime", editable: true},
                            CreatedBy: {type:"string", editable: false}
                        }
                    }
                },pageSize: 5
            });
            
            var isEdit = false; 
            
            var grid = $("#kendoUrgentTasks").kendoGrid({
                dataSource: dataSource,
                scrollable: true,
                sortable:true,
                editable: true,
                height: 250,
                pageable: true,
                toolbar:  ["save","cancel"],                            
                columns: [
                    {
                        field: "title",
                        title: "Subject",
                        template: '<a href="/#:Id#" target="_parent" >#=title#</a>'
                    },
                    {
                        field: "relatedTo",
                        title: "Related To",
                        template: '<a href="/#:relatedToId#" target="_parent" >#:relatedTo#</a>'
                    },
                    {
                        field: "DueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateFormat)}}',
                        editor: dateTimeEditor,
                        width: 100
                    },
                    {
                        field: "status",
                        title: "Status",
                        editor: statusDropDownEditor ,
                        template: '<div>#:status#<div>',
                        width: 120
                    },
                    {
                        field: "priority",
                        title: "Priority",
                        editor: priporityDropDownEditor,
                        width: 100,
                        template: "#:priority#"
                    },
                    {
                        field: "CreatedBy",
                        title: "Assigned By",
                        template: '<a href="/#:CreatedById#"  target="_parent" >#:CreatedBy#</a>'
                    }
                    ] 
                                    
            }).data("kendoGrid");
        }
        
        // Team Tasks table
        function  kendoMyTeamTasks (gridData) {
          function SortByValue1(x,y) {
                                  return x.Position- y.Position; 
                           }
            data1 = gridData;
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            var dataSource = new kendo.data.DataSource({
                data: data1,        
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            Subject: { type: "string" , editable: false},
                            DueDate : {type: "date", editable:false},
                            Status: { type: "string", editable: false },
                            Priority: { type: "string" , editable: false},
                            CreatedBy: { type: "string" , editable: false},
                            AssignedTo : { type: "string" , editable: false}
                        }
                    }
                },pageSize: 5
            });
            var grid = $("#myTeamTasks").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                sortable: true,
                editable: true,
                height:250,
                pageable: true,
                columns: [
                    {
                        field: "Subject",
                        title: "Subject",
                        template: '<a href=/#:Id# target="_parent">#=Subject#</a>'
                    },
                    {
                        field: "DueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateFormat)}}',
                        width: 80
                    },
                    {
                       field: "Status",
                        title: "Status",
                        template: '<div>#:Status#<div>',
                        width: 100,
                  
                    },
                    {
                       field: "Priority",
                       title: "Priority",
                       template: "#:Priority#",
                       width: 65
                    },
                    {
                       field: "CreatedBy",
                       title: "Created By",
                       template: "#:CreatedBy#"
                  },
                    {
                       field: "AssignedTo",
                       title: "Assigned To",
                       template: "#:AssignedTo#"
                  }],
            }).data("kendoGrid");
        }
        
        // Decision Highlights
        function  kendoDecisionHighlights(gridData) {
          function SortByValue1(x,y) {
                      return x.Position- y.Position; 
               }
            data1 = gridData;
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            var dataSource = new kendo.data.DataSource({
                data: data1,        
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            title: { type: "string" , editable: false},
                            phase: {type: "string", editable:false},
                            lastModifiedDate: { type: "dateTime", editable: false },
                            DueDate: { type: "string" , editable: false},
                            owner: { type: "string" , editable: false}
                            
                        }
                    }
                },pageSize: 10
            });
            var grid = $("#decisionHighlights").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                sortable: true,
                editable: false,
                height:315,
                pageable: true,
                columns: [
                    {
                        field: "title",
                        title: "Title",
                        template: '<a href=/#:Id# target="_parent">#:title#</a>'
                    },
                    {
                        field: "phase",
                        title: "Phase",
                        template: '<div align = "center"><img src=/#:phaseImg# title=#:phase# /><div>',
                        width: 60
                    },
                    {
                        field: "lastModifiedDate",
                        title: "Last Modified Date",
                        format:'{0:{!JSENCODE(dateTimeFormat)}}',
                        width: 130
                    },
                    {
                        field: "DueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateTimeFormat)}}',
                        width: 130
                    },
                    {
                        field: "owner",
                        title: "Owner",
                        template: "#:owner#"
                    },
                    
                    {
                       field: "likeValue",
                       title: "Like / Dislike",
                       template: '<div align = "center"><img src=/#:likeImg# title=#:likeValue# /><div>',
                       width: 95
                    },
                    
                    {
                       field: "issueValue",
                        title: "Issue",
                       template: '<div align = "center"><img src=/#:issueImg# title=#:issueValue# /><div>',
                       width: 55
                    }
                    ,{
                       field: "mood",
                       title: "Mood",
                       template: '<div align = "center"><div class=#:moodClass# title=#:mood# /><div>',
                       width: 55
                    }
                    ,{
                       field: "starValue",
                        title: "Relevancy",
                      template: '<div align = "center"><img src=/#:starImage# title=#:starValue# /><div>',
                      width: 100
                    }],
            }).data("kendoGrid");
        }
        
        
        // Approval Stance table
        function  kendoApprovals(gridData) {
            // To enable kendo sorting.
            function SortByValue1(x,y) {
                        return x.Position- y.Position; 
            }
            data1 = gridData;
            if(data1 != null){
                data1.sort(SortByValue1);
            }
            
            // new way or style [Using transport]
            var dataSource = new kendo.data.DataSource({
                data: data1, 
                 transport: {
                    read: function(event) {  
                        dataSource.sync();
                        event.success(gridData);
                    },
                    update: function(event) {           
                        event.success();
                    }
                 },          
                schema: {
                    model: {
                        id: "id",
                        fields: {
                            id: { type: "string", editable: false },
                            status: { type: "string" , editable: false},
                            Title: { type: "string" , editable: false},
                            dueDate: { type: "string", editable: false },
                            createdBy: { type: "string" , editable: false},
                            step:{type:"string",editable:false},
                            userRole : {type:"string",editable:false},
                            vetoRights : {type : "boolean" , editable:false},
                            titleHover : {type : "string" , editable:false}
                        }
                    }
                 },pageSize: 5
            });
            var grid = $("#itemsToAprove").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                editable: true,
                sortable: true,
                height:250,
                pageable: true,
                columns: [
                    {
                        field: "step",
                        title: "Action",
                        template: "<div align = 'center'><img class='home-app-rej' id = 'img#:id#' onclick=\"showDecisionApprovalModal('#:step#','#:id#','#:decisionId#','items','#:userRole#','#:vetoRights#')\";   src=/#:approveImg# title=#:titleHover# /><div id='#:id#' class='home-hidden-field'>#=problemStmt#</div><div id='#:id#append' class='home-hidden-field'>#=decision#</div><div id='#:id#title' class='home-hidden-field'>#=Title#</div><div>",
                        width: 70,
                    },
                    {
                        field: "Title",
                        title: "Title",
                        template: '<a href=/#:decisionId# target="_parent">#:Title#</a>',
                    },
                    {
                        field: "status",
                        title: "Status",
                        template:'<div align = "center"><img src=/#:statusImage# title=#:status# /><div>',
                        width: 60,
                    },
                    {
                       field: "createdBy",
                       title: "Requested By",
                       template: "#:createdBy#",
                    },
                    {
                        field: "dueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateTimeFormat)}}',
                        width: 130,
                    }],
            }).data("kendoGrid");
        }
        
        // Approvals tab in urgent section
        function  kendoUrgentApprovals(gridData) {
            // Assign number of records on tab
            $('#urgentApprovalsNo').html('('+gridData.length+')');
            
            // To enable kendo sorting.
            function SortByValue1(x,y) {
                return x.Position- y.Position; 
            }
            data1 = gridData;
            if(data1 != null){
                //data1.sort(SortByValue1);
            }
            
            // new way or style [Using transport]
            var dataSource = new kendo.data.DataSource({
                data: data1, 
                  transport: {
                    read: function(event) {  
                        dataSource.sync();
                        event.success(gridData);
                    }
                    ,
                    update: function(event) {           
                      
                        event.success();
                    }
                 },           
                schema: {
                    model: {
                        id: "id",
                        fields: {
                            id: { type: "string", editable: false },
                            status: { type: "string" , editable: false},
                            Title: { type: "string" , editable: false},
                            DueDate: { type: "dateTime", editable: false },
                            Owner: { type: "string" , editable: false},
                            step:{type:"string",ediatble:false},
                            myRole:{type:"string",ediatble:false},
                            vetoRights : {type : "boolean",ediatble:false},
                            titleHover : {type : "string" , editable:false}
                        }
                    }
                },
                sort: { field: "DueDate", dir: "desc" },
                pageSize: 5
            });
            var grid = $("#kendoUrgentApprovals").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                editable: false,
                sortable: true,
                pageable: true,
                dataBound: onDataBound,
                dataBinding: onDataBinding,
                columns: [
                    {
                        field: "step",
                        title: "Action",
                        template: "<div align = 'center'><img class='home-app-rej'  onclick=\"showDecisionApprovalModal('#:step#','#:id#','#:decisionId#','urgent','#:myRole#','#:vetoRights#')\";   src=/#:approveImg# title=#:titleHover# /><div id='#:id#' class='home-hidden-field'>#=problemStmt#</div><div id='#:id#append' class='home-hidden-field'>#=decision#</div><div id='#:id#title' class='home-hidden-field'>#=Title#</div><div>",
                        width: 70,
                    },
                    {
                        field: "Title",
                        title: "Title",
                        template: '<a class="decisionLink" href=/#:decisionId# target="_parent">#:Title#</a><div id="decisionHidden" >#=problemStmt#</div><div id="decisionHidden" >#=decision#</div><div id="decisionHidden" >#=fieldTitle1#</div><div id="decisionHidden" >#=fieldTitle2#</div>',
                    },
                    {
                        field: "DueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateTimeFormat)}}',
                        width: 130,
                    },
                    {
                        field: "status",
                        title: "Status",
                        template:'<div align = "center"><img src=/#:statusImage# title=#:status# /><div>',
                        width: 55,
                    },
                    {
                        field: "myRole",
                        title: "My Role",
                        width: 100,
                        template: "#:myRole#",
                    },
                    {
                       field: "Owner",
                       title: "Owner of the Decision",
                       template: '<a href=/#:OwnerId# target="_parent">#:Owner#</a>',
                    }],
            }).data("kendoGrid");
        }
        
        //Decisions tab in urgent serction
        function kendoUrgentDecisions(gridData){
            $('#urgentDecisionNo').html('('+gridData.length+')');
            function SortByValue1(x,y) {
                      return x.Position- y.Position; 
               }
            data1 = gridData;
            if(data1 != null){
                //data1.sort(SortByValue1);
            }
            
            var dataSource = new kendo.data.DataSource({
                data: data1,        
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            phaseImg: { type: "string" , editable: false},
                            phase: { type: "string" , editable: false},
                            decisionId: { type: "string", editable: false },
                            decisionTitle: { type: "string" , editable: false},
                            problemStatement:{type:"string",ediatble:false},
                            decisionTaken:{type:"string",ediatble:false},
                            dueDate:{type:"string"},
                            myRole:{type:"string"},
                            ownerId:{type:"string"},
                            ownerName:{type:"string"}
                        }
                    }
                },pageSize: 5
            });
            var grid = $("#kendoUrgentDecisions").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                editable: false,
                sortable: true,
                pageable: true,
                dataBound: onDataBound,
              dataBinding: onDataBinding,
                columns: [
                    {
                        field: "decisionTitle",
                        title: "Title",
                        template: '<a class="decisionLink" href=/#:decisionId# target="_parent">#=decisionTitle#</a><div id="decisionHidden" >#=problemStatement#</div><div id="decisionHidden" >#=decisionTaken#</div><div id="decisionHidden" >#=fieldTitle1#</div><div id="decisionHidden" >#=fieldTitle2#</div>'
                    },
                    {
                        field: "phase",
                        title: "Phase",
                        template:'<div align = "center"><img src=/#:phaseImg# title=#:phase# /><div>',
                        width: 55
                    },
                    {
                        field: "dueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateTimeFormat)}}',
                        width: 130
                    },
                    {
                        field: "myRole",
                        title: "My Role",
                        width: 100,
                        template: "#:myRole#"
                    },
                    {
                       field: "Owner",
                       title: "Owner of Decision",
                       template: '<a href=/#:ownerId# target="_parent">#:ownerName#</a>'
                    }],
            }).data("kendoGrid");
        }
        
        // Pending Approvers tab in urgent section
        function kendoPendingApprovals(gridData){
            $('#pendingApprovalsNo').html('('+gridData.length+')');
            function SortByValue1(x,y) {
                      return x.Position- y.Position; 
               }
            data1 = gridData;
            if(data1 != null){
                //data1.sort(SortByValue1);
            }
            
            var dataSource = new kendo.data.DataSource({
                data: data1,        
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", editable: false },
                            phaseImg: { type: "string" , editable: false},
                            phase: { type: "string" , editable: false},
                            priority: { type: "string", editable: false },
                            title: { type: "string" , editable: false},
                            pendingApprovers:{type:"string",ediatble:false},
                            myRole:{type:"string",ediatble:false},
                            DueDate:{type:"string"},
                            myRole:{type:"string"},
                            status:{type:"string"}
                        }
                    }
                },
                sort: { field: "DueDate", dir: "desc" },
                pageSize: 5
            });
            var grid = $("#pendingApprovals").kendoGrid({
                dataSource: dataSource,  
                scrollable: true,
                editable: false,
                sortable: true,
                pageable: true,
                dataBound: onDataBound,
              dataBinding: onDataBinding,
                columns: [
                    {
                        field: "title",
                        title: "Title",
                        template: '<a class="decisionLink1" href=/#:Id# target="_parent">#=title#</a>'
                    },
                    {
                        field: "pendingApprovers",
                        title: "Pending Approvers"
                    },
                    {
                        field: "myRole",
                        title: "My Role",
                        width : 100
                    },
                    {
                        field: "DueDate",
                        title: "Due Date",
                        format:'{0:{!JSENCODE(dateTimeFormat)}}',
                        width: 130
                    },
                    {
                        field: "status",
                        title: "Status",
                        width: 80
                    },
                    {
                        field: "priority",
                        title: "Priority",
                        width: 80
                    }
                    ,
                    {
                        field: "phase",
                        title: "Phase",
                        template:'<div align = "center"><img src=/#:phaseImg# title=#:phase# /><div>',
                        width: 65
                    }],
            }).data("kendoGrid");
        }
        
        // Issues tab in urgent section enabled with autoSync attribute for auto save functionality
        function  kendoUrgentIssues(gridData){
            $('#urgentIssues').html('('+gridData.length+')');
            function SortByValue1(x,y) {
                   return x.Position- y.Position; 
            }
            data1 = gridData;
            if(data1 != null){
                //data1.sort(SortByValue1);
            }
            var dataSource = new kendo.data.DataSource({
                data: gridData, 
                autoSync: true,         
                batch: true,   
                transport: {
                    read: function(event) {  
                        dataSource.sync();
                        event.success(gridData);
                    },
                    update: function(event) {  
                        var stringifiedData = JSON.stringify(event);
                        var updatedData = updateModifieData(stringifiedData);
                        event.success();
                    }
                 },   
                schema: {
                    model: {
                        id: "issueId",
                        fields: { 
                            issueId: { type: "string",editable:false },
                            issueName: { type: "string", validation: { required: {message: "Must not be empty!"}}},
                            assignTo: { type: "string",editable:false },
                            type: { type: "string"},
                            priority : { type: "string"},
                            comments : { type: "string"},
                            relatedToId : { type: "string",editable:false},
                            ownerId : {type : "string",editable:false},
                            relatedToObject : { type: "string",editable:false}
                        }
                    }
                },pageSize: 5
            });
            
            var isEdit = false; 
            
            var grid = $("#kendoUrgentIssues").kendoGrid({
                dataSource: dataSource, 
                scrollable: true,
                sortable:true,
                editable: true,
                height: 250,
                pageable: true,
                toolbar:  ["save","cancel"],                            
                columns: [
                   {
                       field: "issueName",
                       title: "Name",
                       template: '<a href="/#:issueId#" target="_parent" >#=issueName#</a>'
                   },
                   {
                       field: "assignTo",
                       title: "Assigned To",
                      
                       template: '<a href="/#:ownerId#"  target="_parent" >#:assignTo#</a>'
                   },
                   {
                       field: "relatedToObject",
                       title: "Related To Object",
                       
                       template: '<a href="/#:relatedToId#" target="_parent" >#:relatedToObject#</a>'
                   },
                   {
                       field: "type",
                       title: "Type",
                       editor: typesDropDownEditor,
                       template: "#:type#"
                   },
                   {
                       field: "priority",
                       title: "Priority",
                       editor: priporityDropDownEditor,
                       template: "#:priority#",
                       width: 100
                   },
                   
                   {
                       field: "comments",
                       title: "Comments",
                       template: "#=comments#"
                   }]
                                    
            }).data("kendoGrid"); 
        }
        
        function onDataBinding(arg) {
              
        }
           
         function onDataBound(arg) {
             $(function() {
               $('.decisionLink').hover(function(e) {
                   var itemTitle = $(this).html();
                   var itemField1 = $(this).next().html();
                   var itemField2 = $(this).next().next().html();
                   var itemTitle1 = $(this).next().next().next().html();
                   var itemTitle2 = $(this).next().next().next().next().html();
                   $('.popover-title').html(itemTitle);
                   //$('.fld-title1').html(itemTitle1);
                   $('.fld-title1').html('Description');
                   $('.fld-title2').html(itemTitle2);
                   
                   $('.fld-value1').html(itemField1);
                   $('.fld-value2').html(itemField2);
                   $('#item-call').show()
                     .css('top', e.pageY - 45)
                     .css('left', e.pageX + 30)
                     .appendTo('body');
                   
               }, function() {
                   $('#item-call').hide();
               });
             });
         }
        
        // remove quotes from json string 
        function removeQuotes(mystring) {
                
            newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
                return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
            });
            
            var newJ= $.parseJSON(newString);
            //var  newJ = eval ("(" + newString+ ")");
            return newJ;
        }
        
        function parsingModifieData(t){
            var selectedTimeFrame = document.getElementById('chooseTime').value;
            var searchValue = document.getElementById('searchUrgentTable').value;
            parseModifiedData(t,selectedTimeFrame, searchValue);
        }
        
        function updateModifieData(t){
            var selectedTimeFrame = document.getElementById('chooseTime').value;
            var searchValue = document.getElementById('searchUrgentTable').value;
            updateModifiedData(t,selectedTimeFrame, searchValue);
        }
        
        // Onclick veto rejection warning popup else it will be normal rejection of role, stance and decision 
        $('#opposeRejectBtn').click(function(){
            var approvalHeader = document.getElementById('approve-header').innerHTML;
            
            if( ( $('#vetoRightsId').val() == 'true' )   && ( ( approvalHeader.indexOf('Stance') != -1 ) || ( approvalHeader.indexOf('stance') != -1 ))){
                
                $('#modal-decision-approve').css('display','none');
                 
                $('.modal-window-vetorejectiononhome').css('top',function(){ return( $('#modal-decision-approve').css('top') ) });
                $('.modal-window-vetorejectiononhome').show();
                $('.bg-fade').fadeIn('slow');
            } else {
                approveReject($('#decisionId').val(),$('#processInstanceId').val(),'Reject',$('#approvalComments').val(),$('#typeOfApproval').html());
                hideDecisionApprovalModal();
            }           
        });
        
        function switchProblemStatement(count)
        {
           
           document.getElementById('switchProblemStatement'+count).style.backgroundPosition = '0px 0px';
           document.getElementById('switchDecisionStatement'+count).style.backgroundPosition = '0px -10px'
           document.getElementById('problemstatement'+count).style.display = 'block';
           document.getElementById('decisionstatement'+count).style.display = 'none';
        }
        
        function switchDecisionStatement(count)
        {
           
           document.getElementById('switchProblemStatement'+count).style.backgroundPosition = '0px -10px';
           document.getElementById('switchDecisionStatement'+count).style.backgroundPosition = '0px 0px'
           document.getElementById('problemstatement'+count).style.display = 'none';
           document.getElementById('decisionstatement'+count).style.display = 'block';
        }
         function showhideImportant()
        {   
          var tabsimortant = document.getElementById('tabsimortant') ; 
          if( tabsimortant.style.display == 'none' )
          {     
              $('#tabsimortant').show();  
              $('#dropBtnDecision').css('background-position' , '0px 0px'); 
              $('.important_container').css('height','650px');
          }
          else
          if( tabsimortant.style.display == 'block' )
          {    
              $('#tabsimortant').hide();  
              $('#dropBtnDecision').css('background-position' , '0px -11px');  
              $('.important_container').css('height','20px');
           }
          
        }
         function switchview()
         {   /* 
               if( document.getElementById('important_section').style.display == 'block' )
               {
                  document.getElementById('urgent_section').style.display = 'block';
                  document.getElementById('important_section').style.display = 'none'
               }
               else
               {
                  document.getElementById('important_section').style.display = 'block';
                  document.getElementById('urgent_section').style.display = 'none';
                             
               }  
             */               
          }
          
    </script>
     
</apex:page>