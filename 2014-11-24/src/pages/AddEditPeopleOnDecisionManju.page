<apex:page sidebar="false" id="mainPage" controller="AddEditPeopleManju" tabStyle="Decision__c"> 
<html>
    <head>
       <!--------- FT Stylesheets -----------> 
     
       <apex:stylesheet value="{!$Page.CommonStyles}" />
       <apex:stylesheet value="{!$Page.SocialInputStyles}" />
       <apex:stylesheet value="{!$Page.OverrideStyles}" />
       
       <!--------- FT Scripts ----------->
       <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>
       <apex:includeScript value="{!$Page.CommonScripts}" />
       <apex:includeScript value="{!$Page.SocialInputScripts}" />

       
       <!-- Kendo Library -->
       <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/examples-offline.css')}"/>
       <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.common.min.css')}"/>
       <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.metro.min.css')}"/>
       <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.dataviz.metro.min.css')}"/>
      <!-- <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo-theme.css')}"/> -->
      <c:WalkMeAndSupportButton />
<!--       <script type="text/javascript">(function() {var walkme = document.createElement('script'); walkme.type = 'text/javascript'; walkme.async = true; walkme.src = 'https://d3b3ehuo35wzeh.cloudfront.net/users/3d4e7e29fbce4945a03495f309d755c1/test/walkme_3d4e7e29fbce4945a03495f309d755c1_https.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(walkme, s);})();</script>-->
       <script>
           var existingFormSize = 0;
           var searchClick  = false;
           // changing footer text and enbling draggable for popup
           $(document).ready(function(){
              changeFooterText(); 
              dragModal();
           });
           
           // script for google analytics
             var _gaq = _gaq || [];
              _gaq.push(['_setAccount', 'UA-34907619-2']);
              _gaq.push(['_trackPageview']);
            
              (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
              })();
       </script>
       <style>
            #chkStatus{
                font-size:4px;
                color:white;    
            }
       </style>
    </head>
    <body>
       
            <!------------ Content -------------->
       <div class = "wrapper">
                <!------------ Page Header -------------->
            <div class = "page-head header-border">
                <div class = "object-icon ft-left">
                    <img src = "{!URLFOR($Resource.Images, 'common/icon-addEditPeople-32x32.png')}" />
                </div>
                <div class = "headers ft-left">
                    <span class = "page-subhead ft-left">Add / Edit People</span><br />
                    <h2> <apex:outputText value="{!headerName}"/> </h2>
                </div>
            </div>
            <!--
                Below line is an hidden text to keep current phase of the Decision. This is reqd in javascript.  
            -->
            <div id="chkStatus">{!HTMLENCODE(decisionPhase)}</div>
            <!--
                Below line is an hidden to keep the current logged in user id. This is a hidden text and is used in javascript  
            -->
            <div id="currentUserId" class="user-accountablity" ><apex:outputText value="{!$User.Id}" /></div>
            <apex:pageMessages />
                <!------------ End Page Header -------------->
                <!------------ Add Collaborators Section --------------> 
            <div class = "social-section-head">
                <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-addPeople-24x24.png')}" />
                <h3 class = "ft-left">Add People&nbsp;<img title="Click Search to get a complete list of users who are not yet collaborators of this decision or type the name you are looking for. You can use * as a wildcard at the end of your search criteria." src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" /></h3>                
            </div> 
            
            <div class = "social-search-container">
                Search &nbsp;
                <select id="selectList">
                  <option value="User">Users</option>
                  <option value="Group">Public Groups</option>
                </select>
                &nbsp;&nbsp;for &nbsp;
                
                <input type = "text" id="searchText"/>&nbsp;&nbsp;
                <button type = "button" onclick="searchUsers()">Search</button>
                
            </div>
            <div id = "searchWrap">
            <apex:form id="searchTable">
            
                <div class = "warn-msg">{!HTMLENCODE(message)}</div>
                <div class = "social-table-container">    
                    
                     <div class = "tbl-container-search">
                     <!--
                        Enable kendo table for search functionality.     
                     -->
                     <div id="gridSearchUsers"></div>
                        <script>
                            $(document).ready(function () {
                                   kendoSearchTable($.parseJSON('{!JSENCODE(searchedUserJSON)}'));
                                   $('#groupBtn').css('display','block')
                                  
                            });
                        </script>    
                     </div>   
                </div>
                <!--
                    Enable Add button and the check boxes for Adding Users. This section will be displayed when type of search is "users"
                -->
                <apex:outputPanel rendered="{!IF(OR(searchType == null,searchType == 'User'),true,false)}" >
                    <div class = "tbl-buttons-add btn-hold-width2" id = "groupBtn">
                        <div class = "group-as">
                            <div class = "add-as-btn ft-left">
                                <button id="addUserButton" type="button" onclick="addAsUsersFromDecision()">Add &amp; Save</button>
                                <button id="addUserButton1" style="display:none" type="button" disabled="disabled">Add &amp; Save</button>
                            </div>                    
                            
                            <div class = "add-as-option option-user ft-left">
                            <apex:outputPanel rendered="{!IF(OR(chkRecPermission==true,myRole.Accountable__c==true,myRole.Responsible__c==true,myRole.Backup_for_Accountable__c==true),True,False)}" >                                  
                                <input type="checkbox"  id="responsibleUser" />Responsible
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!IF(AND(chkRecPermission!=true,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false),True,False)}" >                                  
                                <input type="checkbox" disabled="disabled" id="responsibleUser" />Responsible
                            </apex:outputPanel>
                            </div>
                            <div class = "add-as-option option-user ft-left">                                  
                                <input type="checkbox" checked="true" id="consultedUser" />Consulted
                            </div>
                            <div class = "add-as-option option-user ft-left">                                  
                                <input type="checkbox" id="informedUser" />Informed
                            </div>                    
                        </div>
                    </div> 
                        <!------------- End User Button -------------->
                </apex:outputPanel>
                <!--
                    Action function to add selected users or groups. Added Users will be shown in the Editable with selected checkboxes for roles.
                    Selected User Array, selected users type, roles are passed as parameters
                -->
                <apex:actionFunction name="AddUsers" action="{!addingUserBasedOnType}" oncomplete="showAddButton();simplyRenderTheTable(); $(window).scrollTop( $('#editTable').height() )" reRender="existingUserForm,searchTable" >
                    <apex:param name="selectedUsers" id="selectedUsers" value="" />
                    <apex:param name="userType" id="userType" value="" />
                    <apex:param name="addingAsInformed" id="addingAsInformed" value="" />
                    <apex:param name="addingAsResponsible" id="addingAsResponsible" value="" />
                    <apex:param name="addingAsConsulted" id="addingAsConsulted" value="" />
                </apex:actionFunction> 
                <apex:outputPanel rendered="{!IF(searchType == 'Group',true,false)}" >    
                    <!------------- Group Button -------------->
                <!--
                    Enable Add button and the check boxes for Adding Users. This section will be displayed when type of search is "Groups"
                -->
                <div class = "tbl-buttons-add btn-hold-width2" id = "groupBtn">
                    <div class = "group-as">
                        <div class = "add-as-btn ft-left">
                            <button id="addGrpButton" type = "button" onclick="addAsGroup();">Add &amp; Save</button>
                            <button id="addGrpButton1" style="display:none" type="button" disabled="disabled">Add &amp; Save</button>
                        </div>
                        <div class = "add-as-option ft-left">
                            
                            <apex:outputPanel rendered="{!IF(OR(chkRecPermission==true,myRole.Accountable__c==true,myRole.Responsible__c==true,myRole.Backup_for_Accountable__c==true),True,False)}" >                                  
                                <input type="checkbox"  id="responsibleGroup" />Responsible (as Individuals)
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!IF(AND(chkRecPermission!=true,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false),True,False)}" >                                  
                                <input type="checkbox" disabled="disabled" id="responsibleGroup" />Responsible (as Individuals)
                            </apex:outputPanel>
                            
                        </div>
                        <div class = "add-as-option ft-left">
                            <input type="checkbox" id="consultedGroup" />Consulted (as Individuals)
                        </div>
                        <div class = "add-as-option ft-left option-informed">
                            <input type="checkbox" checked="checked" disabled = "disabled"/>Informed (as Group)
                        </div> 
                    </div>
                </div>   
                    <!------------- End Group Button -------------->
                </apex:outputPanel>              
            </apex:form>
            </div>       
       </div>
           <!------------ End Add Collaborators Section -------------->   
                
                <!------------ Edit Collaborators Section -------------->
            <div class = "social-section-head">
                <img class = "ft-left" src = "{!URLFOR($Resource.Images, 'common/icon-editPeople-24x24.png')}" />
                <h3 class = "ft-left">Edit People <img title="Use the checkboxes to edit the roles of the added people. If approval is required for role acceptance, please select the approval required checkbox." src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" /></h3>
            </div> 
            <apex:form id="existingUserForm">
                <div class = "content-text">
                    <!--
                        Below is the checkbox to enable the permission to CI members to Add/Edit other CI members. Only Acc, Res, Backup will be able to enable the permission 
                     -->
                     <label><apex:inputCheckbox disabled="{!IF(OR(myRole.Accountable__c,myRole.Responsible__c,myRole.Backup_for_Accountable__c),false,true)}"  id="permissionToCI" value="{!decisionData.Add_C_I_Members__c}" rendered="{!If(objType == 'Decision',true,false)}"/>&nbsp;Consulted or Informed collaborators can add/edit others to be Consulted or Informed</label>&nbsp;
                     <img src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" title="Normally, only the Accountable and Responsibles can edit a decision and invite people. Checking this checkbox allows Consulted or Informed collaborators to invite other users to be Consulted or Informed." /> 
                </div> 
                <!------------ Edit Collaborators Table -------------->
                <!--
                    Below script will be executed at each adding user functionality. This is reqd in javascript for iterating in loop. This holds the number of rows in the edit table. 
                -->
                <script>
                    existingFormSize = {!existingPeopleWrapperList.size};
                </script>
                <div class = "social-table-container" id = "editTable">
                    <div class = "tbl-disable"></div>
                   <!-- <div class = "ci-help ft-right">
                        
                    </div> -->
                    <table cellspacing = "0" cellpadding = "0" class = "tbl-people">
                        <tr>
                            <td class = "social-thead cell-width7">
                                Action
                            </td>
                            <td class = "social-thead" colspan = "2">
                                Name
                            </td>
                            <td class = "social-thead cell-width2">
                                Department
                            </td>
                            <td class = "social-thead cell-width3">
                                Responsible
                            </td>
                            <td class = "social-thead cell-width3">
                                Accountable
                            </td>
                            <td class = "social-thead cell-width4">
                                Consulted
                            </td>
                            <td class = "social-thead cell-width4">
                                Informed
                            </td>
                            <td class = "social-thead cell-width3">
                                Role<br />Acceptance<br />Required
                            </td>
                            <td class = "thead-seperator" >
                               &nbsp; 
                            </td>
                            <td class = "social-thead cell-width5">
                                Backup<br />For<br />Accountable
                                <img title="A collaborator with the Backup option ticked gets the same privileges as the Accountable. There can only be one Backup at the time. Only the Accountable or the Backup can edit this column." src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" /> 
                            </td>
                            <td class = "social-thead cell-width6">
                                Veto<br />Rights
                                <img title="A collaborator with the Veto option can reject a decision. I.e. by giving his own rejection, the decision status will also become Rejected regardless of the opinion of the other collaborators." src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" />
                            </td>
                            <td class = "social-thead cell-width2 thead-rborder">
                                Description
                                <img title="Include further information on the role. You might indicate 'Legal' or 'Marketing' to indicate what stakeholder a collaborator represents" src = "{!URLFOR($Resource.Images, 'common/icon-help-16x16.png')}" />
                            </td>
                        </tr>
                        <!--
                            Below is a variable which dynamically holds the row number. This number is used in definiing the RACI rules in Javascript.
                        -->
                        <apex:variable value="{!0}" var="count"/>
                        <!-- 
                            below is the apex repeat table which holds edit table
                        -->
                        <apex:repeat id="peopleRepeat" value="{!existingPeopleWrapperList}" var="exist" >
                        <!--
                            this script enables the mouse hover for groups showing memebrs of the group.
                        -->
                        <script>
                        $('.group-link').hover(function(e) {                                   
                            var content = $(this).next().html();
                            if(content != ''&& content != undefined ){
                                content = content.replace(/,/g, '<br>');
                                $('.popover-social-content').html(content);                   
                                $('.popover-social').show()
                                .css('top', e.pageY - 25)
                                .css('left', e.pageX + 50)
                                .appendTo('body');
                            }
                         },function() {
                            $('.popover-social').hide();
                         });
                       </script>
                        <tr>
                            <td class = "social-tcell tcell-left cell-center">
                                <!--
                                    Delete section
                                    1. There is a title attribute defined with "{IF,True,False}" condition. When the title attribute has "Delete", only those rows will be deltable
                                    2. For the loggedin user and the accountable row will not be deletable.
                                    3. To check if the user is accountable or not, there is a span and conditional statements. 
                                -->
                                <span id="userAccountablity{!FLOOR(count)}" class="user-accountablity" >{!if(exist.socialRec.Accountable__c,'ACCOUNTABLE','NOTACCOUNTABLE')}</span><img id="deletingIcon{!FLOOR(count)}" onclick="deleteUserFromEditTable(this.title,'{!IF(exist.SocialRec.User__c != null,exist.SocialRec.User__c,exist.SocialRec.GroupId__c)}')" src="{!IF(OR(exist.socialRec.Accountable__c,($User.Id == exist.socialRec.User__c),(AND(OR(myRole.Consulted__c==TRUE,myRole.Informed__c==TRUE),myRole.Accountable__c==False,myRole.Responsible__c==False,myRole.Backup_for_Accountable__c==false,decisionData.Add_C_I_Members__c,exist.isNewUserAdded == 'ExistingUser'))),URLFOR($Resource.Images,'common/icon-deleteDisabled-16x16.png'),URLFOR($Resource.Images,'common/icon-delete-16x16.png'))}" style="{!IF(OR(exist.socialRec.Accountable__c,($User.Id == exist.socialRec.User__c),(AND(OR(myRole.Consulted__c==TRUE,myRole.Informed__c==TRUE),myRole.Accountable__c==False,myRole.Responsible__c==False,myRole.Backup_for_Accountable__c==false,decisionData.Add_C_I_Members__c,exist.isNewUserAdded == 'ExistingUser'))),'cursor:default','cursor:pointer')}" title="{!IF(OR(exist.socialRec.Accountable__c,($User.Id == exist.socialRec.User__c),(AND(OR(myRole.Consulted__c==TRUE,myRole.Informed__c==TRUE),myRole.Accountable__c==False,myRole.Responsible__c==False,myRole.Backup_for_Accountable__c==false,decisionData.Add_C_I_Members__c,exist.isNewUserAdded == 'ExistingUser'))),'','Delete')}" /> 
                            </td>
                            <td class = "social-tcell">
                                <!--
                                    User Name or Group Name section
                                    1. User Name or Group Name is displayed, 
                                    2. If User, onclick this will redirect to user profile, else if it is a group, a remote action will be called, and whole of group members will be displayed.  
                                -->
                                <a href="{!if(exist.socialRec.User__c != null,'/'+exist.socialRec.User__c,'javascript:void(0)')}" onclick="groupMemberPopup('{!JSENCODE(exist.socialRec.GroupId__c)}','{!JSENCODE(exist.groupName)}');" target="{!if(exist.socialRec.User__c != null,'_blank','')}"><span id="userID{!FLOOR(count)}" class="user-accountablity" >{!IF(exist.socialRec.User__c != null,exist.socialRec.User__c,exist.socialRec.GroupId__c)}</span><apex:outputText value="{!IF(exist.socialRec.User__c != null,exist.socialRec.User__r.Name,exist.groupName)}" /></a>    
                            </td>
                            <td class = "social-tcell info-cell cell-width8">
                                <!--
                                    Group Icon section  
                                -->
                                <apex:image styleClass="group-img" url="{!URLFOR($Resource.Images,'common/icon-info-16x16.png')}" rendered="{!if(exist.socialRec.Group_Name__c != '',true,false)}" title="{!exist.socialRec.Group_Name__c}"/>
                            </td> 
                            <td class = "social-tcell">
                                <!--
                                    Department Section  
                                -->
                                <span id="userNature{!FLOOR(count)}" class="user-accountablity" >{!exist.isNewUserAdded}</span>
                                <apex:outputText value="{!exist.socialRec.User__r.Department}" rendered="{!IF(exist.SocialRec.User__c != null,true,false)}" />
                            </td>
                            <td class = "social-tcell cell-center">
                                <!--
                                    Responsible Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision
                                        b. One for Users who are part of decision
                                --> 
                                <apex:inputCheckBox value="{!exist.socialRec.Responsible__c}" disabled="{!if(OR(exist.isNewUserAdded != 'NewUser',exist.socialRec.User__c == null),true,false)}" rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="responsibleRole" onclick="enableVetoForInformedFromResponsible({!FLOOR(count)})" disabled="{!if(OR(AND(chkRecPermission!=true,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false),exist.socialRec.Is_Group__c,AND(OR(decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate'),exist.isNewUserAdded != 'NewUser')),true,false)}"  value="{!exist.socialRec.Responsible__c}" rendered="{!if(myRole.Id != null,true,false)}"  />
                            </td>
                            <td class = "social-tcell cell-center">
                                <!--
                                    Accountable Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)
                                        b. One for Users who are part of decision
                                    2. In order to have single accountable, singleAccountable function is used in javascript.
                                -->
                                <apex:inputCheckBox value="{!exist.socialRec.Accountable__c}" disabled="true"  rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="accountableRole" onclick="singleAccountable({!FLOOR(count)}, '{!URLFOR($Resource.Images,'common/icon-deleteDisabled-16x16.png')}' , '{!URLFOR($Resource.Images,'common/icon-delete-16x16.png')}' )" disabled="{!if(OR(decisionData.Phase__c == 'Draft',(AND(chkRecPermission!=true,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false)),exist.socialRec.Is_Group__c,decisionData.Phase__c == 'Propose',decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate'),true,false)}" value="{!exist.socialRec.Accountable__c}"  rendered="{!if(myRole.Id != null,true,false)}"/>
                                {! decisionData.Phase__c } {!chkRecPermission} {!myRole.Accountable__c}{! myRole.Responsible__c} {!myRole.Backup_for_Accountable__c} {!exist.socialRec.Is_Group__c} 
                            </td>
                            <td class = "social-tcell cell-center">
                                <!--
                                    Consulted Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)  
                                        b. One for Users who are part of decision
                                -->
                                <apex:inputCheckBox value="{!exist.socialRec.Consulted__c}" disabled="{!if(OR(exist.isNewUserAdded != 'NewUser',exist.socialRec.User__c == null),true,false)}"  rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="consultedRole" disabled="{!if(OR(AND(OR(myRole.Consulted__c==TRUE,myRole.Informed__c==TRUE),decisionData.Add_C_I_Members__c,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false,exist.isNewUserAdded != 'NewUser'),exist.SocialRec.User__c == null,AND(OR(decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate'),exist.isNewUserAdded != 'NewUser') ),true,false)}" onclick="enableVetoForInformedFromConsulted({!FLOOR(count)})" value="{!exist.socialRec.Consulted__c}"  rendered="{!if(myRole.Id != null,true,false)}"/>
                            </td>           
                            <td class = "social-tcell cell-center">
                                <!--
                                    Informed Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)
                                        b. One for Users who are part of decision
                                -->
                                <apex:inputCheckBox value="{!exist.socialRec.Informed__c}"  disabled="{!if(OR(exist.isNewUserAdded != 'NewUser',exist.socialRec.User__c == null),true,false)}" rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="informedRole" disabled="{!if(OR(AND(OR(myRole.Consulted__c==TRUE,myRole.Informed__c==TRUE),myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false,decisionData.Add_C_I_Members__c,exist.isNewUserAdded != 'NewUser'),exist.socialRec.User__c == null,AND(OR(decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate'),exist.isNewUserAdded != 'NewUser')),true,false)}" onclick="disableVetoForInformed({!FLOOR(count)})" value="{!exist.socialRec.Informed__c}"  rendered="{!if(myRole.Id != null,true,false)}"/>
                            </td>
                            <td class = "social-tcell cell-center">
                                <!--
                                    Role Acceptance Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)
                                        b. One for Users who are part of decision
                                -->
                                <apex:inputCheckBox value="{!exist.socialRec.Role_Acceptance_Required__c}"  disabled="true" rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="roleAcceptanceShare" disabled="{!IF(OR(exist.socialRec.Accountable__c,exist.socialRec.User__c == null, AND(exist.isNewUserAdded != 'NewUser',decisionData.Phase__c == 'Share'),  decisionData.Phase__c == 'Propose',decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate' ),true,false)}" value="{!exist.socialRec.Role_Acceptance_Required__c}"  rendered="{!if(myRole.Id != null,true,false)}"/>
                            </td>
                            <td class = "tcell-seperator" >
                               &nbsp; 
                            </td>
                            <td class = "social-tcell cell-center">
                                <!--
                                    Backup Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)
                                        b. One for Users who are part of decision
                                -->
                                <apex:inputCheckBox value="{!exist.socialRec.Backup_for_Accountable__c}"  disabled="true" rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="backup" onclick="singleBackup({!FLOOR(count)})" disabled="{!IF(OR(exist.socialRec.Accountable__c,AND(chkRecPermission!=true,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false),exist.socialRec.Is_Group__c,decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate'),true,false)}" value="{!exist.socialRec.Backup_for_Accountable__c}" rendered="{!if(myRole.Id != null,true,false)}"/> 
                            </td>
                            <td class = "social-tcell cell-center">
                                <!--
                                    Veto Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)
                                        b. One for Users who are part of decision
                                -->
                                <apex:inputCheckBox value="{!exist.socialRec.Veto_Rights__c}" disabled="true" rendered="{!if(myRole.Id == null,true,false)}" />
                                <apex:inputCheckbox id="veto" disabled="{!IF(OR(exist.socialRec.Accountable__c == true,AND(chkRecPermission!=true,myRole.Accountable__c==false,myRole.Responsible__c==false,myRole.Backup_for_Accountable__c==false),exist.socialRec.User__c == null,AND(exist.socialRec.Consulted__c==false,exist.socialRec.Responsible__c==false,exist.socialRec.Informed__c==true,exist.socialRec.User__c!=null),decisionData.Phase__c == 'Decide',decisionData.Phase__c == 'Execute',decisionData.Phase__c == 'Evaluate'),true,false)}" value="{!exist.socialRec.Veto_Rights__c}"  rendered="{!if(myRole.Id != null,true,false)}"/> 
                            </td>
                            <td class = "social-tcell tcell-right">
                                <!--
                                    Description Section
                                    1. There are two panel
                                        a. One for System admin who is not a part of Decision (the checkbox is disabled)
                                        b. One for Users who are part of decision
                                -->
                                <apex:inputField styleClass="social-textarea" value="{!exist.socialRec.Description__c}" />
                            </td>
                        </tr>
                        <apex:variable var="count" value="{!count+ 1}"/>
                        </apex:repeat>
                        <!--
                            Apex Repeat ends here
                        -->
                        
                    </table>
                </div> 
                    <!------------ End Edit Collaborators Table -------------->
                    <!--
                        Save, Save & Close & cancel button section 
                        1. Action Functions are also defined here.
                    -->
                <div class = "tbl-buttons-add">
                    <button type = "button"  onclick="saveNow()">Save</button> 
                    <button type = "button" onclick="saveClose()">Save and Close</button>
                    <button type = "button" onclick="cancel()">Cancel</button>
                    <apex:actionFunction name="saveNow" action="{!saveCurrentPeople}" /> 
                    <apex:actionFunction name="saveClose" action="{!savePeople}" />
                    <apex:actionFunction name="cancel" action="{!cancel}" /> 
                    
                    <!--
                        Action Function to define Delete functionality, Social Input ID is passed as parameter
                    -->
                    <apex:actionFunction name="deleteThisUser" action="{!deleteThisSocialInput}" reRender="existingUserForm" oncomplete="removePreloader();" >
                        <apex:param name="socialInputIdToBeDeleted" id="socialInputIdToBeDeleted" value="" /> 
                    </apex:actionFunction>
                </div>
            </apex:form>
                <!------------ End Edit Collaborators Section --------------> 
                  
                <!------------ End Content -------------->
           <apex:form >
               <!--
                    Action Function to execute the search functionality
                -->
               <apex:actionFunction name="searchSelectedUsers"   action="{!searchUsers}" oncomplete="$('#searchWrap').css('display','block')"  reRender="searchTable" >
                   <apex:param name="searchText" id="searchText" value="" />
                   <apex:param name="searchType" id="searchType" value="" />
               </apex:actionFunction>
               <apex:actionFunction name="simplyRenderTheTable" action="{!dummyRender}" reRender="existingUserForm" /> 
           </apex:form>
           
           <!--------- Group member Popup ----------->
    <div class = "bg-fade"></div>
    <div class = "modal-window">
        <div class = "modal-head">
            <!--------- Popup Group Member Header -----------> 
            <div class = "modal-group-header ft-left" id = "groupMember-header">
                Members of Group - <span class = "group-name"></span>
            </div>
            <!--------- End Group Member Header ----------->
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideModal()"></a>
        </div>    
        <!--------- Popup Group Member Content ----------->
        <div class = "modal-content" id = "groupMember-body">
            <div id="gridGroupMember"></div>
        </div>
        <!--------- End Popup Group Member Content ----------->
        <div class = "modal-btm">
            <!--------- Popup Popup Group Member Footer ----------->  
           <div class = "modal-footer" id = "groupMember-footer">                   
                <button type = "button" onclick = "hideModal()">Close</button>
           </div>
           <!--------- End Popup Popup Group Member Footer ----------->  
        </div>        
     </div> 
         <!--------- End Popup ----------->
         <!----------- Popover Group -------------->
     <div class = "popover-social">
         <div class = "popover-arrow-hold"><div class = "popover-social-arrow"></div></div>
         <div class = "popover-social-top">Group Members</div>
         <div class = "popover-social-content"></div>
         <div class = "popover-social-btm">Click on the link to see more</div>
     </div>
         <!----------- End Popover Group -------------->   
    </body>
    <script>
        
        var selectedUsers = new Array();
        var accountableUser = {!myRole.Accountable__c};
        var responsibleUser = {!myRole.Responsible__c};
        var backupUser = {!myRole.Backup_for_Accountable__c};
        var SAUser = {!myRole.Accountable__c};
        var currentPhase = document.getElementById('chkStatus').innerHTML;
        var currentUserId = $('#currentUserId').html();
        
        // Search functionality when user clicks "ENTER Button"
        $('#searchText').keypress(function(e){
            if (e.keyCode == '13'){
              searchUsers();
              return false;
            }
        });
        
        // Function to delete user, title of the delete icon is passed, if the title is not null, then delete functionality will work
        // when a user is deleted, the edit table is faded out
        function deleteUserFromEditTable(title,socialInputIdToBeDeleted){
            if(title == '' || title == null)
                return false;
            setDimension();
            $('.tbl-disable').css('display','block');
            deleteThisUser(socialInputIdToBeDeleted);
        }
        
        // function to disbale veto check box when
        // 1. Current user is made as accountable
        // 2. When current user is not either R or C and I is checked
        // Only Responsible or Consulted user can be Veto 
        function disableVetoForInformed(checkBox){
            if(accountableUser == true || responsibleUser == true || backupUser == true || SAUser == true){
                if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':informedRole').checked == true){
                    // if in draft phase
                    if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').disabled == true){
                        if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').disabled == false){
                            if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == false && document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false){
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                            }
                        }else{
                            if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false){
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                            }
                        }
                    }else{
                        if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').checked == true){
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                        }else{
                            if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').disabled == false){
                                if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == false && document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false){
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                                }
                            }else{
                                if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false){
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                                }
                            }   
                        }
                    }
                }
            }
        }
        
        // function to enable veto check box when
        // 1. Current user is not a accountable
        // 2. When current user is given Responsible permission
        // 3. Applicable only when Decision is in Draft or Share or Propose phase
        // Only Responsible or Consulted user can be Veto
        function enableVetoForInformedFromResponsible(checkBox){
            if(currentPhase == 'Draft' || currentPhase == 'Share' || currentPhase == 'Propose'){
                if(accountableUser == true || responsibleUser == true || backupUser == true || SAUser == true){
                    if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').disabled == false){
                        if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').checked == true){
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                        }else if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == true)){
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = false;       
                        }else{
                            if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':informedRole').checked == true)){
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                            }
                        }
                    }else{
                        if(checkBox != 0){
                            if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == true)){
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = false;       
                            }else{
                                if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':informedRole').checked == true)){
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        // function to enable veto check box when
        // 1. Current user is not a accountable
        // 2. When current user is given Consulted permission
        // 3. Applicable only when Decision is in Draft or Share or Propose phase
        // Only Responsible or Consulted user can be Veto
        function enableVetoForInformedFromConsulted(checkBox){
            if(currentPhase == 'Draft' || currentPhase == 'Share' || currentPhase == 'Propose'){
                if(accountableUser == true || responsibleUser == true || backupUser == true || SAUser == true){
                    if(accountableUser == true || responsibleUser == true || backupUser == true || SAUser == true){
                        if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').disabled == false){
                            if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').checked == true){
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                            }else if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == true)){
                                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = false;       
                            }else{
                                if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':informedRole').checked == true)){
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                                }
                            }
                        }else{
                            if(checkBox != 0){
                                if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == true)){
                                    document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = false;       
                                }else{
                                    if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':responsibleRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':consultedRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':informedRole').checked == true)){
                                        document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
                                        document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        // function to enable single Accountable functionality
        // 1. When Accountable role for any row is checked, all other rows the checkbox will be unchecked
        // 2. For a Group record, the accountable checkbox will be disabled by default. 
        // 3. When Accountable role for any row is checked; veto, backup, role acceptance should get unchecked and disabled.
        // 4. When Accountable role for any row is checked; Delete image icon should get disabled, cursor to be 'default', and title to be blank.
        function singleAccountable(checkBox,disabledUrl,enabledUrl){
            document.getElementById('deletingIcon'+checkBox).src = disabledUrl; // title="Image title";
            document.getElementById('deletingIcon'+checkBox).style.cursor="default";
            document.getElementById('deletingIcon'+checkBox).title="";
            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':accountableRole').checked = true;
            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':backup').checked = false;
            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').checked = false;
            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':backup').disabled = true;
            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':veto').disabled = true;  // mainPage:existingUserForm:peopleRepeat:0:roleAcceptance
            if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':roleAcceptanceShare').disabled == false){
                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':roleAcceptanceShare').checked = false;
                document.getElementById('mainPage:existingUserForm:peopleRepeat:'+checkBox+':roleAcceptanceShare').disabled = true;
            }
            for(i = 0 ; i < existingFormSize ; i++ ){
                if(i != checkBox){
                    if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':accountableRole').disabled == false){
                        if((document.getElementById('userAccountablity'+i).innerHTML == 'NOTACCOUNTABLE') && (document.getElementById('userID'+i).innerHTML != currentUserId)){         
                            document.getElementById('deletingIcon'+i).src = enabledUrl;
                            document.getElementById('deletingIcon'+i).style.cursor="pointer";
                            document.getElementById('deletingIcon'+i).title="Delete";
                        }
                        document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':accountableRole').checked = false;
                        if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':backup').checked == false){    
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':backup').disabled = false;
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':backup').checked = false;
                        }
                        if(document.getElementById('userNature'+i).innerHTML == 'NewUser'){ 
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':roleAcceptanceShare').disabled = false;
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':roleAcceptanceShare').checked = false;
                        }
                        
                        if((document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':consultedRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':responsibleRole').checked == false) && (document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':informedRole').checked == true) ){
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':veto').disabled = true;
                        }else{
                            document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':veto').disabled = false;
                        }
                    }
                }
            }
            // simplyRenderTheTable();   
        }
        
        // Function to enable single backup on decision
        // 1. Accountable cannot be backup, so for the row which has accountable checked, the backup will be disabled.
        // 2. When a backup is checked, the other backup checkboxes should get unchecked.
        function singleBackup(checkbox){
            for(i=0;i<existingFormSize;i++){
                if(document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':backup').disabled == false){
                    if(i != checkbox){
                        document.getElementById('mainPage:existingUserForm:peopleRepeat:'+i+':backup').checked = false;
                    }
                }
            }
        }
        
        // function to convert JSON String to JSON Object
        // remove quate from json string 
        function removeQuotes(mystring) {
                
            newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
                return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
            });
            
            var newJ= $.parseJSON(newString);
            return newJ;
        }
     </script>
   
  
     
    <script>
        // **************** Kendo table Java script  ********************//
        
        function kendoGroupMember(gridData) {
            //alert(gridData);
            var data1 = gridData;
            $.ajaxSetup({ cache: true }); 
            $(".k-grid-header .k-header").off("click.kendoSortable").on("click", false);
            // new way or style
            var dataSource = new kendo.data.DataSource({
                
                transport: {
                    read: function(e) {  
                        dataSource.sync();
                        e.success(data1);
                    }
                 },
                 schema: {
                       model: {
                          name: "name",
                          fields: {
                              name: { type: "string" },
                              userImage: { type: "string" },
                              department: { type: "string" }
                          }
                      }
                   },
                   pageSize :10
            });
            
            var grid = $("#gridGroupMember").kendoGrid({
                
                dataSource: dataSource,  
                sortable: true,
                pageable: true,                            
                columns: [
                       {
                           field: "name",
                           title: "Name",
                           template: '<div class="grid-user-img"><img src=#:userImage# title= "#:name#" height="24px" width="24px"  /></div><div class="grid-user-img group-link">#:name#</div>'
                          
                       },
                       {
                           field: "department",
                           title: "Department",   
                           template: "#:department#",                    
                           width: 180
                       }
                  ]
            }).data("kendoGrid");
            
           
        }
        
        function kendoSearchTable(gridData) {
            $("#gridSearchUsers").kendoGrid({
               dataSource:{
                   data:gridData ,
                   schema: {
                       model: {
                          id: "id",
                          fields: {
                              id: { type: "string" },
                              selectUser:{type: "boolean" },
                              userName:{type: "string" },
                              dept:{type: "string" }
                          }
                      }
                   },
                   pageSize: 7
               },
               columns: [
                   {
                       field: "selectUser",
                       title: "Select",
                       sortable: false,
                       template: "<div align='center'><input type='checkbox' onclick=\"selectUserFunc('#:userId#')\"; value=/#:selectUser# /></div>",
                       width: 55
                   },
                   {
                       field: "userName",
                       title: "Name",
                       template: "<div class='grid-user-img'><img src=#:userImage# height='24px' width='24px' title='#:userName#'></div><div class='grid-user-img group-link'><a class='group-link' href='javascript:void(0);' onclick=\"redirectUserTo('#:userId#','#:redirectUrl#','#:userName#')\"; >#:userName#</a><div id = 'decHidden'>#:userNameList#</div></div>"
                   },
                   {
                       field: "dept",
                       title: "Department",
                       template: "#:dept#",
                       width: 180
                   },
              ],
              sortable: true,
              pageable: true
           });
           
           
          
           $('.group-link').hover(function(e) {                                   
              var content = $(this).next().html();
              if(content != '' && content != undefined ){
                  content = content.replace(/,/g, '<br>');
                  $('.popover-social-content').html(content);                   
                  $('.popover-social').show()
                  .css('top', e.pageY - 25)
                  .css('left', e.pageX + 50)
                  .appendTo('body');
              }
           },function() {
           $('.popover-social').hide();
          });
        }
        
        // action function javascript method 
        function addAsUsersFromDecision(){
            var userType = 'User'
            var addingAsResponsible = $('#responsibleUser').is(':checked') ? 'responsibleReqd' : 'noResponsible';
            var addingAsConsulted = $('#consultedUser').is(':checked') ? 'consultedReqd' : 'noConsulted';
            var addingAsInformed = $('#informedUser').is(':checked') ? 'informedReqd' : 'noInformed'; 
            if(selectedUsers.length == 0){
                alert('Please select users');
                return false;
            }
            if(addingAsResponsible=='noResponsible' && addingAsConsulted=='noConsulted' && addingAsInformed=='noInformed'){
                alert('Please select the role for selected users');
                return false;
            }
            $('#addUserButton').css('display','none');
            $('#addUserButton1').css('display','block');
            var selectedUserStr = selectedUsers.toString();
            AddUsers(selectedUserStr,userType,addingAsInformed,addingAsResponsible,addingAsConsulted);
        }
       
         
    </script>
    
    <!--<apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jqueryui-1.9.1.js')}"/> 
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/kendo.all.min.js')}"/>
    -->
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jqueryui-1.9.1.js')}"/> 
    
    
    <apex:includeScript value="{!URLFOR($Resource.KendoMetroNewLibrary, '/kendoMetroNewLibrary/kendo.all.min.js')}"/> 
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/console.js')}"/>
</html>               
</apex:page>