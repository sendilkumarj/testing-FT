<apex:page controller="WorkbenchHomePage" id="activityPage" sidebar="true" extensions="ActivityTab">
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>   
    <apex:includeScript value="{!$Page.CommonScripts}" /> 
    <div class = "preloader"></div>     
    <div class = "bg-fade"></div>
    <script>
        showLoader();
    </script>  
    
    <apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/plan-jquery-ui.css')}"/>
    
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/jquery.min.js')}"/>    
    
    <!--  needed for Drag and drop -->
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jqueryui-1.9.1.js')}"/>
    <!-- stylesheet --> 
    <style>
        .ui-tabs .ui-tabs-nav li{border: none !important;}
        .ui-state-active a:link{border:1px solid #ccc !important; border-bottom:1px solid #fff !important;}
        .ui-tabs-nav .ui-state-default, .ui-tabs-nav > .ui-state-default a{ border: 0px !important;}
        .ui-tabs-nav .ui-state-active, .ui-state-active a:hover{border-bottom:1px solid #fff !important;}
        .ui-tabs .ui-tabs-nav li {border:1px solid #ccc !important; border-bottom:1px solid #fff !important;}
        .ui-tabs-nav .ui-state-active,.ui-tabs-nav > .ui-state-active a{border-color:#fff !important; background:#fff !important; background-color: #fff !important; color:#333 !important; border-bottom:1px solid #fff !important; }
    </style>
    <apex:stylesheet value="{!$Page.CommonStyles}" /> 
    <apex:stylesheet value="{!$Page.WorkbenchStyles}" /> 
    <apex:stylesheet value="{!$Page.cardStyles}" /> 
    <apex:stylesheet value="{!$Page.OverrideStyles}" /> 
    
    <!--     Kendo Library --> 
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.default.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/examples-offline.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.common.min.css')}"/>
   <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.metro.min.css')}"/>  
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.dataviz.metro.min.css')}"/>           
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/kendo.all.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.KendoMetroNewLibrary, '/kendoMetroNewLibrary/kendo.all.min.js')}"/> 
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/console.js')}"/>
    
    
    <apex:includeScript value="{!URLFOR($Resource.TokenInput, '/TokenInput/Tokeninputjavascript1.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.TokenInput, '/TokenInput/TokenInput.css')}"/>
    
    <!--    ------- FT Scripts ----------->
    <!-- additional stylesheet  -->
    <style>
        
        #taskDropDowns{
        display:block;
        }
        .UserFilterDiv{
        min-width:100px;
        margin-left:25px;
        float:left;
        }
        .taskGoClearBtn{
        //width:180px;
        margin-left:25px;
        float:left;
        margin-top:15px;    
        }
        .newTaskBtnDiv{
        font-weight:bold;
        float:left;
        }
        .createNewTaskBtn{
        float:left;
       /* min-width:250px; */
        margin-top:15px;
        margin-left: 30px;
        }
        .createNewTaskBtn input{
            margin: 3px;
        }
        .cardsExpansion{
        float:left;
        width:225px;
        margin-top:5px;
        }
        .demo-section {
        width: 200px;
        min-height:25px;
        }
        .demo-section select {
        width: 350px;
        }
        .demo-section label {
        display: inline-block;
        margin: 15px 0 5px 0;
        }
        .k-multiselect-wrap .k-input{
        background-color: transparent;
        height: 0.31em;
        line-height: 1.31em;
        padding: .18em 0;
        text-indent: .33em;
        border: 0;
        margin: 1px 0 0;
        float: left;
        }
        .k-loading, .k-state-hover .k-loading{
        background-image: url('Silver/loading.gif');
        background-position: 50% 50%;
        }
        <!-- qcd -->
        .qcd-input{
        width: 800px;
        }
        .qcd-textarea{
        width: 796px;
        height: 75px;
        } 
        .qcd-rtf{
        width: 700px;
        height: 300px;
        }   
        .qcd-head{
        border-bottom: 1px solid #EAEAEA;
        border-top: 1px solid #FFFFFF;
        height: auto;
        overflow: hidden;
        padding: 10px 10px 10px 12px;
        }
        .qcd-head-label{
        margin: 0 9px 0 17px;
        color: #4A4A56;
        font-size: 11px;
        font-weight: bold;
        text-align: right;
        }
        .qcd-head-img{
        margin-right: 20px;
        }
        .qcd-modal-close{
        margin: 0 !important;
        }
        #qcdInfo{
        display: none;
        }
        .qcd-disable{
        margin-top:10px;
        padding:20px 0;
        width: 1000px;
        position: absolute;
        z-index: 20000;
        background: #fff;
        opacity: 0.3;
        filter:alpha(opacity=30) !important;
        height: 300px;
        display: none;    
        }
        ul.token-input-list {
            width: 225px !important;
        }
        .c-padding{
            padding:10px;
        }

      #activityListView .k-dropdown{
            width: 100px !important;
        }
       /*  #totalTab .k-dropdown-wrap {
            -webkit-border-radius: 0 4px 4px 0 !important;
            border-radius: 0 4px 4px 0 !important;
        }
        
       #totalTab .k-dropdown-wrap {
            border-color: #c5c5c5 !important;
            background-color: #e9e9e9 !important;   
            background-image: url("textures/highlight.png") !important; 
        }
        
       #totalTab .k-icon{
            background-image: url('Default/sprite.png') !important;
        } */
         .ui-tabs .ui-widget-content .ui-tabs{
                    border-bottom: 1px solid #d4d4d4 !important;
                }
    </style>
    
     <c:WalkMeAndSupportButton />
        <div id="tabs" class = "ui-tabs">
            <!---------- Start of Tabs ------------->
            <ul class = "ui-tabs" id = "decisionTab">
                <li><a href="#activityCardView">Activities Board</a></li>
                <li><a href="#activityListView">Activities List</a></li>
                <!-- <li><a href="#activityClassicView">Classic View</a></li> -->
            </ul>
            <!---------- End of Tabs ------------->
            <!-- Activity Card Div, Contains the filter div and  ActivityCardView component -->
            <div id="activityCardView" >
                <!-- Filter in Card view -->
                <div class = "workbench-filter">
                    
                    <!-- To display the buttons in list view  -->
        <!--            <p class = "filter-help" id = "filterHelp">Select the criteria and press Go to see the task a person is "Assigned To" / "Assigned By" </p>-->
                     <p class = "filter-help" >Activities board view </p>
                    
                    <!-- Task dropdown duedate list  -->
                     <div id="taskDropDowns" >
                        <apex:outputPanel id="taskFilterPanel">
<!--                            <div style="float:left;">-->
<!--                                <span class="fontWeightBold">Due date within</span> <br/>-->
<!--                                <select Id="duedateId" onchange="searchRecordsWithLoader();">-->
<!--                                    <option value="Overdue">Overdue</option>-->
<!--                                    <option value="48hours" >48 hours</option>-->
<!--                                    <option value="1Week" selected = "selected">1 Week</option>-->
<!--                                    <option value="1Month">1 Month</option>-->
<!--                                    <option value="All">All</option>-->
<!--                                </select>-->
<!--                            </div>-->
                            <!-- Task "Assigned To/Assigned by"  -->
                          <div class="floatLeft">
                                <span class="fontWeightBold">User Filter</span>
                                <div class="toClear">
                                <select  Id="assignedId" onchange="searchRecordsWithLoader();" >
                                    <option value="AssignedTo" selected = "selected">Assigned To</option>
                                    <option value="AssignedBy" >Assigned By</option>
                                </select>
                                </div>
                            </div>
                            
                            <div class="UserFilterDiv">
                                <span class="fontWeightBold">Name of User</span>
                                <input class="toClear" type="text"  id="demo-input-pre-populated-with-tokenlimit-task" name="taskUser" required="True" onchange="searchRecordsWithLoader();"/>
                            </div>
                             <div class="UserFilterDiv">
                            <div id="timeFramLable" class="fontWeightBold ">Time Frame</div>
					    <div class="filterBorder toClear">
					
					<script>
					function enableDatePicker(){
						var datepicker = $("#sd").data("kendoDatePicker");
								// detach events
							datepicker.enable(true);
						var datepicker = $("#ed").data("kendoDatePicker");
								// detach events
							datepicker.enable(true);
					}
					function getLastWeek(date,count){
						if(count < 0){
					 		//console.log('inf'+count);
						    date = date ;
						    var lastWeek = new Date(date.getFullYear(), date.getMonth(), date.getDate() + count);
						    return lastWeek;
						  }else if(count == 13){
						  	var lastWeek = new Date(date.getFullYear(), date.getMonth(), date.getDate() -6);
						    return lastWeek;
						  }else{
						  	//console.log('else'+count);
						  	date = date ;
						    var lastWeek = new Date(date.getFullYear(), date.getMonth(), date.getDate() + count);
						    return lastWeek;
						  }
						}
						function changecolDt(slectedval) {
						    //console.log('{!todayDate}'); 
						    //var jsDate = new Date();
						    console.log('jsDate'+slectedval);
						    var count;
						   if(slectedval == 'yesterday' ){
						   		enableDatePicker();
						   		count = -1;
						   }else if(slectedval == 'today'){
						   		enableDatePicker();
						   	    count = 0;
						   }else if(slectedval == 'tomorrow'){
						   		enableDatePicker();
						   		count = 1;
						   }else if(slectedval == 'last7'){
						   		enableDatePicker();
						   		count = -6;
						   }else if(slectedval == 'last30'){
						   		enableDatePicker();
						   		count = -29;
						   }else if(slectedval == 'last60'){
						   		enableDatePicker();
						   		count = -59;	
						   }else if(slectedval == 'last90'){
						   		enableDatePicker();
						   		count = -89;
						   }else if(slectedval == 'last120'){
						   		enableDatePicker();
						   		count = -119;
						   }else if(slectedval == 'next7'){
						   		enableDatePicker();
						   		count = 6;
						   }else if(slectedval == 'next30'){
						   		enableDatePicker();
						   		count = 29;
						   }else if(slectedval == 'next60'){
						   		enableDatePicker();
						   		count = 59;
						   }else if(slectedval == 'next90'){
						   		enableDatePicker();
						   		count = 89;
						   }else if(slectedval == 'next120'){
						   		enableDatePicker();
						   		count = 119;
						   }else if(slectedval == 'lastnext7'){
						   		enableDatePicker();
						   		count = 13;
						   }else if(slectedval == 'All'){
						   		var datepicker = $("#sd").data("kendoDatePicker");
								// detach events
								datepicker.enable(false);
								$("#sd").val('');
								
								var datepicker = $("#ed").data("kendoDatePicker");
								// detach events
								datepicker.enable(false);
								$("#ed").val('');
								
						   }else if(slectedval == 'custom'){
						   		enableDatePicker();
						   		
						   }else if(slectedval == 'Overdue'){
						   		var datepicker = $("#sd").data("kendoDatePicker");
								// detach events
								datepicker.enable(false);
								$("#sd").val('');
								var datepicker = $("#ed").data("kendoDatePicker");
								// detach events
								datepicker.enable(false);
								$("#ed").val('');
						   		
						   }
							var lastWeek = getLastWeek(new Date('{!todayDate}'),count);
    						var lastWeekMonth = lastWeek.getMonth() + 1;
							var lastWeekDay = lastWeek.getDate();
							var lastWeekYear = lastWeek.getFullYear();
							var lastWeekDisplayPadded = ("00" + lastWeekMonth.toString()).slice(-2)+ "/" + ("00" + lastWeekDay .toString()).slice(-2)+ "/" + ("0000" + lastWeekYear .toString()).slice(-4);
							var date1 = kendo.parseDate(lastWeekDisplayPadded, "MM/dd/yyyy");
							//console.log('date1'+date1);
							
							if( count == -1 ){
								$("#sd").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
								$("#ed").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
								
							}else if( count == 0){
								$("#sd").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
								$("#ed").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
							}else if( count == 1){
								$("#sd").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
								$("#ed").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
							}
							else if(count < 0 ){
								$("#sd").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
								$("#ed").val(kendo.toString(new Date('{!todayDate}'), "{!JSENCODE(dateFormat)}"));
							}else if(count >  0  && count != 1 && count != 13  ){
								$("#sd").val(kendo.toString(new Date('{!todayDate}'), "{!JSENCODE(dateFormat)}"));
								$("#ed").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
							}else if(count >  0  && count != 1 && count == 13  ){
								var lastWeek = getLastWeek(new Date('{!todayDate}'),6);
	    						var  lastWeekMonth = lastWeek.getMonth() + 1;
								var lastWeekDay = lastWeek.getDate();
								var lastWeekYear = lastWeek.getFullYear();
								var lastWeekDisplayPadded = ("00" + lastWeekMonth.toString()).slice(-2)+ "/" + ("00" + lastWeekDay .toString()).slice(-2)+ "/" + ("0000" + lastWeekYear .toString()).slice(-4);
								var date2 = kendo.parseDate(lastWeekDisplayPadded, "MM/dd/yyyy"); 
								
								$("#sd").val(kendo.toString(date1, "{!JSENCODE(dateFormat)}"));
								$("#ed").val(kendo.toString(date2, "{!JSENCODE(dateFormat)}"));
							}
							
								searchRecordsWithLoader();
								
							return true;
						}
					</script>
					
					        <div class="floatLeft dateFieldLeftMargin">
					            <div class="fontWeightBold" style="margin-left:2px;">Date Field</div>
					            <select id="colDt" name="colDt" title="Date Column" onchange="searchRecordsWithLoader()">
					                <optgroup label="Activity Information"><option value="DUE_DATE" selected="selected">Due Date</option>
					                <option value="CREATED_DATE">Created Date</option>
					                <option value="LAST_UPDATE">Last Modified Date</option>
					                </optgroup>
					            </select>
					            <div class="toClear dateFieldTopMargin">
								    <div class="fontWeightBold">From</div>
								    <span class=""><input id="sd" name="sd" data-format = '{0:{!JSENCODE(dateFormat)}}'  data-role="datepicker"
						                   data-bind="visible: isVisible,
						                              enabled: isEnabled,
						                              value: selectedDate,
						                              events: { change: onChange }"
						                   style="width: 180px"  type="text" /></span>
			             		</div>
					        </div>
					    <div  id="timeInterval" class="floatLeft dateFieldLeftMargin"><div class="fontWeightBold" style="margin-left:2px;">Range</div><select id="colDt_q" name="colDt_q" onchange="changecolDt(this.options[this.selectedIndex].value)">
						    
						    <option value="All" >All</option>
<!--						    <option value="custom" >Custom</option>-->
							<option value="Overdue" >Overdue</option>
						   
						
						    <optgroup label="Day"><option value="yesterday">Yesterday</option>
						    <option value="today">Today</option>
						    <option value="tomorrow">Tomorrow</option>
						    <option value="last7">Last 7 Days</option>
						    <option value="last30">Last 30 Days</option>
						    <option value="last60">Last 60 Days</option>
						    <option value="last90">Last 90 Days</option>
						    <option value="last120">Last 120 Days</option>
						    <option value="next7" selected="selected">Next 7 Days</option>
						    <option value="next30">Next 30 Days</option>
						    <option value="next60">Next 60 Days</option>
						    <option value="next90">Next 90 Days</option>
						    <option value="next120">Next 120 Days</option>
						    <option value="lastnext7">Last &amp; Next 7 Days</option>
						    </optgroup> 
					    </select>
					    	 <div class="toClear dateFieldTopMargin"> 
							    <div class="fontWeightBold ">To</div>
							    <span class=""><input id="ed" name="ed"  style="width: 180px" data-format = '{0:{!JSENCODE(dateFormat)}}' data-role="datepicker"
					                   data-bind="visible: isVisible,
					                              enabled: isEnabled,
					                              value: selectedDate,
					                              events: { change: onChange }"   type="text"/></span></div>
							</div>
					    </div>
					    
							<script>
				                $(document).ready(function() {
				                    function startChange() {
				                        
				                        var sdDatepicker = $("#sd").data("kendoDatePicker")
				                   		 var max = sdDatepicker.value();
				                   		// console.log('max'+max)
				                   		 var edDatepicker = $("#ed").data("kendoDatePicker")
				                   		 edDatepicker.min(max);
				                   		 
				                   		 if(max == null){
				                   		 	edDatepicker.min(new Date('{!todayDate}'));
				                   		 }
				                	  }
				
				                    function endChange() {
				                    	 var edDatepicker = $("#ed").data("kendoDatePicker")
				                    	 var min = edDatepicker.value();
				                    	 
				                    	 var sdDatepicker = $("#sd").data("kendoDatePicker")
				                    	 sdDatepicker.max(min);
				                    	 //console.log('mino'+min);
				                    	 if(min == null ){
				                    	 //console.log('min'+min);
				                    	 	var lastWeek = getLastWeek(new Date('{!todayDate}'),6);
				    						var  lastWeekMonth = lastWeek.getMonth() + 1;
											var lastWeekDay = lastWeek.getDate();
											var lastWeekYear = lastWeek.getFullYear();
											var lastWeekDisplayPadded = ("00" + lastWeekMonth.toString()).slice(-2)+ "/" + ("00" + lastWeekDay .toString()).slice(-2)+ "/" + ("0000" + lastWeekYear .toString()).slice(-4);
											var date2 = kendo.parseDate(lastWeekDisplayPadded, "MM/dd/yyyy"); 
				                    	 	sdDatepicker.max(date2);
				                    	 }
				                    }
									
									 var viewModelstart = kendo.observable({
									        selectedDate: null,
									        isEnabled: true,
									        isVisible: true,
									        onChange: function() {
									           // kendoConsole.log("event :: change (" + kendo.toString(this.get("selectedDate"), "D") + ")");
									           startChange();
									           //$('#colDt_q').text('Custom');
									           $('#colDt_q option:contains("Custom")').prop('selected', true);
									        }
									    });
									    kendo.bind($("#sd"), viewModelstart);
									
									 var viewModelEnd = kendo.observable({
									        selectedDate: null,
									        isEnabled: true,
									        isVisible: true,
									        onChange: function() {
									           // kendoConsole.log("event :: change (" + kendo.toString(this.get("selectedDate"), "D") + ")");
									           endChange();
									           $('#colDt_q option:contains("Custom")').prop('selected', true);
									        }
									    });
									    kendo.bind($("#ed"), viewModelEnd);
				                   
				                    changecolDt('next7');
				                    startChange();
				                    endChange();
				                    
				                      $('#sd').on("keypress keydown keyup", function(e) {
                          				  e.preventDefault();
           							 });
           							 $('#ed').on("keypress keydown keyup", function(e) {
                          				  e.preventDefault();
           							 });
				               
				                });
				            </script>
                             </div>
                            <div class="taskGoClearBtn">
                                <!--<button type="button" style="width:75px;height:25px;" onclick="searchRecordsWithLoader();">Go</button>-->
                                <button type="button" style="width:75px;height:25px;" onclick="defaultRecordsOnTaskWithLoader();">Clear</button>
                            </div>
                           <div class="newTaskBtnDiv">	
                                <div class="createNewTaskBtn">
	                                	<button type="button" style="width:110px;height:25px;" onclick="showModal('task-header','task-body','plan-footer-taskrelation')">New Task</button>
                                </div>
                            </div>
                           <div class="UserFilterDiv checkBoxGroupTopMargin">
                           		<div >	
	                            	<div class=" floatLeft"><input  type="checkbox" id="cardExpandChk" onclick="expandAllCards()" /></div>&nbsp;<div class="floatLeft" style="padding-bottom:2px">Cards Expanded</div>
	                             </div>
                             <div class="toClear">	
	                                <div class=" floatLeft"><input class="dateFieldTopMargin" type="checkbox" id="hideOverdue" onclick="searchRecordsWithLoader()" /></div>&nbsp;<div class="floatLeft"  style="padding-bottom:2px">Hide Overdue Tasks</div>
	                            </div>
                            </div>
                            <script>
                                var chkTaskUserId = 'yes';
                                var taskuserId = 'default';
                                // this is used to auto fill the user name.
                                $(document).ready(function() { 
                                    $("#demo-input-pre-populated-with-tokenlimit-task").tokenInput($.parseJSON('{!JSENCODE(userDataJSON)}') , {
                                        prePopulate: 
                                        $.parseJSON('{!JSENCODE(defaultUserJson)}') 
                                        ,onAdd: function (item) {
                                            //alert(item.id); 
                                            chkTaskUserId = 'yes';
                                            taskuserId = item.id;
                                            //storeIdAcc(item.id); 
                                        },
                                        onDelete: function (item) {
                                            chkTaskUserId = 'no';
                                            //delIdAcc(item.id);
                                        },
                                        tokenLimit: 1,
                                        propertyToSearch: "name",
                                        resultsFormatter: function(item){ 
                                            return "<li>" + "<img src='" + item.url + "' title='" + item.name+ "' height='25px' width='25px' />" + "<div style='display: inline-block; padding-left: 10px;'>" + item.name+ "</div>" 
                                        },
                                    });
                                });
                            </script>
                        </apex:outputPanel>
                    </div>  
                    
                </div>
               
                <!--  Filter Card view end -->
                
                   <c:ActivityCardView id="taskWorkBenchComponent" />
               
           </div>	
         
            <!-- Classic View Div , Contains the div for button  and  enhancedList -->
            <!--<div id="activityClassicView" >
                
                <apex:enhancedList type="Activity" height="600" />
            </div>  -->
            
            <!-- List view on Activities records-->
            <div id="activityListView">
                <div id="gridActivities"></div>
                <script>
                var viewModel ;
                    $(document).ready(function () {
                         kendoActivities($.parseJSON('{!JSENCODE(activitiesJson)}'));
                    });
                    
                    // kendo grid to display all activites records
                    function kendoActivities(gridData){
                        // new way or style [Using transport]
                        var dataSource = new kendo.data.DataSource({
                            batch: true,   
                            autoSync: true,    
                            transport: {
                                read: function(e) {
                                    dataSource.sync();
                                    e.success(gridData);
                                },
                                update: function(e) {  
                                    var stringifiedData = JSON.stringify(e.data.models); 
                                    var updatedData = parsingModifieData(stringifiedData);
                                    e.success();
                                }
                             },
                            
                             schema: {
                                parse:function (response) {
                                    $.each(response, function (idx, elem) {
                                        if (typeof elem.duedateSort === "string") {
                                             //alert('string --->'+elem.duedateSort);
                                             elem.duedateSort= kendo.parseDate(elem.duedateSort);
                                             //alert(elem.duedateSort);
                                        }
                                        
                                    });
                                    return response;
                                },
                                model: {
                                    id: "id",
                                    fields: {
                                        id: { type: "string", editable: false },
                                        subject : { type: "string", editable: true, validation: { required: true} },
                                        comments : { type: "string", editable: false },
                                        duedate : { type: "datetime", editable: true },
                                        status : { type: "string", editable: true },
                                        isTask: { type: "string", editable: false },
                                        lastActivityDate:{type: "DateTime",editable: false },
                                        priority : { type: "string", editable: true },
                                        createdByName : { type: "string", editable: false },
                                        url : { type: "string", editable: false },
                                        deleteImage : { type: "string", editable: false },
                                        actionClassNameDelete : { type: "string", editable: false},
                                        delayTaskClass: { type: "string", editable: false},
                                        ownerId : {type : "string", editable: false},
                                        title : {type : "string", editable: false},
                                        icon : {type : "string", editable: false},
                                        assignedByName : {type : "string", editable: false},
                                        assignedBy : {type : "string", editable: false},
                                        relatedToName : {type : "string", editable: false},
                                        relatedToId : {type : "string", editable: false},
                                        duedateSort : { type: "date", editable: true },
                                        lastActivityDateSort:{type: "date",editable: false }
                                        
                                    }
                                }
                            },
                            pageSize: 10
                        });
                        viewModel = new kendo.observable({  ds:dataSource });
                        var grid = $("#gridActivities").kendoGrid({
                            
                            dataSource: dataSource,
                            sortable: true,
                            toolbar : ["save","cancel"],
                            editable: true,
                            filterable: true,
                            pageable: true,
                            pageable: {
                              refresh: true,
                              pageSizes: [5,10,25,40]
                            },
                            columns: [
                                {
                                   field: "icon",
                                   title: "Icon",
                                   width: 40,
                                   filterable: false,
                                   template: '<div style="text-align:left;margin-top:5px;"> <img src=/#:icon# /> </div>',
                                   sortable: false
                                },
                                /*{
                                   field: "id",
                                   title: "Action",
                                   width: 60,
                                   filterable: false,
                                   template: "<div> <img src=/#:deleteImage# /> </div>",
                                   sortable: false
                               },*/
                               {
                                   field: "subject",
                                   title: "Subject",
                                   editor: editSubject,
                                   width : 150,
                                   template: "<div title=#:title#><a href=#:url# >#=subject#</a></div>",
                                   
                               },
                               /*{
                                   field: "lastActivityDate",
                                   title: "Last Activity Date",
                                   //format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                                   //editor: dateTimeEditorforActivities,
                                   width: 140,
                                  //template: "<div>#:kendo.toString(( lastActivityDate== null ? '' :lastActivityDate),'{!JSENCODE(dateFormat)}')#</div>"
                               },*/
                               {
                                   field: "lastActivityDateSort",
                                   title: "Last Activity Date",
                                   template: '<div >#:lastActivityDate#</div>',
                                   filterable :{
                        
                                        ui:function(element) {
                                             
                                             var dtF = '{!JSENCODE(dateTimeFormat)}';
                                             var dtFormat = dtF.replace(' a',' tt');
                                             var timeformat = "hh:mm tt";
                                             
                                             if(dtF.indexOf(' a') == -1 ){
                                                timeformat ="HH:mm";
                                             }
                                             element.kendoDateTimePicker({
                                                 timeFormat:timeformat,  
                                             });
                                        }
                                 
                                   },
                                   width: 140,
                               },
                               {
                                   field: "comments",
                                   title: "Comments",
                                   //filterable: false,
                                   editable: false,
                                   width : 150,
                                   //template: '<div  align="center"><img src=/#:commentsImage# title="#=comments#" /></div>',
                                   template : "<div>#=comments#</div> ",
                                   //width: 85
                                   
                               },
                               /*{
                                   field: "duedate",
                                   title: "Due Date",
                                   format:'{0:{!JSENCODE(dateFormat)}}',
                                   editor: dateTimeEditorforActivities,
                                   template: "<div style='height: 25px' class = '#:delayTaskClass#' title=#:title# >#:kendo.toString(( duedate == null ? '' :duedate),'{!JSENCODE(dateFormat)}')#</div>",
                                   width: 110
                               },*/ 
                               {
                                   field: "duedateSort",
                                   title: "Due Date",
                                   format:'{0:{!JSENCODE(dateFormat)}}',
                                   editor: dateTimeEditorforActivities,
                                   template: "<div style='height: 25px' class = '#:delayTaskClass#' title=#:title# >#:duedate#</div>",
                                   filterable :{
                        
                                        ui:function(element) {
                                             
                                             var dtF = '{!JSENCODE(dateTimeFormat)}';
                                             var dtFormat = dtF.replace(' a',' tt');
                                             var timeformat = "hh:mm tt";
                                             
                                             if(dtF.indexOf(' a') == -1 ){
                                                timeformat ="HH:mm";
                                             }
                                             element.kendoDateTimePicker({
                                                 timeFormat:timeformat,  
                                             });
                                        }
                                 
                                   },
                                   width: 110
                               },
                               {
                                   field: "status",
                                   title: "Status",
                                   editor: statusDropDownEditor ,
                                   template: "<div style='overflow:hidden' id='statusDrop' title=#:title#>#:status#</div>",
                                   width: 120
                               },
                               {
                                   field: "priority",
                                   title: "Priority",
                                   editor: priporityDropDownEditor,
                                   template: "<div id='priorityDrop' title=#:title#>#:priority#</div>",
                                   width: 120
                               },
                               {
                                   field: "assignedByName",
                                   title: "Assigned By",
                                   width: 110,
                                   template: '<div class = "grid-user-img"></div><div class = "grid-user-img"><a href="/#:assignedBy#" target="_parent" >#:assignedByName#</a></div>'
                               },
                               {
                                   field: "createdByName",
                                   title: "Assigned To",
                                   width: 110,
                                   template: '<div class = "grid-user-img"></div><div class = "grid-user-img"><a href="/#:ownerId#" target="_parent" >#:createdByName#</a></div>'
                               },
                               {
                                   field: "relatedToName",
                                   title: "Related To",
                                   width: 110,
                                   template: '<div class = "grid-user-img"></div><div class = "grid-user-img"><a href="/#:relatedToId#" target="_parent" >#:relatedToName#</a></div>'
                               }
                           ]
                           
                        }).data("kendoGrid");
                    }
                    
                    // Date editior for Activites
                    function dateTimeEditorforActivities(container, options) {
                        if(options.model.recordAccess || options.model.recordAccess == 'true'){
                            //$('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                            $('<input data-text-field="' + 'duedate' + '" data-value-field="' + 'duedate' + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                                    .appendTo(container)
                                    .kendoDatePicker({});
                        } else {
                            /*$('<output id="dateTimePicker" data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                            .appendTo(container);
                            $('<output id="dateTimePicker" data-text-field="' + 'dueDate' + '" data-value-field="' + 'dueDate' + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                                .appendTo(container);*/
                              $('<div class="'+options.model.delayTaskClass+'">'+options.model.duedate+'</div>')
                              .appendTo(container);
                        }
                    }
                    
                    // Status Dropdown
                    
                    function statusDropDownEditor(container, options) {
                        if(options.model.recordAccess || options.model.recordAccess == 'true'){
                            $('<input   data-text-field="StatusName" data-value-field="StatusName" data-bind="value:' + options.field + '"/>' )
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                width: 50,
                                dataSource: statusValue
                            });
                        } else {
                            /*$('<output type="text" data-text-field="status" data-value-field="status" data-bind="value:' + options.field + '"/>')
                                .appendTo(container);*/
                              $('<div>'+options.model.status+'</div>')
                              .appendTo(container);
                        }
                    }
                    
                    // priority Dropdown
                    function priporityDropDownEditor(container, options) {
                        if(options.model.recordAccess || options.model.recordAccess == 'true'){
                            $('<input data-text-field="PriorityName" data-value-field="PriorityName" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                width: 10,
                                dataSource: priorities
                            });
                        } else {
                            /*$('<output type="text" data-text-field="priority" data-value-field="priority" data-bind="value:' + options.field + '"/>')
                                .appendTo(container);*/
                              $('<div>'+options.model.priority+'</div>')
                              .appendTo(container);
                        }
                    }
                    
                    // Subject editior to display editing based on user permission of record
                    function editSubject(container, options){
                        if(options.model.recordAccess || options.model.recordAccess == 'true'){
                            $('<input type="text" required="required" style="width:120px;" maxlength="255" data-text-field="subject" data-value-field="subject" data-bind="value:' + options.field + '"/>' )
                             .appendTo(container);
                        } else {
                            $('<a href=/'+options.model.id+'>'+options.model.subject+'</a>' )
                            .appendTo(container);
                        }
                    }
                    
                    // Updated function to update plan data.
                    function parsingModifieData(modifiedData){
                        ActivityTab.updateActivities(modifiedData, function(result, event)
                        {    
                            if (event.status)
                            {  
                               var newTaskEvent = removeQuotes(result);
                               var grid = $("#gridActivities").data("kendoGrid");
                               grid.dataSource.data(newTaskEvent);
                               viewModel.ds.data(
                                    viewModel.ds.options.schema.parse(newTaskEvent || []) //just in case thenew data is null
                                );
                            }
                        }, {escape:true});
                    }
                    
                    // remove quotes from json string 
                    function removeQuotes(mystring) {
                            
                        newString = mystring.replace(/&(lt|gt|quot|amp);/g, function (m, p) { 
                            return (p == "lt") ? "<" :(p == "gt") ? ">" :(p == "amp") ? "&" :"\"";
                        });
                        
                        var newJ= $.parseJSON(newString);
                        return newJ;
                    }
                    
                    var  prioritiesDecoded = $('<div/>').html('{!HTMLENCODE(taskPriorityPicklist)}').text();
                    var priorities = JSON.parse( '['+prioritiesDecoded+']')
                    
                    var  statusValueDecoded = $('<div/>').html('{!HTMLENCODE(taskStatusPicklist)}').text();
                    var statusValue  = JSON.parse( '['+statusValueDecoded+']')
                </script>
            </div>
         <!-- Called to invoke controller method from JavaScript -->
            <apex:form >
                <apex:actionFunction name="defaultRecordsOnTask" action="{!dummyMethod}" reRender="taskFilterPanel" oncomplete="setTaskFilter();hideLoader();" />
                <apex:actionFunction name="displayActivityTabEnhanceList" action="{!displayActivityTabEnhanceList}" />
            </apex:form>   
        
        <script>
            
            $(function (){
                changeFooterText();
                $( "#tabs" ).tabs({ active: 0 });
                $('#tabs').css('display','block');
            });
            
            function tabload(){
                $( "#tabs" ).tabs({ active: 1 });
            }
            // It alternates the view of task .
            function switchview()
            {    
                // alternates the display - displays the List view
                /*if( document.getElementById('activityCardView').style.display == 'block' )
                {
                    
                    document.getElementById('activityListView').style.display = 'block';
                    document.getElementById('activityCardView').style.display = 'none'
                }
                // alternates the display - displays the Card view
                else
                {
                    
                    document.getElementById('activityCardView').style.display = 'block';
                    document.getElementById('activityListView').style.display = 'none';
                    
                }  */
                displayActivityTabEnhanceList();
                
            }
        
            // call this method on click of go. 
            function searchRecordsWithLoader(){
                searchRecordsFromGo();
            }
            // calls this method on click of clear
            function defaultRecordsOnTaskWithLoader(){
                showLoader();
                defaultRecordsOnTask();
            }
            
            //  calls this methods oncomplete of clear 
            function setTaskFilter(){
                document.getElementById('cardExpandChk').checked=false;
                defaultRecords();
            }
            $(document).ready(function () {
                hideLoaderAndFade();
            });
            //Code to disable keybord navigation Jquery ui tabs
                    $.widget( "ui.tabs", $.ui.tabs, {
                        options: {  
                          keyboard: true
                        },
                        _tabKeydown: function(e) {
                          if(this.options.keyboard) {
                            this._super( '_tabKeydown' );
                          } else {
                            return false;
                          }
                        }
                    });
        </script>
    </div>
</apex:page>