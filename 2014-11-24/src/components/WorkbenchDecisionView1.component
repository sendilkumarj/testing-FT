<apex:component controller="WorkbenchDecisionView" allowDML="true" >
    <style> 
        .important_column_body{width:218px;height:466px;border:1px solid #ccc;-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;//overflow-y:hidden;padding-right:6px!important;padding-bottom:0!important;padding-left:0}
    </style>
    <apex:stylesheet value="{!$Page.cardStyles}" />
    <apex:includeScript value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.jqueryCustomScrollbar, '/jquery-custom-scrollbar-0.5.5/jquery.custom-scrollbar.css')}"/>
 
     <script>   
       
                                                       
                                                        var columnLoadNumber = 0;
                                                        var taskstatusPicklistData; 
                                                        var incall = false;
                                                        // Show preloader
                                                        showLoader();
                                                         // remove quotes from json string  
                                                        function removeQuotes(mystring) { 
                                                            newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
                                                                return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
                                                            });
                                                            
                                                            var newJ= $.parseJSON(newString);
                                                            //var  newJ = eval ("(" + newString+ ")");
                                                            return newJ;
                                                        }
                                                        //Enable jqury scrollbar
                                                        function customScroll(count){
                                                            $('#'+count+'.important_column_body').customScrollbar({
                                                                  skin: "default-skin",
                                                                  hScroll: false                                                             
                                                             });
                                                         }  
                                                  
                                                      
     
                                                        var columnTimeLowerBound ;   // Not used 
                                                        var columnTimeUpperBound;    // Not used
                                                        var cardTypes = 'APDT';      // Initialy load all type of cards
                                                      
                                                        timeMillisNow = {!nowinmilliseconds};  //set the current time
                                                        // Set column data for lazy loading   for later use
                                                         var columns = [   
                                                                      {done:'',columnId:'bind0',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'Draft'},
                                                                      {done:'',columnId:'bind1',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'Share'},
                                                                      {done:'',columnId:'bind2',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'Propose'},
                                                                      {done:'',columnId:'bind3',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'Decide'},
                                                                      {done:'',columnId:'bind4',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'Execute'},
                                                                      {done:'',columnId:'bind3',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'Evaluate'},
                                                                      {done:'',columnId:'bind4',columnTimeLowerBound:'',columnTimeUpperBound:'',dataSetUpperBound:{!nowinmilliseconds},viewModel:'',phase:'close'}
                                                                     ];
            
        
                                                           
                                                        var columnsRestore = columns.slice(0);  
                                                        
                                                        
                                                       	function loadCards(searchDecisionText,timeFrame,roleOfUser,phases,status,userId,loadall,cardTypes )
                                                        {   
                                                        columnLoadNumber = 0;   
                                                        kendo.unbind($("#bind0"));
                                                        kendo.unbind($("#bind1"));
                                                        kendo.unbind($("#bind2"));
                                                        kendo.unbind($("#bind3"));
                                                        kendo.unbind($("#bind4"));
                                                        kendo.unbind($("#bind5"));
                                                        //Call remote method to fill Overdue column
                                                        
                                                        if( phases == 'All' || phases == 'Draft')
                                                        WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,'Draft',status,userId,loadall,cardTypes,columns[0].dataSetUpperBound,function(result,event){ 
                                                               var  cardsJson =  removeQuotes(result);
                                                                //Create  Kendo Observable
                                                                cardsJson.importantWrapperList.sort(function(a, b){
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                columns[0].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList
                                                                 });  
                                                                  console.log(columns[1].phase)
                                                                console.log(cardsJson.phase)
                                                                console.log(cardsJson.importantWrapperList)
                                                                  
                                                                // Set the returned paramets for  this column 
                                                                columns[0].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                    columns[0].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[0].columnTimeLowerBound = cardsJson.columnTimeLowerBound;
                                                                columns[0].done = cardsJson.done;  
                                                                // Bind it it to this column                                                             
                                                                kendo.bind($("#bind0"), columns[0].viewModel);         
                                                                //Update scrollbar
                                                                customScroll(0)     
                                                                //Close preloder and fade once all remote call finished
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){
                                                                    hideLoaderAndFade();
                                                                }    
                                                        },{ buffer: false, escape: false, timeout: 30000 })  
                                                      //Call remote method to fill Today column
                                                         
                                                         
                                                        
                                                        WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,( phases == 'All' || phases == 'Share' ?'Share':'1'),status,userId,loadall,cardTypes,columns[1].dataSetUpperBound,function(result,event){ 
                                                                //Create kendo Observable
                                                                var  cardsJson =  removeQuotes(result);
                                                                cardsJson.importantWrapperList.sort(function(a, b){
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                columns[1].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList 
                                                                });     
                                                                
                                                                
                                                                
                                                                
                                                                // Set parameters for tis column
                                                                columns[1].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                columns[1].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[1].columnTimeLowerBound = cardsJson.columnTimeLowerBound;                                                               
                                                                columns[1].done = cardsJson.done;   
                                                                // Bind MVVM to this column                                                            
                                                                kendo.bind($("#bind1"), columns[1].viewModel);  
                                                                //Update scrollbar
                                                                customScroll(1);
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){
                                                                    hideLoaderAndFade();
                                                                }                    
                                                         },{ buffer: false, escape: false, timeout: 30000 })  
                                                             
                                                             if( phases == 'All' || phases == 'Propose')
                                                             WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,( phases == 'All' || phases == 'Propose' ?'Propose':'1'),status,userId,loadall,cardTypes,columns[2].dataSetUpperBound,function(result,event){ 
                                                                var  cardsJson =  removeQuotes(result);
                                                                // Create kendo observable
                                                                cardsJson.importantWrapperList.sort(function(a, b){
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                columns[2].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList 
                                                                });     
                                                                
                                                                console.log(cardsJson.importantWrapperList);
                                                                //Set parametrs for this column
                                                                columns[2].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                columns[2].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[2].columnTimeLowerBound = cardsJson.columnTimeLowerBound;                                                               
                                                                columns[2].done = cardsJson.done; 
                                                                // Bind MVVM to this column                                                              
                                                                kendo.bind($("#bind2"), columns[2].viewModel);
                                                                //Update scrollbar 
                                                                customScroll(2);
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){
                                                                    hideLoaderAndFade();
                                                                }                 
                                                        },{ buffer: false, escape: false, timeout: 30000 })  
                                                            if( phases == 'All' || phases == 'Decide')

                                                            WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,( phases == 'All' || phases == 'Decide' ?'Decide':'1'),status,userId,loadall,cardTypes,columns[3].dataSetUpperBound,function(result,event){ 
                                                                //Create kendo observable
                                                                var  cardsJson =  removeQuotes(result);
                                                                cardsJson.importantWrapperList.sort(function(a, b){
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                
                                                                columns[3].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList 
                                                                }); 
                                                                // Set parameters for this column      
                                                                columns[3].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                columns[3].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[3].columnTimeLowerBound = cardsJson.columnTimeLowerBound;                                                               
                                                                columns[3].done = cardsJson.done;    
                                                                // Bind MVVM to this column                                                           
                                                                kendo.bind($("#bind3"), columns[3].viewModel);   
                                                                //  Update scrollbar  
                                                                customScroll(3);
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){
                                                                    hideLoaderAndFade();
                                                                }                    
                                                        },{ buffer: false, escape: false, timeout: 30000 })  
                                                         if( phases == 'All' || phases == 'Execute')

                                                           WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,( phases == 'All' || phases == 'Execute' ?'Execute':'1'),status,userId,loadall,cardTypes,columns[4].dataSetUpperBound,function(result,event){ 
                                                                var  cardsJson =  removeQuotes(result);
                                                                //create kendo Observable
                                                                cardsJson.importantWrapperList.sort(function(a, b){
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                columns[4].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList 
                                                                }); 
                                                                //Update paramets for this column    
                                                                columns[4].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                columns[4].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[4].columnTimeLowerBound = cardsJson.columnTimeLowerBound;                                                               
                                                                columns[4].done = cardsJson.done;                                                               
                                                                kendo.bind($("#bind4"), columns[4].viewModel);
                                                                customScroll(4);
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){ 
                                                                    hideLoaderAndFade();
                                                                }                  
                                                         },{ buffer: false, escape: false, timeout: 30000 }) 
                                                         //Remote call for  No deadline column
                                                           if( phases == 'All' || phases == 'Evaluate')
                                                           WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,( phases == 'All' || phases == 'Evaluate' ?'Evaluate':'1'),status,userId,loadall,cardTypes,columns[5].dataSetUpperBound,function(result,event){ 
                                                                var  cardsJson =  removeQuotes(result);
                                                                //create kendo Observable
                                                                cardsJson.importantWrapperList.sort(function(a, b){
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                columns[5].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList 
                                                                }); 
                                                                //Update paramets for this column    
                                                                columns[5].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                columns[5].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[5].columnTimeLowerBound = cardsJson.columnTimeLowerBound;                                                               
                                                                columns[5].done = cardsJson.done;                                                               
                                                                kendo.bind($("#bind5"), columns[5].viewModel);
                                                                customScroll(5);
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){ 
                                                                    hideLoaderAndFade();
                                                                }                  
                                                         },{ buffer: false, escape: false, timeout: 30000 }) 
                                                         //Remote call for  No deadline column
                                                           if( phases == 'All' || phases == 'Close')
                                                           WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,( phases == 'All' || phases == 'Close' ?'Close':'1'),status,userId,loadall,cardTypes,columns[6].dataSetUpperBound,function(result,event){ 
                                                                var  cardsJson =  removeQuotes(result);
                                                                //create kendo Observable
                                                                cardsJson.importantWrapperList.sort(function(a, b){  
                                                                    if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                                                    return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                                                                });
                                                                columns[6].viewModel = kendo.observable({
                                                                     cards:  cardsJson.importantWrapperList 
                                                                }); 
                                                                //Update paramets for this column    
                                                                columns[6].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                                                                columns[6].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                                                                columns[6].columnTimeLowerBound = cardsJson.columnTimeLowerBound;                                                               
                                                                columns[6].done = cardsJson.done;                                                               
                                                                kendo.bind($("#bind6"), columns[6].viewModel);
                                                                customScroll(6);
                                                                columnLoadNumber++;
                                                                if( columnLoadNumber == 6){ 
                                                                    hideLoaderAndFade();
                                                                }                  
                                                         },{ buffer: false, escape: false, timeout: 30000 })  
                                                        
                                                        }    
                                                         
                                                         loadCards('','1 Week','All','All','All',userId,false,cardTypes) 
                                                         function showScroll(x) {
														     				$(x).find('.thumb').show()
														 }
														 function hideScroll(x) {  
														     $(x).find('.thumb').hide()
														 } 
    </script>     
    <apex:outputPanel id="decisionView">
    
    <script>
        function showDecisionDetails(ele1,ele2,ele3){
            $('#'+ele1).css('display','block');
            $('#'+ele2).css('display','block');
            $('#'+ele3).css('display','none');
        }
        function hideDecisionDetails(ele1,ele2,ele3){
            $('#'+ele1).css('display','none');
            $('#'+ele2).css('display','none');
            $('#'+ele3).css('display','block');
        }
        
        function hideFade(){
            $('.preloader').css('display','none');
            $('.bg-fade').css('display','none');
        }
        
        function showBottonDecision(count){
        
            if(document.getElementById("cardBottomDecision"+count).style.display=="none"){
                    //$( containerBottom ).slideDown( "slow" );
                    document.getElementById("cardBottomDecision"+count).style.display="block";
                    document.getElementById("dropBtnDecision"+count).style.backgroundPosition="-64px 0px";
                   if(document.getElementById("colorDivCurve"+count)!=null){
                        document.getElementById("colorDiv"+count).style.display="block";
                        document.getElementById("colorDivCurve"+count).style.display="none";
                     }
            }else{
                document.getElementById("cardBottomDecision"+count).style.display="none";
                document.getElementById("dropBtnDecision"+count).style.backgroundPosition="-64px -8px";
                if(document.getElementById("colorDiv"+count)!=null){
                    document.getElementById("colorDiv"+count).style.display="none";
                    document.getElementById("colorDivCurve"+count).style.display="block";
                 }
            }
        }
    </script>
    
    <table cellspacing = "0" cellpadding = "0" class = "workbench-tbl">
        <tr>
            <td colspan="7">
                <img src = "{!URLFOR($Resource.Images, 'decision/image-decisionPhases-1278x52.png')}" />
            </td> 
        </tr>
        <tr> 
            <!-------------- Draft --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="0"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind0" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Draft --------------->
            <!-------------- Share --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="1"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind1" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Share --------------->
            <!-------------- Propose --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="2"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind2" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Propose --------------->
            <!-------------- Decide --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="3"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind3" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Decide --------------->
            <!-------------- Execute --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="4"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind4" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Execute --------------->
            <!-------------- Evaluate --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="5"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind5" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Evaluate --------------->
            <!-------------- Close --------------->
            <!-- ---  important_column_body class will make  column scrollable this applicable for all important_column_body columns  --> 
            <td class = "workbench-cell important_column_body" id="6"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                <!-- - This div will hold kendo observable MVVM applicable for bind0 - bind4 ids  data-template is the template used from cards html  databind source is the datasource  -->
                <div id="bind6" data-template="decision-template" data-bind="source: cards"  onmouseover="showScroll(this)" onmouseout="hideScroll(this)">
                </div>                                
            </td>
            <!-------------- End Close --------------->
        </tr>
    </table>
    
    </apex:outputPanel>
    <apex:outputPanel id="showstate"/>  
    <apex:form >  
   
</apex:form>
<script>
  $(".important_column_body").customScrollbar({onCustomScroll:function (event, scrollData) { 
                  //Should not call if there is already a call.. and if the column is filled with all cards avaliable
                
                  if(!incall && columns[$(this).attr('id')].done != 'done') {  
                    incall = true;
                       
                     var searchDecisionText = $('#searchDecisionText').val();
                     var timeFrame = $('#timeFrame').val(); 
                     var roleOfUser = $('#roleOfUser').data('kendoDropDownList').value().toString();
                     var phases = $('#decisionPhases').data('kendoDropDownList').value().toString();
                     var status =  $('#decisionStatus').data('kendoDropDownList').value().toString();
                     userId =  $('#userName').data('kendoMultiSelect').value().toString();
                       WorkbenchDecisionView.decisionCards(searchDecisionText,timeFrame,roleOfUser,columns[$(this).attr('id')].phase,status,userId,false,cardTypes,columns[$(this).attr('id')].dataSetUpperBound,function(result,event){ 
                            var  cardsJson =  removeQuotes(result); 
                            //Set column parameters
                            cardsJson.importantWrapperList.sort(function(a, b){
                                if(a.lastmodifiedTime == b.lastmodifiedTime) return 0;
                                return a.lastmodifiedTime < b.lastmodifiedTime? 1: -1;
                            });
                            console.log(columns)
                            console.log(cardsJson.columnId)
                            console.log(columns[cardsJson.columnId].dataSetUpperBound)
                            console.log(cardsJson)
                            columns[cardsJson.columnId].columnTimeUpperBound = cardsJson.columnTimeUpperBound;        
                            columns[cardsJson.columnId].dataSetUpperBound    = cardsJson.dataSetUpperBound;        
                            columns[cardsJson.columnId].columnTimeLowerBound = cardsJson.columnTimeLowerBound; 
                            columns[cardsJson.columnId].done = cardsJson.done; 
                            //Push each card into current column                                                             
                            for(var i=0;i< cardsJson.importantWrapperList.length;i++)
                           
                            if(cardsJson.phase == 'Draft')
                            columns[0].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            if(cardsJson.phase == 'Share')
                            columns[1].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            if(cardsJson.phase == 'Propose')
                            columns[2].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            if(cardsJson.phase == 'Decide')
                            columns[3].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            if(cardsJson.phase == 'Execute')
                            columns[4].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            if(cardsJson.phase == 'Evaluate')
                            columns[5].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            if(cardsJson.phase == 'Close')
                            columns[6].viewModel.cards.push(cardsJson.importantWrapperList[i]) 
                            
                            //resize scrollbar
                            $('#'+cardsJson.columnId+'.important_column_body').customScrollbar("resize", true) 
                            //set incall as false
                            incall= false;      
                        },{ buffer: false, escape: false, timeout: 30000 }) 
                }  
            }});



</script>                        
</apex:component>