<apex:component controller="KanbanBoardAndCards" id="workBenchTaskView" allowDML="true">

    <apex:stylesheet value="{!$Page.cardStyles}" /> 

    <apex:outputPanel id="kanBanBoardForm" >
           
        <script>
        var id;
        var priorirty;
        var dropdownlist;
        var taskStatus;
        var ddl;
            ListSize = '{!kanBanTaskWrapperList.size}';
          
            function getPopupDetailsWithLoader(e,taskId,recAccess,chatPermission){
               
                showLoader();
                getTaskDetails(taskId,recAccess,chatPermission);
                 e.preventdefault();
                return false;
            }
            taskStatus  =  JSON.parse( '['+$('<div/>').html('{!HTMLENCODE(taskStatusPicklist)}').text() +']');
          function callForIndex(status,i,count, readOnly){
            var index ;
            if(status == 'Not Started')
                index = 0;
            else if (status == 'In Progress') {
                index = 1;
            }
            else if (status == 'Waiting on someone else') {
                index = 2;
            }
            else if (status == 'Deferred') {
                index = 3;
            }
            else if (status == 'Completed') {
                index = 4;
            }
            else if (status == 'Rejected') {
                index = 5;
            }
            else if (status == 'N/A') {
                index = 6;
            }
            //  optionLabel: status,value:status,
              ddl = $("#statusDropDownId"+count).kendoDropDownList({                                                                     
                      dataTextField: "StatusName",
                      dataSource: taskStatus,
                      change: onChange,
                      open: function(e) {
                          readAccess(readOnly);
                      },
                      index: index
                });
           }
           
           function readAccess(readOnly){
                if(!readOnly){
                    ddl.readonly(ddl.element.prop("readonly"));
                }
            }
           
           function onChange(e) {   
                 priorirty=this.text();
                  $(this).blur();
             }
            
           function onChangeCall(recId,e) {
                id=recId;
                calRemote();
            }
                        
            function calRemote(){
             KanbanBoardAndCards.getTaskById( id,priorirty,function(result, event){          
                       if (event.status && event.result) { 
                             searchRecords();
                       } else {
                     }
                 }, {escape:true}); 
                 
            }
            
            //Scroll Bar script
            
             $(".container").customScrollbar({
              skin: "default-skin", 
              hScroll: false
              
              });
         </script>
            
        <table border="0" width="1120px" cellspacing = "0" cellpadding = "0" id="totalTab">
            <tr>
                <td align="center" class="todo-td" width="210px">
                    <div class="todo-div">
                        To Do
                    </div>
                </td>
                <td align="center" class="doing-td" width="436px">
                    <div class="doing-div">
                        Doing
                    </div>
                </td>
                <td align="center" class="done-td" width="432px">
                    <div class="done-div">
                        Done 
                    </div>
                </td>
            </tr>
            <tr id="dragContainer">
                <apex:variable value="{!0}" var="count"/>
                <td class="drop" id="todo">
                <!-- scroll bar-->
                   <div class="container default-skin" style="height: 300px; width: 200px;">  
                    <apex:repeat value="{!kanBanTaskWrapperList}" id="kanBanBoardPanel" var="task">
                        <apex:outputPanel rendered="{!task.kanbanTask.status == 'Not Started'}">
                            <div class="{!if(task.recordAccess,'cardContainer','noDrop')}" count="{!count}" id="{!task.Kanbantask.Id}">
                                <div class="taskCardTop"> </div> <!-- blue top border-->
                                <div class="taskCardIcon">&nbsp;</div>
                                <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'High',true,false)}">
                                    <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button -->
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                    <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'Low',true,false)}">
                                    <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button --> 
                                </apex:outputPanel>
                                <div class="accessLock" ><img src="/{!task.lockImg}" class="lock-icon"/></div>
                                <div id="dropBtn{!count}" class="viewDropBtn" onclick="showBotton('{!count}')"></div>
                                <div class="viewCardText fontWeightBold">
                                    <a href="/{!task.kanbanTask.id}" onclick=" showLoader();getTaskDetails('{!task.kanbanTask.id}','{!task.recordAccess}','{!task.chatterPermission}');return false;">{!task.kanbanTask.Subject}</a>
                                </div>
                                <div class="dateBtns cardCellTopLine">
                                    <div class="dueDate">
                                        <div class="cardTitleText fontWeightBold commonCardPadding">Due Date</div> 
                                        <div class="fontCardContentText fontWeightBold secondLineTextPadding"><apex:outputField value="{!task.kanbanTask.ActivityDate}" /></div>
                                    </div>
                                    <div class="deadLine">
                                        <div class="cardTitleText fontWeightBold commonCardPadding">Deadline</div> 
                                        <div class="fontCardContentText fontWeightBold secondLineTextPadding" style="{!if(task.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}">{!task.deadlineNum}&nbsp;<apex:outputText value="days" rendered="{!if(task.deadlineNum != null,true,false)}" /></div> 
                                    </div>
                                </div>
                                <div class="toClear"> 
                                    <div class="cardBottom cardCellTopLine" id="cardBottom{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                    <div class="qualityDiv toClear">
                                    <div class="cardTitleText fontWeightBold commonCardPadding">Status</div>    
                                    
                                    <div class="secondLineTextPadding statusInput" >
                                         <input data-role="dropdownlist" id="statusDropDownId{!count}"  data-text-field="StatusName"    data-value-field="StatusValue"   data-bind="source: taskStatus, value:{!task.kanbanTask.status}" onChange="onChangeCall('{!task.kanbanTask.id}',event);"></input>                                        
                                        </div>                                              
                                    </div>
                                   <script>
                                        callForIndex('{!task.kanbanTask.Status}','{!task.kanbanTask.Status}',{!count},{!task.recordAccess})
                                        
                                    </script>
                                    <div class="cardCellTopLine">
                                        <div id="relationBtn{!count}" class="relationBtn" onclick="showContents('relationBtn{!count}','relationTab{!count}','commentBtn{!count}','assignBtn{!count}','commentsTab{!count}','assignTab{!count}')"><div class="imgSizeTaskCardTab" style="background-position: -90px 0px;"></div></div>
                                        <div id="commentBtn{!count}" class="commentBtn" onclick="showContents('commentBtn{!count}','commentsTab{!count}','relationBtn{!count}','assignBtn{!count}','relationTab{!count}','assignTab{!count}')" ><div class="imgSizeTaskCardTab"  ></div></div>
                                        <div id="assignBtn{!count}" class="assignBtn" onclick="showContents('assignBtn{!count}','assignTab{!count}','relationBtn{!count}','commentBtn{!count}','relationTab{!count}','commentsTab{!count}')"><div class="imgSizeTaskCardTab" style="background-position: -106px 0px;"  ></div>   </div>
                                        <div class="openState">
                                            <div class="relationTab" id="relationTab{!count}">  <!-- relational drop down to hide / unhide -->
                                                <div class="selectedContent">
                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Related to</div>
                                                    <div class="cardTitleText fontWeightBold commonCardPadding" ><div style=""><a class="task-title" href="/{!task.relatedToId}" ><apex:outputText value="{!task.relatedTo}" style="font-size: 11px !important;"/></a></div></div>
                                                </div>
                                            </div> 
                                            <div class="commentsTab" id="commentsTab{!count}" style="display:none"> <!-- comments drop down to hide / unhide -->
                                                <div class="selectedContent ">
                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Comments</div>
                                                    <div class="approvalDescriptionStatement fontWeightBold"><div style=""><apex:outputText value="{!task.comments}" /></div></div>
                                                </div>
                                            </div> 
                                            <div class="assignTab" id="assignTab{!count}" style="display:none"> <!-- assigned drop down to hide / unhide -->
                                                <div class="selectedContent">
                                                    <div>
                                                        <div class="assignedby-task">
                                                            <div  class="cardTitleText fontWeightBold ">Assigned By</div>
                                                            <div class="assignedby-task-div">
                                                                <div class="floatLeft"><img src="{!task.userAssignedImgUrl}" class="assignedby-img" /></div>
                                                                <div style="width:70%" class="floatLeft commonCardPadding">
                                                                    <div style="width:100%;padding-bottom:5px;" class="fontCardContentText fontWeightBold">{!task.userAssignedName}  </div>
                                                                    <div class="fontCardContentText fontWeightBold">{!task.userAssignedDept}</div>
                                                                </div> 
                                                            </div> 
                                                        </div>
                                                        <div class="assignedto-task">
                                                            <div style="margin-bottom:5px;" class="cardTitleText fontWeightBold floatRight">Assigned To</div>
                                                            <div class="assignedto-task-div toClear">
                                                                <div class="floatRight"><img src="{!task.userAssignImgUrl}"  class="assignedto-img" /></div>
                                                                <div style="width:70%" class="floatLeft">
                                                                    <div class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!task.userAssigneeName}</div>
                                                                    <div style="padding-top:5px" class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!task.userAssigneeDept}</div>
                                                                </div>
                                                            </div> 
                                                        </div>
                                                    </div>
                                                    <div style="clear:both" ></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>
                        </apex:outputPanel>
                        <apex:variable var="count" value="{!count+ 1}"/>
                    </apex:repeat>
                    </div>   <!-- end of scrollbar -->
                  </td>
                  <td  class="drop" id="doing">
                     <div class="container default-skin" style="height: 300px; width: 435px;"> 
                     <apex:variable var="cardcount" value="{!0}" />  
                      <apex:repeat value="{!kanBanTaskWrapperList}" id="kanBanBoardPanel1" var="task">
                        <apex:outputPanel rendered="{!And(task.kanbanTask.status != 'Not Started',Not(task.kanbanTask.isClosed))}">
                            <div class="{!if(task.recordAccess,'cardContainer','noDrop')}" count="{!count}" id="{!task.Kanbantask.Id}" style="float:{!IF(MOD(cardcount,2)==1,'right','left')};margin-left: 15px;margin-right:5px;margin-bottom:0px;">   
                               <apex:variable var="cardcount" value="{!cardcount+1}" />
                               <div class="taskCardTop"> </div> <!-- blue top border-->  
                               <div class="taskCardIcon">&nbsp;</div>
                               <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'High',true,false)}">
                                   <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button -->
                               </apex:outputPanel>
                               <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                   <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                               </apex:outputPanel>
                               <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'Low',true,false)}">
                                   <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button --> 
                               </apex:outputPanel>
                               <div class="accessLock" ><img src="/{!task.lockImg}" class="lock-icon"/></div>
                               <div id="dropBtn{!count}" class="viewDropBtn" onclick="showBotton('{!count}')"></div>
                               <div class="viewCardText fontWeightBold">
                                   <a href="/{!task.kanbanTask.id}" onclick=" showLoader();getTaskDetails('{!task.kanbanTask.id}','{!task.recordAccess}','{!task.chatterPermission}');return false;">{!task.kanbanTask.Subject}</a>
                               </div>
                               <div class="dateBtns cardCellTopLine">
                                   <div class="dueDate">
                                       <div class="cardTitleText fontWeightBold commonCardPadding">Due Date</div> 
                                       <div class="fontCardContentText fontWeightBold secondLineTextPadding"><apex:outputField value="{!task.kanbanTask.ActivityDate}" /></div>
                                   </div>
                                   <div class="deadLine">
                                       <div class="cardTitleText fontWeightBold commonCardPadding">Deadline</div> 
                                       <div class="fontCardContentText fontWeightBold secondLineTextPadding" style="{!if(task.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}">{!task.deadlineNum}&nbsp;<apex:outputText value="days" rendered="{!if(task.deadlineNum != null,true,false)}" /></div> 
                                   </div>
                               </div>
                               <div class="toClear"> 
                                   <div class="cardBottom cardCellTopLine" id="cardBottom{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                   <div class="qualityDiv toClear">
                                   <div class="cardTitleText fontWeightBold commonCardPadding">Status</div>    
                                   
                                      <div class="secondLineTextPadding statusInput" >
                                         <input data-role="dropdownlist" id="statusDropDownId{!count}"  data-text-field="StatusName"    data-value-field="StatusValue"   data-bind="source: taskStatus, value:{!task.kanbanTask.status}" onChange="onChangeCall('{!task.kanbanTask.id}',event);"></input>                                        
                                       </div>                                              
                                   </div>
                                  <script>
                                       callForIndex('{!task.kanbanTask.Status}','{!task.kanbanTask.Status}',{!count},{!task.recordAccess})
                                       
                                   </script>
                                   <div class="cardCellTopLine">
                                       <div id="relationBtn{!count}" class="relationBtn" onclick="showContents('relationBtn{!count}','relationTab{!count}','commentBtn{!count}','assignBtn{!count}','commentsTab{!count}','assignTab{!count}')"><div class="imgSizeTaskCardTab" style="background-position: -90px 0px;"></div></div>
                                       <div id="commentBtn{!count}" class="commentBtn" onclick="showContents('commentBtn{!count}','commentsTab{!count}','relationBtn{!count}','assignBtn{!count}','relationTab{!count}','assignTab{!count}')" ><div class="imgSizeTaskCardTab"  ></div></div>
                                       <div id="assignBtn{!count}" class="assignBtn" onclick="showContents('assignBtn{!count}','assignTab{!count}','relationBtn{!count}','commentBtn{!count}','relationTab{!count}','commentsTab{!count}')"><div class="imgSizeTaskCardTab" style="background-position: -106px 0px;"  ></div>   </div>
                                       <div class="openState">
                                           <div class="relationTab" id="relationTab{!count}">  <!-- relational drop down to hide / unhide -->
                                               <div class="selectedContent">
                                                   <div class="cardTitleText fontWeightBold commonCardPadding">Related to</div>
                                                   <div class="cardTitleText fontWeightBold commonCardPadding" ><div style=""><a class="task-title" href="/{!task.relatedToId}" ><apex:outputText value="{!task.relatedTo}" style="font-size: 11px !important;"/></a></div></div>
                                               </div>
                                           </div> 
                                           <div class="commentsTab" id="commentsTab{!count}" style="display:none"> <!-- comments drop down to hide / unhide -->
                                               <div class="selectedContent ">
                                                   <div class="cardTitleText fontWeightBold commonCardPadding">Comments</div>
                                                   <div class="approvalDescriptionStatement fontWeightBold"><div style=""><apex:outputText value="{!task.comments}" /></div></div>
                                               </div>
                                           </div> 
                                           <div class="assignTab" id="assignTab{!count}" style="display:none"> <!-- assigned drop down to hide / unhide -->
                                               <div class="selectedContent">
                                                   <div>
                                                       <div class="assignedby-task">
                                                           <div  class="cardTitleText fontWeightBold ">Assigned By</div>
                                                           <div class="assignedby-task-div">
                                                               <div class="floatLeft"><img src="{!task.userAssignedImgUrl}" class="assignedby-img" /></div>
                                                               <div style="width:70%" class="floatLeft commonCardPadding">
                                                                   <div style="width:100%;padding-bottom:5px;" class="fontCardContentText fontWeightBold">{!task.userAssignedName}  </div>
                                                                   <div class="fontCardContentText fontWeightBold">{!task.userAssignedDept}</div>
                                                               </div> 
                                                           </div> 
                                                       </div>
                                                       <div class="assignedto-task">
                                                           <div style="margin-bottom:5px;" class="cardTitleText fontWeightBold floatRight">Assigned To</div>
                                                           <div class="assignedto-task-div toClear">
                                                               <div class="floatRight"><img src="{!task.userAssignImgUrl}"  class="assignedto-img" /></div>
                                                               <div style="width:70%" class="floatLeft">
                                                                   <div class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!task.userAssigneeName}</div>
                                                                   <div style="padding-top:5px" class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!task.userAssigneeDept}</div>
                                                               </div>
                                                           </div> 
                                                       </div>
                                                   </div>
                                                   <div style="clear:both" ></div>
                                               </div>
                                           </div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           </div>
                       </apex:outputPanel>    
                       <apex:variable var="count" value="{!count+ 1}"/>
                       </apex:repeat>
                       </div>  <!--  End of scrollbar  -->
                    </td>
                    <td  class="drop" id="done">  
                      <div class="container default-skin" style="height: 300px; width: 435px;"> 
                      <apex:variable var="cardcount" value="{!0}" />  
                        <apex:repeat value="{!kanBanTaskWrapperList}" id="kanBanBoardPanel2" var="task">
                            <apex:outputPanel rendered="{!task.kanbanTask.isClosed}">
                                <div class="{!if(task.recordAccess,'cardContainer','noDrop')}" count="{!count}" id="{!task.Kanbantask.Id}" style="float:{!IF(MOD(cardcount,2)==1,'right','left')};margin-left: 15px;margin-right:5px;margin-bottom:0px;">
                                <apex:variable var="cardcount" value="{!cardcount+1}" />  
                                <div class="taskCardTop"> </div> <!-- blue top border-->
                                <div class="taskCardIcon">&nbsp;</div>
                                <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'High',true,false)}">
                                    <div class="fontStyle fontWeightBold viewHighBtn">HIGH</div> <!-- Priority Button -->
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'Normal',false,false)}"> <!-- both the values made false to hide when priority is normal -->
                                    <div class="fontStyle fontWeightBold viewNormalBtn">Normal</div> <!-- Priority Button -->
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!if(task.kanbanTask.Priority == 'Low',true,false)}">
                                    <div class="fontStyle fontWeightBold viewLowBtn">Low</div> <!-- Priority Button --> 
                                </apex:outputPanel>
                                <div class="accessLock" ><img src="/{!task.lockImg}" class="lock-icon"/></div>
                                <div id="dropBtn{!count}" class="viewDropBtn" onclick="showBotton('{!count}')"></div>
                                <div class="viewCardText fontWeightBold">
                                    <a href="/{!task.kanbanTask.id}" onclick=" showLoader();getTaskDetails('{!task.kanbanTask.id}','{!task.recordAccess}','{!task.chatterPermission}');return false;">{!task.kanbanTask.Subject}</a>
                                </div>
                                <div class="dateBtns cardCellTopLine">
                                    <div class="dueDate">
                                        <div class="cardTitleText fontWeightBold commonCardPadding">Due Date</div> 
                                        <div class="fontCardContentText fontWeightBold secondLineTextPadding"><apex:outputField value="{!task.kanbanTask.ActivityDate}" /></div>
                                    </div>
                                    <div class="deadLine">
                                        <div class="cardTitleText fontWeightBold commonCardPadding">Deadline</div> 
                                        <div class="fontCardContentText fontWeightBold secondLineTextPadding" style="{!if(task.deadlineState=='Positive','color:#66B02D','color:#FF3C03')}">{!task.deadlineNum}&nbsp;<apex:outputText value="days" rendered="{!if(task.deadlineNum != null,true,false)}" /></div> 
                                    </div>
                                </div>
                                <div class="toClear"> 
                                    <div class="cardBottom cardCellTopLine" id="cardBottom{!count}" style="display:none"> <!-- bottom of card hide / unhide -->
                                    <div class="qualityDiv toClear">
                                    <div class="cardTitleText fontWeightBold commonCardPadding">Status</div>    
                                    
                                    <div class="secondLineTextPadding statusInput" >
                                         <input data-role="dropdownlist" id="statusDropDownId{!count}"  data-text-field="StatusName"    data-value-field="StatusValue"   data-bind="source: taskStatus, value:{!task.kanbanTask.status}" onChange="onChangeCall('{!task.kanbanTask.id}',event);"></input>                                        
                                        </div>                                              
                                    </div>
                                   <script>
                                        callForIndex('{!task.kanbanTask.Status}','{!task.kanbanTask.Status}',{!count},{!task.recordAccess})
                                    </script>
                                    <div class="cardCellTopLine">
                                        <div id="relationBtn{!count}" class="relationBtn" onclick="showContents('relationBtn{!count}','relationTab{!count}','commentBtn{!count}','assignBtn{!count}','commentsTab{!count}','assignTab{!count}')"><div class="imgSizeTaskCardTab" style="background-position: -90px 0px;"></div></div>
                                        <div id="commentBtn{!count}" class="commentBtn" onclick="showContents('commentBtn{!count}','commentsTab{!count}','relationBtn{!count}','assignBtn{!count}','relationTab{!count}','assignTab{!count}')" ><div class="imgSizeTaskCardTab"  ></div></div>
                                        <div id="assignBtn{!count}" class="assignBtn" onclick="showContents('assignBtn{!count}','assignTab{!count}','relationBtn{!count}','commentBtn{!count}','relationTab{!count}','commentsTab{!count}')"><div class="imgSizeTaskCardTab" style="background-position: -106px 0px;"  ></div>   </div>
                                        <div class="openState">
                                            <div class="relationTab" id="relationTab{!count}">  <!-- relational drop down to hide / unhide -->
                                                <div class="selectedContent">
                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Related to</div>
                                                    <div class="cardTitleText fontWeightBold commonCardPadding" ><div style=""><a class="task-title" href="/{!task.relatedToId}" ><apex:outputText value="{!task.relatedTo}" style="font-size: 11px !important;"/></a></div></div>
                                                </div>
                                            </div> 
                                            <div class="commentsTab" id="commentsTab{!count}" style="display:none"> <!-- comments drop down to hide / unhide -->
                                                <div class="selectedContent ">
                                                    <div class="cardTitleText fontWeightBold commonCardPadding">Comments</div>
                                                    <div class="approvalDescriptionStatement fontWeightBold"><div style=""><apex:outputText value="{!task.comments}" /></div></div>
                                                </div>
                                            </div> 
                                            <div class="assignTab" id="assignTab{!count}" style="display:none"> <!-- assigned drop down to hide / unhide -->
                                                <div class="selectedContent">
                                                    <div>
                                                        <div class="assignedby-task">
                                                            <div  class="cardTitleText fontWeightBold ">Assigned By</div>
                                                            <div class="assignedby-task-div">
                                                                <div class="floatLeft"><img src="{!task.userAssignedImgUrl}" class="assignedby-img" /></div>
                                                                <div style="width:70%" class="floatLeft commonCardPadding">
                                                                    <div style="width:100%;padding-bottom:5px;" class="fontCardContentText fontWeightBold">{!task.userAssignedName}  </div>
                                                                    <div class="fontCardContentText fontWeightBold">{!task.userAssignedDept}</div>
                                                                </div> 
                                                            </div> 
                                                        </div>
                                                        <div class="assignedto-task">
                                                            <div style="margin-bottom:5px;" class="cardTitleText fontWeightBold floatRight">Assigned To</div>
                                                            <div class="assignedto-task-div toClear">
                                                                <div class="floatRight"><img src="{!task.userAssignImgUrl}"  class="assignedto-img" /></div>
                                                                <div style="width:70%" class="floatLeft">
                                                                    <div class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!task.userAssigneeName}</div>
                                                                    <div style="padding-top:5px" class="fontCardContentText fontWeightBold taskCardAssignedTo floatRight">{!task.userAssigneeDept}</div>
                                                                </div>
                                                            </div> 
                                                        </div>
                                                    </div>
                                                    <div style="clear:both" ></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                </div>
                                </div>
                            </apex:outputPanel>
                      <apex:variable var="count" value="{!count+ 1}"/>
                   </apex:repeat>
                   </div> <!-- end of scroll bar-->
                </td>
            </tr>
        </table>
    </apex:outputPanel>
    <apex:outputPanel id="kanbanBoardOutputPanel"></apex:outputPanel>
    <apex:form >
<!--        <apex:actionPoller oncomplete="searchRecords();" reRender="kanbanBoardOutputPanel,dragContainer" interval="45"/>
        <apex:actionPoller action="{!viewAllTasks}" reRender="kanBanBoardForm" oncomplete="" oncomplete="ToRefreshAfterPoller()" interval="300"/> -->
        <apex:actionFunction name="searchFilter" action="{!searchFilter}" oncomplete="ToRefreshAfterPoller();hideModalforTaskPopup();hideLoader();" rerender="kanBanBoardForm">
            <apex:param name="assignedId" value="" />
            <apex:param name="dueDateSelected" value="" />
            <apex:param name="userSelected" value="" />
            <apex:param name="dateField" value="" />
            <apex:param name="startField" value="" />
            <apex:param name="endField" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="viewAllTasks" action="{!viewAllTasks}" rerender="kanBanBoardForm">
        </apex:actionFunction>
        
        <apex:actionFunction action="{!taskDetails}" name="getTaskDetails" oncomplete="showModelforTaskPopup();setRelatedListValue();hideLoader();" rerender="taskPopupId,chatter">
            <apex:param name="taskSelectedId"  value="" />
            <apex:param name="recordAccess"  value="" />
            <apex:param name="chatPermission"  value="" />
        </apex:actionFunction>
        
    </apex:form>
    
    
    <!-- Create new tasks -->
    <!--<div class = "preloader"></div>     
    <div class = "bg-fade"></div>-->
    <div class = "modal-window" style="margin-left: -500px;">
           <div class = "modal-head">
            <div class = "modal-plan-header ft-left" id = "task-header">
                New Task
            </div>
            <a class = "modal-close" href = "javascript: void(0);" onclick = "hideModal();removeAllValues();"></a>
        </div>
           <div class = "modal-content" style="width:800px">
            <div class = "modal-plan-content" id = "task-body">
                <apex:form id="newtaskForm" >
                    <table cellspacing = "6" cellpadding = "0" class = "modal-tbl">
                        <tr>
                            <td class = "cell-left modal-label">
                                <span class = "top-pad">Subject</span>
                            </td>
                            <td class = "cell-right required-input" colspan = "3" style="width:637px">
                                <apex:inputField styleClass="task-modal-text" style="width:587px" id="subjectForTask" value="{!newTask.Subject}" />
                            </td>
                        </tr>
                        <tr>
                            <td class = "cell-left modal-label">
                                Assigned To
                            </td>
                            <td class = "cell-right required-input">
                                <apex:inputField id="assignTo" value="{!newTask.OwnerId}" />
                            </td>
                             <td class = "cell-left modal-label">
                                Status
                            </td>
                            <td class = "cell-right">
                                <apex:inputField id="status" style="width:160px" value="{!newTask.status}" />
                            </td>
                        </tr>
                        <tr>
                            <td class = "cell-left modal-label">
                                Due Date
                            </td>
                            <td class = "cell-right">
                                <apex:inputField id="dueDate" value="{!newTask.ActivityDate}" />
                            </td>
                            <td class = "cell-left modal-label">
                                Priority
                            </td>
                            <td class = "cell-right">
                                <apex:inputField id="priority" style="width:160px" value="{!newTask.Priority}" styleClass="prioritystyle"/>
                            </td>
                        </tr>
                        <tr>
                            <td class = "cell-left modal-label">
                                Related To
                            </td>
                            <td class = "cell-left" colspan="3">
                                <!-- <script>
                                    
                                     var newWin=null; 
                                     function openLookupPopup(name, id)
                                     {
                                          var url="/apex/LookupPopup?namefield=" + name + "&idfield=" + id + "&searchObj=" + document.getElementById('selectedObj').value + "&searchText=" + document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:recName').value;
                                          newWin=window.open(url, 'Popup','height=500,width=600,left=100,top=100,resizable=no,scrollbars=yes,toolbar=no,status=no');
                                          if (window.focus) 
                                          {
                                           newWin.focus();
                                          }
                                         return false;
                                      }
                                     function closeLookupPopup()
                                     {
                                        if (null!=newWin)
                                        {
                                           newWin.close();
                                        }  
                                     }
                                     function clearLookUpValue(){
                                        //document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:recId').value = '';
                                        //document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:recName').value = '';
                                     }
                                     function removeHiddenData(){
                                        //document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:recId').value = '';
                                     }
                                </script>
                                <div style="float:left">
                                    <select Id="selectedObj">
                                        <option value="Decisions">Decisions</option>
                                        <option value="Plans" >Plans</option>
                                        <option value="Accounts" >Accounts</option>
                                        <option value="Contacts" >Contacts</option>
                                    </select>
                                    <apex:inputHidden value="{!recId}" id="recId" /> &nbsp;&nbsp;&nbsp;&nbsp;
                                    <apex:inputText style="width:480px" value="{!recName}" id="recName"  disabled="false" styleClass="LookUp" onchange="removeHiddenData();"/> &nbsp;
                                    <img src="/s.gif" onclick="openLookupPopup('{!$Component.recName}', '{!$Component.recId}'); return false" style="cursor:pointer;" class="lookupIconOn"  /> &nbsp;
                                </div>-->
                                <div style="float:left"> 
                                    <apex:inputHidden value="{!recId}" id="recId" /> &nbsp;&nbsp;&nbsp;&nbsp;
                                    <apex:inputHidden value="{!recName}" id="recName" /> &nbsp;
                                    
                                    <apex:inputField Value="{!newTask.whatId}" id="whatId" />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <div class = "tabs-gen-head" style="margin-left:53px;"> 
                                    <a href = "javascript: void(0);" class = "expandCollapseDetails ft-left" id = "taskDetails-btn" onclick = "expandCollapse('taskDetails-view','taskDetails-btn')"></a>  
                                    <h3 class = "ft-left"><span class="details-span">Details</span></h3>
                                </div>
                                <div id="taskDetails-view" style="width:700px;display:none">
                                    <div style="width:727px">
                                        <div>
                                            <div class="complexity-label-div" >Complexity</div>
                                            <div style="float:left;margin-left: 20px;"><apex:inputField style="width:156px;margin-left:4px" value="{!newTask.Complexity__c}" id="complexityId" /></div>
                                        </div>
                                        <div class="ft-right">
                                            <div class="skill-level-div" >Skill Level</div>
                                            <div style="float: left;"><apex:inputField style="width:153px;" value="{!newTask.Skill_Level__c}" Id="skilllevelId"/></div>
                                        </div>  
                                    </div>
                                    <br/><br/>
                                    <div style="width:729px">
                                        <div>
                                            <div class="estimated-hours" >Estimated Hours</div>
                                            <div style="float:left;margin-left: 20px;"><apex:inputField style="margin-left:4px" value="{!newTask.Estimated_Hours__c}" onkeypress="return isNumberKey(event)" Id="estimatedhourId"/></div>
                                        </div>
                                        <div class="ft-right">
                                            <div class="actual-hours">Actual Hours</div>
                                            <div style="float: left;margin-right: 0px;"><apex:inputField value="{!newTask.Actual_Hours__c}" onkeypress="return isNumberKey(event)" Id="actualhour"/></div>
                                        </div>  
                                    </div>
                                     <br/><br/>
                                    <div style="width:729px">
                                        <div>
                                            <!--<div class="newtaskpopup-Name toClear">Name</div>
                                            <div  style="float:left;margin-left: 24px;margin-top: 8px;"><apex:inputField id="whoId"  value="{!newTask.whoid}" /></div>-->
                                        </div>
                                    </div>
                                </div>
                            </td>    
                        </tr>
                        
                        <tr> 
                            <td class = "cell-left modal-label">
                                Comments
                            </td>
                            <td class = "cell-right" colspan = "3">
                                <apex:inputField id="comments" style="width:583;" value="{!newTask.Description}" />
                            </td>
                        </tr>
                         
                        <tr>
                            <td class = "cell-left  modal-label">
                                Send Notification Mail
                            </td>
                            <td colspan="3" class = "cell-right" >
                                <input id="sendingNotification" type = "checkbox" />&nbsp;<span style="color: #4A4A56;font-weight: bold;font-size: 11px;margin-left:220px">Reminder</span>&nbsp;<apex:inputField value="{!newTask.IsReminderSet}" id="setReminder" onclick="disabledate(this);"/><apex:inputField value="{!newTask.ReminderDateTime}" id="setReminderDate"/>
                            </td>
                        </tr> 
                    </table>
                    <apex:actionFunction name="saveThisTask" action="{!createNewTask}" oncomplete="removeAllValues();searchRecords();" reRender="newtaskForm" >
                        <apex:param name="sendingNotification" id="sendingNotification" value="" />
                        <apex:param name="recRelatedWhatId" value="" />
                        <apex:param name="selectedObj" value="" />
                    </apex:actionFunction>
                      
                </apex:form>
            </div>
         </div>
         <div class = "modal-btm">
            <div class = "modal-footer" id = "plan-footer-taskrelation">
                <button type = "button" onclick = "saveNewTask();">Save</button>
                <button type = "button" onclick = "hideModal();removeAllValues()">Close</button>
            </div>
         </div>
    </div>
    
    <script>
        function disabledate(e){
            if(!e.checked){
                document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:setReminderDate').value = '';
                $('input[id$="setReminderDate"]').attr('disabled','disabled');
            }
            else
            {
              $('input[id$="setReminderDate"]').removeAttr('disabled');
            }
        }
        function showBotton(count){
        
            if(document.getElementById("cardBottom"+count).style.display=="none"){
                    //$( containerBottom ).slideDown( "slow" );
                    document.getElementById("cardBottom"+count).style.display="block";
                    document.getElementById("dropBtn"+count).style.backgroundPosition="-64px 0px";
            }else{
                document.getElementById("cardBottom"+count).style.display="none";
                document.getElementById("dropBtn"+count).style.backgroundPosition="-64px -8px";
            }
        }
        
        function showContents(whiteBackground,contentShow,greyBackgroundA,greyBackgroundB,hideContent1,hideContent2){
            document.getElementById(whiteBackground).style.backgroundColor="#fbfbfb";
            document.getElementById(whiteBackground).style.borderBottom="1px solid #fbfbfb";
            document.getElementById(contentShow).style.display="block";
            document.getElementById(greyBackgroundA).style.backgroundColor="#f2f2f2";
            document.getElementById(greyBackgroundB).style.backgroundColor="#f2f2f2";
            document.getElementById(greyBackgroundA).style.borderBottom="1px solid #ccc";
            document.getElementById(greyBackgroundB).style.borderBottom="1px solid #ccc";
            document.getElementById(hideContent1).style.display="none";
            document.getElementById(hideContent2).style.display="none"; 
        }
        
        function expandAllCards(){
           // console.log('overDueTask'+overDueTask);
           
            if(document.getElementById('cardExpandChk').checked == true){
                $(".cardBottom").css('display','block');
                for(count=0; ListSize > count ;count++){
                    document.getElementById("cardBottom"+count).style.display="block";
                    document.getElementById("dropBtn"+count).style.backgroundPosition="-64px 0px";    
                }
            }else{
                $(".cardBottom").css('display','none');
                for(count=0;ListSize>count;count++){
                    document.getElementById("cardBottom"+count).style.display="none";
                    document.getElementById("dropBtn"+count).style.backgroundPosition="-64px -8px";
                }
            }
        }
         var $div = $(window);
             
            var width = $div.width();
            var ulWidth = 1530 - width;
            var divLeft = 0;
            $(document).ready(function(){
              $div = $(window);
             
              width = $div.width();
              ulWidth = 1730 - width;
              divLeft = 0;
            
            dragModal();
            var el = $.active;
            var count = 0;
            var inputs = new Array();
            $(document).ready(function () {
                $(".cardContainer").kendoDraggable({
                    hint: function (e) { 
                        return  '<div class="cardContainer" id="lblDrag0" data-role="draggable">'+e.html()+'</div>';
                    },
                    dragstart: draggableOnDragStart,
                    dragend: draggableOnDragEnd,
                    container: $("#dragContainer")
                });
                
                  $(".drop").kendoDropTargetArea({
                    filter: ".drop",
                    dragenter: droptargetOnDragEnter,
                    dragleave: droptargetOnDragLeave,
                    drop: droptargetOnDrop
                    
                });
                
               
                
                
            });
            
       
            
            function draggableOnDrag() {
                
            }
            
            function draggableOnDragStart(e) {  
                $(".cardContainer").css('cursor','move');
                inputs = document.getElementsByTagName('input');
            }
            
            function draggableOnDragEnd(e) { 
            }
            
            function droptargetOnDragEnter(e) {  
               
            }
            
            function droptargetOnDragLeave(e) {  }
            
            function droptargetOnDrop(e) {   
               var newEl = $(e.draggable.currentTarget).clone();
               var droppedCardId = e.draggable.currentTarget.context.id;
               var droppedStatus = e.dropTarget.context.id;
                
              
                                                                     
                
               e.dropTarget.append(newEl);      
               newEl.kendoDraggable({ hint: function () { return '<div class="cardContainer" id="'+droppedCardId+'" data-role="draggable">'+e.draggable.currentTarget.context.innerHTML+'</div>' },dragstart: draggableOnDragStart,dragend: draggableOnDragEnd,container: $("#dragContainer")  });
               $(e.draggable.currentTarget).remove(); 
               if( e.dropTarget.attr('id') == 'doing'){
                droppedStatus= 'In Progress';
               }
               else
               if( e.dropTarget.attr('id') == 'done'){
                droppedStatus= 'Completed';
               }
               else
               if( e.dropTarget.attr('id') == 'todo'){
                droppedStatus= 'Not Started';
               } 
               KanbanBoardAndCards.updateTask(droppedCardId, droppedStatus, function(result, event)
               {     
                    if (event.status)
                    {  
                       newEl.attr("id", droppedCardId);  
                       count = $(document.getElementById(droppedCardId)).attr('count');
                        
                       $("#statusDropDownId"+count).kendoDropDownList({                                                                               
                                        dataTextField: "StatusName",
                                        dataSource: taskStatus,
                                        optionLabel: droppedStatus,
                                        change: onChange
                        });
                        
                    }
                    
                    searchRecords();
               }, {escape:true});
            }
        });
        
        function ToRefreshAfterPoller(){
        
            var el = $.active;
            var count = 0;
            var inputs = new Array();
          
            $(document).ready(function () {
                $(".cardContainer").kendoDraggable({
                    hint: function (e) { 
                        return  '<div class="cardContainer" id="lblDrag0" data-role="draggable">'+e.html()+'</div>';
                    },
                    dragstart: draggableOnDragStart,
                    dragend: draggableOnDragEnd,
                    container: $("#dragContainer"),
                     holdToDrag: true,
                    drag: function(e) { 
                      // Drag and Scroll
                      var windowX = $(window).innerWidth();
                       var left = e.pageX - divLeft;
                        var percent = left / width;                     
                        window.scrollTo((percent * ulWidth),0);   
                      }
                   
                });
               
                
                  $(".drop").kendoDropTargetArea({
                    filter: ".drop",
                    dragenter: droptargetOnDragEnter,
                    dragleave: droptargetOnDragLeave,
                    drop: droptargetOnDrop,
                 
                });
                
                
            });
            
             
            
            function draggableOnDrag() {
                
            }
            
            function draggableOnDragStart(e) {
                $(".cardContainer").css('cursor','move');
                inputs = document.getElementsByTagName('input');
            }
            
            function draggableOnDragEnd(e) { 
                
            }
            
            function droptargetOnDragEnter(e) {  
               
            }
            
            function droptargetOnDragLeave(e) {  }
            
            function droptargetOnDrop(e) {
                var newEl = $(e.draggable.currentTarget).clone();
                var droppedCardId = e.draggable.currentTarget.context.id;
                var droppedStatus = e.dropTarget.context.id;
                e.dropTarget.append(newEl);
                newEl.kendoDraggable({ hint: function () {  return '<div class="cardContainer" id="'+droppedCardId+'" data-role="draggable">'+e.draggable.currentTarget.context.innerHTML+'</div>' },dragstart: draggableOnDragStart,dragend: draggableOnDragEnd,container: $("#dragContainer") });
                $(e.draggable.currentTarget).remove();
                KanbanBoardAndCards.updateTask(droppedCardId, droppedStatus, function(result, event)
                {    
                    if (event.status)
                    {  
                        newEl.attr("id", droppedCardId);  
                    }
                }, {escape:true}); 
            }
        }
        
        
        function searchRecords(){
       // console.log('dueDateSelected test');
        //var userSelected = document.getElementById('userSelected').value;
        
           var dueDateChkbox = document.getElementById('hideOverdue').checked;
            var assignedId = document.getElementById('assignedId').value;
            var dueDateSelected = document.getElementById('colDt_q').value;
            var dateField;
             // console.log('@@@@@@@@@@@@@'+dueDateChkbox);
           if(dueDateChkbox != true){
            dateField = $('#colDt').val();                
            document.getElementById('cardExpandChk').checked=false;
            if(chkTaskUserId == 'no'){
                $('#userErr').css('display','block');
                return false;
            } else if(dueDateSelected != 'custom'){
                var userSelected = taskuserId;
                 showLoader();
                searchFilter(assignedId,dueDateSelected,userSelected,dateField);
            }else if(dueDateSelected == 'custom'){
                    
                   var userSelected = taskuserId;
                   showLoader();
                  
                   // For custom start date 
                   
                  var selectStr = $("#sd").data("kendoDatePicker").value();
                  if(selectStr != null){
                      var datstrt = selectStr.getDate();
                      var montstrt =selectStr.getMonth()+1;
                      var yrstrt = selectStr.getFullYear();
                      if(montstrt.toString().length == 1){
                        montstrt ='0'+montstrt;
                      }
                      if(datstrt.toString().length == 1){
                        datstrt = '0'+datstrt;
                      }
                      var modifyStartDate = yrstrt +'-'+montstrt+'-'+datstrt;
                  }
                  //For custom end date
                  
                  var selectEnd = $("#ed").data("kendoDatePicker").value();
                  if(selectEnd != null){
                  var datEnd = selectEnd.getDate();
                      var montEnd =selectEnd.getMonth()+1;
                      var yrEnd = selectEnd.getFullYear();
                      if(montEnd.toString().length == 1){
                        montEnd ='0'+montEnd;
                      }
                      if(datEnd.toString().length == 1){
                        datEnd = '0'+datEnd;
                      }
                      var modifyEndDate = yrEnd +'-'+montEnd+'-'+datEnd;
                  }
                  
                  searchFilter(assignedId,dueDateSelected,userSelected,dateField,modifyStartDate,modifyEndDate);
               
            }
            if(dueDateSelected == 'All' || dueDateSelected == 'Overdue'){
                //console.log(dueDateSelected );
               // enableDatePicker();
                 var datepicker = $("#sd").data("kendoDatePicker");
                // detach events
                datepicker.enable(false);
                $("#sd").data("kendoDatePicker").value(null);
                
                var datepicker = $("#ed").data("kendoDatePicker");
                // detach events
                datepicker.enable(false);
                $("#ed").data("kendoDatePicker").value(null);
                document.getElementById("colDt").disabled=false;
                document.getElementById("colDt_q").disabled=false;
             }
            
          }else{
            dateField = $('#colDt').val();
           // console.log('dateField'+dateField);
            if(dateField == 'DUE_DATE'){ 
                dateField = 'Not_DUE_DATE';
            }else if(dateField =='CREATED_DATE'){
                dateField= 'Not_CREATED_DATE';
            }else if(dateField =='LAST_UPDATE'){
                dateField= 'Not_LAST_UPDATE';
            } 
                
                if(chkTaskUserId == 'no'){
                    $('#userErr').css('display','block');
                    return false;
                } else if(dueDateSelected != 'custom'){
                    var userSelected = taskuserId;
                    showLoader();
                    enableChk = document.getElementById('colDt_q').value; 
                    //console.log(enableChk);
                    if(dueDateSelected == 'All' || dueDateSelected == 'Overdue'){
                        var datepicker = $("#sd").data("kendoDatePicker");
                        // detach events
                        datepicker.enable(false);
                        $("#sd").data("kendoDatePicker").value(null);
                        
                        var datepicker = $("#ed").data("kendoDatePicker");
                        // detach events
                        datepicker.enable(false);
                        $("#ed").data("kendoDatePicker").value(null);
                       // document.getElementById("colDt").disabled=true;
                       // document.getElementById("colDt_q").disabled=true;
                    }
                    searchFilter(assignedId,dueDateSelected,userSelected,dateField);
               }else if(dueDateSelected == 'custom'){
                   
                   var userSelected = taskuserId;
                   showLoader();
                  
                   // For custom start date 
                   
                  var selectStr = $("#sd").data("kendoDatePicker").value();
                  if(selectStr != null){
                      var datstrt = selectStr.getDate();
                      var montstrt =selectStr.getMonth()+1;
                      var yrstrt = selectStr.getFullYear();
                      if(montstrt.toString().length == 1){
                        montstrt ='0'+montstrt;
                      }
                      if(datstrt.toString().length == 1){
                        datstrt = '0'+datstrt;
                      }
                      var modifyStartDate = yrstrt +'-'+montstrt+'-'+datstrt;
                  }
                  //For custom end date
                  
                  var selectEnd = $("#ed").data("kendoDatePicker").value();
                  if(selectEnd != null){
                  var datEnd = selectEnd.getDate();
                      var montEnd =selectEnd.getMonth()+1;
                      var yrEnd = selectEnd.getFullYear();
                      if(montEnd.toString().length == 1){
                        montEnd ='0'+montEnd;
                      }
                      if(datEnd.toString().length == 1){
                        datEnd = '0'+datEnd;
                      }
                      var modifyEndDate = yrEnd +'-'+montEnd+'-'+datEnd;
                  }
                  
                  searchFilter(assignedId,dueDateSelected,userSelected,dateField,modifyStartDate,modifyEndDate);
                     
                }
          }    
        }
        function searchRecordsFromClear(){
            
           // $("#demo-input-pre-populated-with-tokenlimit-task").tokenInput("add", {id: x, name: '{}'});
            document.getElementById('hideOverdue').checked = false;
            var assignedId = document.getElementById('assignedId').value;
            var dueDateSelected = 'next7';
            var dateField;
            document.getElementById('cardExpandChk').checked=false;
           
                dateField = 'DUE_DATE'; 
                 //console.log('dateField1 : '+dueDateSelected);
                if(chkTaskUserId == 'no'){
                   $('#userErr').css('display','block');
                  //  return false;
                } 
                
                 if(dueDateSelected != 'custom'){
                    showLoader();
                    var userSelected = '{!$User.Id}';    
                     showLoader();
                    var userName ='{!$User.FirstName}' +' '+ '{!$User.LastName}';
                     
                    searchFilter(assignedId,dueDateSelected,userSelected,dateField);
                    $("#demo-input-pre-populated-with-tokenlimit-task").tokenInput("clear");
                    $("#demo-input-pre-populated-with-tokenlimit-task").tokenInput("add", {id:userSelected,name:userName});
                    
                    enableDatePicker();
                    document.getElementById("colDt").disabled=false;
                    document.getElementById("colDt_q").disabled=false;
                    if(dueDateSelected == 'Overdue'){
                        document.getElementById("hideOverdue").disabled = true;
                    }else{
                        document.getElementById("hideOverdue").disabled = false;
                    }
                    
                 }
                
               
        }
        
        function searchRecordsFromGo(){
        //console.log('dueDateSelected'+dueDateSelected);
            //var userSelected = document.getElementById('userSelected').value;
            
           //console.log('dueDateChkbox'+dueDateChkbox);
            var dueDateChkbox = document.getElementById('hideOverdue').checked;
            var assignedId = document.getElementById('assignedId').value;
            var dueDateSelected = document.getElementById('colDt_q').value;
            var dateField;
            document.getElementById('cardExpandChk').checked=false;
            if(dueDateChkbox != true){ 
                dateField = $('#colDt').val(); 
                if(chkTaskUserId == 'no'){
                   $('#userErr').css('display','block');
                    return false;
                } else if(dueDateSelected != 'custom'){
                    var userSelected = taskuserId;
                     showLoader();
                    searchFilter(assignedId,dueDateSelected,userSelected,dateField);
                    
                     document.getElementById("colDt").disabled=false;
                    document.getElementById("colDt_q").disabled=false;
                    if(dueDateSelected == 'Overdue'){
                        document.getElementById("hideOverdue").disabled = true;
                    }else{
                        document.getElementById("hideOverdue").disabled = false;
                    }
                }else if(dueDateSelected == 'custom'){
                   
                   var userSelected = taskuserId;
                   showLoader();
                  
                   // For custom start date 
                   
                  var selectStr = $("#sd").data("kendoDatePicker").value();
                  if(selectStr != null){
                      var datstrt = selectStr.getDate();
                      var montstrt =selectStr.getMonth()+1;
                      var yrstrt = selectStr.getFullYear();
                      if(montstrt.toString().length == 1){
                        montstrt ='0'+montstrt;
                      }
                      if(datstrt.toString().length == 1){
                        datstrt = '0'+datstrt;
                      }
                      var modifyStartDate = yrstrt +'-'+montstrt+'-'+datstrt;
                  }
                  //For custom end date
                  
                  var selectEnd = $("#ed").data("kendoDatePicker").value();
                  if(selectEnd != null){
                  var datEnd = selectEnd.getDate();
                      var montEnd =selectEnd.getMonth()+1;
                      var yrEnd = selectEnd.getFullYear();
                      if(montEnd.toString().length == 1){
                        montEnd ='0'+montEnd;
                      }
                      if(datEnd.toString().length == 1){
                        datEnd = '0'+datEnd;
                      }
                      var modifyEndDate = yrEnd +'-'+montEnd+'-'+datEnd;
                  }
                  
                  searchFilter(assignedId,dueDateSelected,userSelected,dateField,modifyStartDate,modifyEndDate);
                     
                }
                //enableDatePicker();
               
             
          }else{
            //dueDateSelected = 'Not_Overdue';
            dateField = $('#colDt').val();
            if(dateField == 'DUE_DATE'){ 
                dateField = 'Not_DUE_DATE';
            }else if(dateField =='CREATED_DATE'){
                dateField= 'Not_CREATED_DATE';
            }else if(dateField =='LAST_UPDATE'){
                dateField= 'Not_LAST_UPDATE';
            }   
                if(chkTaskUserId == 'no'){
                   $('#userErr').css('display','block');
                    return false;
                } else if(dueDateSelected != 'custom'){
                    var userSelected = taskuserId;
                    showLoader();
                   /* var datepicker = $("#sd").data("kendoDatePicker");
                    // detach events
                    datepicker.enable(false);
                    
                    var datepicker = $("#ed").data("kendoDatePicker");
                    // detach events
                    datepicker.enable(false);
                    document.getElementById("colDt").disabled=true;
                    document.getElementById("colDt_q").disabled=true;*/
                    searchFilter(assignedId,dueDateSelected,userSelected,dateField);
               }else if(dueDateSelected == 'custom'){
                   
                   var userSelected = taskuserId;
                   showLoader();
                  
                   // For custom start date 
                   
                  var selectStr = $("#sd").data("kendoDatePicker").value();
                  if(selectStr != null){
                      var datstrt = selectStr.getDate();
                      var montstrt =selectStr.getMonth()+1;
                      var yrstrt = selectStr.getFullYear();
                      if(montstrt.toString().length == 1){
                        montstrt ='0'+montstrt;
                      }
                      if(datstrt.toString().length == 1){
                        datstrt = '0'+datstrt;
                      }
                      var modifyStartDate = yrstrt +'-'+montstrt+'-'+datstrt;
                  }
                  //For custom end date
                  
                  var selectEnd = $("#ed").data("kendoDatePicker").value();
                  if(selectEnd != null){
                  var datEnd = selectEnd.getDate();
                      var montEnd =selectEnd.getMonth()+1;
                      var yrEnd = selectEnd.getFullYear();
                      if(montEnd.toString().length == 1){
                        montEnd ='0'+montEnd;
                      }
                      if(datEnd.toString().length == 1){
                        datEnd = '0'+datEnd;
                      }
                      var modifyEndDate = yrEnd +'-'+montEnd+'-'+datEnd;
                  }
                  
                  searchFilter(assignedId,dueDateSelected,userSelected,dateField,modifyStartDate,modifyEndDate);
                     
                }
          }    
       }
        
        function defaultRecords(){
            document.getElementById('duedateId').value = '1Week';
            document.getElementById('assignedId').value = 'AssignedTo';
            searchRecords();
        }
        function showModal(header,body,footer){   
            var scrollPosY = $(window).height();
            var scrollPosX = $(window).width();
            scrollPosY = (scrollPosY/2)-(($('.modal-window').height())/2);
            scrollPosX = (scrollPosX/2)-(($('.modal-window').width())/2);
            if(0>scrollPosY){
                scrollPosY = scrollPosY*-1;
            }
            if(0>scrollPosX){
                scrollPosX = scrollPosX*-1;
            }         
            $('.modal-plan-content').hide();
            $('.modal-footer').hide();
            $('.modal-plan-header').hide(); 
            $('#'+header).show();
            $('#'+body).show();
            $('#'+footer).show();
            $('body').css('overflow','hidden');
            $('.bg-fade').fadeIn('slow');
            $('.modal-window').slideDown('slow');
            $('.modal-window').css('top',scrollPosY +'px');
            $('.modal-window').css('right',scrollPosX +'px');
        }
        function saveNewTask(){
            var subject = document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:subjectForTask').value;
            if(subject == ''){
                alert('Please enter subject');
                return false;
            }
            var assignTo = document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:assignTo').value;
            if(assignTo == ''){
                alert('Please enter Assigned To');
                return false;
            }
            var sendingNotification = document.getElementById('sendingNotification').checked;
            saveThisTask(sendingNotification);
            hideModal();
        }
        function hideModal(){
            setTextAreaSize();
            $('.modal-window').css('display','none');                
            $('.bg-fade').fadeOut('slow');
            $('body').css('overflow','auto');
        }
        function setTextAreaSize(){
           //document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:comments').style.height = '80px';
           document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:comments').style.width = '583px';
           return true;
        }
        function removeAllValues(){
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:subjectForTask').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:assignTo').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:dueDate').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:priority').value = 'Normal';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:status').value = 'Not Started';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:comments').value = '';
            document.getElementById('sendingNotification').checked = false;
            //document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:recId').value = '';
            //document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:recName').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:setReminder').checked = true;
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:setReminderDate').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:complexityId').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:skilllevelId').value = '1';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:estimatedhourId').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:actualhour').value = '';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:whatId').value='';
            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskForm:whoId').value='';
            $('input[id$="setReminderDate"]').removeAttr('disabled');
            //expandCollapse('taskDetails-view','taskDetails-btn');
            $('#taskDetails-view').css('display','none');
            $('#taskDetails-btn').css('backgroundPosition','0 -8px');
        }
        function expandCollapse(toBeExpandCollapse, expandCollapseImage) {
            
            var displayStyle = $('#'+toBeExpandCollapse).css('display');        
            if(displayStyle == 'block'){
                $('#'+expandCollapseImage).css('backgroundPosition','0 -8px');
                $('#'+toBeExpandCollapse).css('display','none');
            }else{
                $('#'+expandCollapseImage).css('backgroundPosition','0 0');
                $('#'+toBeExpandCollapse).css('display','block');
            }
            return true;
        } 
        
        function isNumberKey(event){
         var event = event || window.event //For IE
         var key = event.target;
        
            if( key.value.length  == 16 )
            {
              //alert('Maximum number of digits is 16');
              return false;
            }
         //  var charCode = (event.which) ? event.which : event.keyCode
          var key = window.event ? event.keyCode : event.which;
            if (event.keyCode == 8 || event.keyCode == 46 || event.keyCode == 37 || event.keyCode == 39) {
                return true;
            }
            else if ( key < 48 || key > 57 ) {
                return false;
            }
            else return true;
            
            
           /*
            if (charCode < 48 || charCode > 57   )
                return false;
    
            return true;*/
        }
        
    </script>
    <!-- --------------------- -->
        
            <apex:stylesheet value="{!$Page.CommonStyles}" />
            <apex:stylesheet value="{!$Page.PlanStyles}" />
            <apex:stylesheet value="{!$Page.OverrideStyles}" /> 

            <!--<apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/plan-jquery-ui.css')}"/>-->
            
          
            <style>
             /*================ overriding the style to avoid scroll bar in task care kendo drop down ====================*/
             .k-list{
                overflow: hidden !important;
             }
             
             /* ====================== overriding ends here ================ */
                .tasktabs-block {
                    height : 370px;
                }
                 #tabstask .ui-tabs .ui-widget-content {
                    border: 1px solid #d4d4d4 !important;
                }
                #tabstask .ui-tabs .ui-widget-content{
                    border-top: 1px solid #d4d4d4 !important;
                }
                
               /* #tabstask .ui-tabs-nav > .ui-state-default a {
                 border:none !important;
                }
                #tabstask .ui-tabs-nav .ui-state-default{
                 padding-bottom: 1px !important;
                }
                #tabstask .ui-tabs-nav > .ui-state-active{
                 border-bottom: 1px solid #fff !important;
                } */
                .tasktabs-block-head {
                    text-align: left;
                }
                .wrapper{
                    z-index: 11000;
                    position: fixed;
                    left: 50%;
                    background-color : white;
                    padding : 10px;
                    border-radius : 5px;
                    width : 830px;
                }
                .tasktabs-block{
                    border-top-style : hidden;
                    
                }
                .chatter-tableft
                {
                    height: 370px;
                    display: table-cell;
                }
                .chatter-block {
                    height: 370px;
                }
                .taskBtns {
                    background-color: #DDDDDD;
                    height: 25px;
                    padding: 10px;
                    padding-left: 300px;
                    border-bottom-left-radius: 5px;
                    border-bottom-right-radius: 5px;
                    margin-top: 30px;
                }
                
                .taskBtnsChatter {
                    background-color: #DDDDDD;
                    height: 25px;
                    padding: 10px;
                    padding-left: 300px;
                    border-bottom-left-radius: 5px;
                    border-bottom-right-radius: 5px;
                }
                
                .taskBtnsWork {
                    background-color: #DDDDDD;
                    height: 25px;
                    padding: 10px;
                    padding-left: 300px;
                    border-bottom-left-radius: 5px;
                    border-bottom-right-radius: 5px;
                    margin-top: 0px;
                }
                .popup-btn{
                    width: 100px;
                    height: 25px; 
                }
                .tabs-gen-block{
                    margin-bottom : 20px;
                }
                .border-btm-taskview{
                    border-bottom-color : #DDDDDD;
                }
                .gen-block-tbl{
                    border-color: #d4d4d4;
                    border-top-left-radius: 5px;
                    border-top-right-radius: 5px;
                }
                
                  
                    
                 #tskplanTab  .ui-state-active a  
                 {
                    border-color: #FFFFFF !important;
                    background: #FFFFFF !important;
                 }
                 
                  #tskplanTab     .ui-state-hover a 
                 {
                    border-color: #dddddd !important;
                    background: #dddddd!important;
                 } 
                .border-taskview{
                    border-top-color : #DDDDDD ;
                }
                .page-head {
                    cursor : move;
                }
                
            </style>  
            <!--<div class = "preloader"></div>     
            <div class = "bg-fade"></div>-->
            <div class = "wrapper" style="display:none;">
                <apex:form Id="taskForm">
                    <apex:actionFunction name="updateTaskDetailsWithRecId" action="{!updateTaskDetails}" oncomplete="showDetailView();" rerender="taskPopupId">
                        <apex:param name="lookUpRecId" value="" />
                        <apex:param name="sendingNotification" value="" />
                    </apex:actionFunction>
                    <apex:actionFunction name="updateTaskDetailsWorkWithRecId" action="{!updateTaskDetails}" oncomplete="showDetailViewWork();" rerender="workTab">
                        <apex:param name="sendingNotification" value="" />
                    </apex:actionFunction>
                    <apex:outputPanel id="taskPopupId">
                        <script>
                          $(function() {
                              $( "#tabstask" ).tabs();
                              $('#tabstask').css('display','block'); 
                          });
                          
                          function hideModalforTaskPopup(){
                            $('.wrapper').css('display','none');                
                            $('.bg-fade').fadeOut('slow');
                            $('body').css('overflow','auto');
                            showDetailView();
                         }
                         
                         function showModelforTaskPopup(){ 
                            var scrollPos = $(window).scrollTop();
                            //scrollPos =  scrollPos+50;
                            
                            var  h = $('.wrapper').height() ;
                            //h = h - 100;
                            var left = (screen.width/2)-(415);
                            var top = (screen.height/2)-(h/(1.5));
                            $('.wrapper').css('left',left); 
                            $('.wrapper').css('top',top); 
                            
                            $('.wrapper').css('display','block');
                            $('body').css('overflow','hidden');
                            $('.bg-fade').fadeIn('slow');
                            $('.wrapper').slideDown('slow'); 
                            $('.wrapper').draggable();
                            
                             
                            
                         }
                      
                         function setRelatedListValue(){
                            var selectedObjectInPicklist = '{!HTMLENCODE(relatedToObject)}';
                            if(selectedObjectInPicklist == 'Decisions'){
                                document.getElementById('selectedObjInEditTask').value = 'Decisions';
                            }
                            else if(selectedObjectInPicklist == 'Plans'){
                                document.getElementById('selectedObjInEditTask').value = 'Plans';
                            }
                            else if(selectedObjectInPicklist == 'Accounts'){
                                document.getElementById('selectedObjInEditTask').value = 'Accounts';
                            }
                            else if(selectedObjectInPicklist == 'Contacts'){
                                document.getElementById('selectedObjInEditTask').value = 'Contacts';
                            }
                            
                         }
                         
                         function showDetailView(){
                            document.getElementById('editDiv').style.display = 'none';
                            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:outputDiv').style.display = 'block';
                         }
                         
                         function showEditMode(){
                            document.getElementById('editDiv').style.display = 'block';
                            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:outputDiv').style.display = 'none';
                            setRelatedListValue();
                         }
                         
                         function showEditModeWork(){
                            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:workEditPanel').style.display = 'block';
                            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:workOutPutPanel').style.display = 'none';
                         }
                         
                         function showDetailViewWork(){
                            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:workEditPanel').style.display = 'none';
                            document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:workOutPutPanel').style.display = 'block';
                         }
                         
                         function updateTaskDetails(){
                            var subject = document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:subjectForTask').value;
                            if(subject == ''){
                                alert('Please enter subject');
                                return false;
                            }
                            var assignTo = document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:assignTo').value;
                            if(assignTo == ''){
                                alert('Please enter Assigned To');
                                return false;
                            }
                            var sendingNotification = document.getElementById('sendingNotification').value;
                             updateTaskDetailsWithRecId(sendingNotification);
                            //updateTaskDetailsWithRecId(sendingNotification);
                         }
                         
                         function updateTaskDetailsWork(){
                            var subject = document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:subjectForTask').value;
                            if(subject == ''){
                                alert('Please enter subject');
                                return false;
                            }
                            var assignTo = document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:assignTo').value;
                            if(assignTo == ''){
                                alert('Please enter Assigned To');
                                return false;
                            }
                            var sendingNotification = document.getElementById('sendingNotification').value;
                            updateTaskDetailsWorkWithRecId(sendingNotification);
                            //updateTaskDetailsWorkWithRecId(sendingNotification);
                         }
                         
                         function onKeyDownHeaderFunction(event) {
                            var key = event.keyCode || event.charCode;
                            if(/^[0-9]*$/.test(    ( event.srcElement || event.target).value    ) == false)
                            {   
                                var input = ( event.srcElement || event.target);
                                input.value = ''; 
                            }   
                         };
                        </script>
                        <apex:outputPanel id="PlanHeader">      
                            <div class = "page-head">
                                <a class="modal-close" href="javascript: void(0);" onclick="searchRecords();"></a>
                                <div class = "object-icon left">
                                    <img class = "left" src = "{!URLFOR($Resource.Images, 'common/icon-tasks-24x24.png')}" />
                                </div>
                                <div class = "headers left">
                                    <span class = "page-subhead left">Task</span><br />
                                    <h2><apex:outputText value="{!newSelectedTask.Subject}" /></h2>
                                </div>
                            </div>
                        </apex:outputPanel>  
                        <div id="tabstask" class = "ui-tabs">
                            <ul class = "ui-tabs" id = "tskplanTab">
                                <li ><a onclick="window.setTimeout('setPosition()',200)" href="#tasktabs-ite">Details</a></li>
                                <li><a href="#tabs-cha">Feed</a></li>
                                <!--<li><a href="#tabs-gen">Attachments</a></li>-->
                                <li><a href="#tasktabs-col">Work <span class="people-tab"></span> </a></li>
                            </ul>
                            <div id="tasktabs-ite">
                                <div class = "tasktabs-block border-taskview">
                                    <div class = "tasktabs-block-head">
                                        <div Id="editDiv" class="tasktab-editdiv">
                                            <table cellspacing = "6" cellpadding = "0" class = "modal-tbl" >
                                                <tr>
                                                    <td class = "cell-left modal-label">
                                                        <span class = "top-pad">Subject</span>
                                                    </td>
                                                    <td class = "cell-right required-input" colspan = "3" style="width:637px">
                                                        <apex:inputField styleClass="task-modal-text" style="width:587px" id="subjectForTask" value="{!newSelectedTask.Subject}" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class = "cell-left modal-label">
                                                        Assigned To
                                                    </td>
                                                    <td class = "cell-right required-input">
                                                        <apex:inputField id="assignTo" value="{!newSelectedTask.OwnerId}" />
                                                    </td>
                                                     <td class = "cell-left modal-label">
                                                        Status
                                                    </td>
                                                    <td class = "cell-right">
                                                        <apex:inputField id="status" style="width:168px" value="{!newSelectedTask.status}" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class = "cell-left modal-label">
                                                        Due Date
                                                    </td>
                                                    <td class = "cell-right">
                                                        <apex:inputField id="dueDate" value="{!newSelectedTask.ActivityDate}" />
                                                    </td>
                                                    <td class = "cell-left modal-label">
                                                        Priority
                                                    </td>
                                                    <td class = "cell-right">
                                                        <apex:inputField id="priority" style="width:167px" value="{!newSelectedTask.Priority}" styleClass="prioritystyle"/>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class = "cell-left modal-label">
                                                        Related To
                                                    </td>
                                                    <td class = "cell-right">
                                                        <apex:inputField value="{!newSelectedTask.whatId}" />
                                                    </td>
                                                    <td class = "cell-left modal-label">
                                                        Name
                                                    </td>
                                                    <td class = "cell-right">
                                                        <!--<apex:inputField value="{!newSelectedTask.whoId}" />-->
                                                    </td>
                                                </tr>
                                                
                                                <!--<tr>
                                                    <td class = "cell-left modal-label">
                                                        Related To
                                                    </td>
                                                    <td class = "cell-left" colspan="3">
                                                         <script>
                                                            var newWin=null; 
                                                             function openLookupPopupTab(name, id)
                                                             {
                                                                  var url="/apex/LookupPopup?namefield=" + name + "&idfield=" + id + "&searchObj=" + document.getElementById('selectedObjInEditTask').value + "&searchText=" + document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:taskForm:recName').value;
                                                                  newWin=window.open(url, 'Popup','height=500,width=600,left=100,top=100,resizable=no,scrollbars=yes,toolbar=no,status=no');
                                                                  if (window.focus) 
                                                                  {
                                                                   newWin.focus();
                                                                  }
                                                                 return false;
                                                              }
                                                             function closeLookupPopup()
                                                             {
                                                                if (null!=newWin)
                                                                {
                                                                   newWin.close();
                                                                }  
                                                             }
                                                             function clearLookUpValue(){
                                                                document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskFormDetail:recId').value = '';
                                                                document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskFormDetail:recName').value = '';
                                                             }
                                                             function removeHiddenData(){
                                                                document.getElementById('activityPage:taskWorkBenchComponent:workBenchTaskView:newtaskFormDetail:recId').value = '';
                                                             }
                                                        </script> 
                                                        <div style="float:left"> 
                                                            <select Id="selectedObjInEditTask" >
                                                                <option value="Decisions" >Decisions</option>
                                                                <option value="Plans">Plans</option>
                                                                <option value="Accounts" >Accounts</option>
                                                                <option value="Contacts">Contacts</option>
                                                            </select> 
                                                            <apex:inputHidden value="{!recId}" id="recId" /> &nbsp;&nbsp;&nbsp;&nbsp;
                                                            <apex:inputText style="width:488px" value="{!recName}" id="recName"  disabled="false" styleClass="LookUp" onchange="removeHiddenData();"/> &nbsp;
                                                            <img src="/s.gif" onclick="openLookupPopupTab('{!$Component.recName}', '{!$Component.recId}'); return false" class="lookupIconOn"   /> &nbsp; 
                                                        </div>
                                                        <div style="float:left"> 
                                                            <apex:inputField value="{!newSelectedTask.whatId}" />
                                                        </div>
                                                        
                                                    </td>
                                                </tr>
                                                <tr >
                                                    <td class = "cell-left modal-label">Name</td>
                                                    <td class = "cell-left" colspan="3">
                                                        <div style="float:left">
                                                            <apex:inputField value="{!newSelectedTask.whoId}"/> 
                                                        </div>
                                                    </td>
                                                </tr>-->
                                                <tr> 
                                                    <td class = "cell-left modal-label">
                                                        Comments
                                                    </td>
                                                    <td class = "cell-right" colspan = "3">
                                                        <apex:inputField id="comments" style="width:580px;max-width:583px;max-height:60px" value="{!newSelectedTask.Description}" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class = "cell-left  modal-label">
                                                        Send Notification Mail
                                                    </td>
                                                    <td colspan="3" class = "cell-right" >
                                                        <input id="sendingNotification" type = "checkbox" />&nbsp;<span style="color: #4A4A56;font-weight: bold;font-size: 11px;margin-left:220px">Reminder</span>&nbsp;<apex:inputField value="{!newSelectedTask.IsReminderSet}" id="setReminder" onclick="disabledate(this);"/><apex:inputField value="{!newSelectedTask.ReminderDateTime}" id="setReminderDate"/>
                                                    </td>
                                                </tr>
                                            </table>
                                            <div class="taskBtns">
                                                <button type = "button" onclick="updateTaskDetails();" class="popup-btn"> Save </button>
                                                <button type = "button" onclick="searchRecords();" class="popup-btn"> Close </button>
                                            </div>
                                        </div>
                                        <div class="view" style="border:1px solid #ECECEC;border-top-left-radius: 5px;border-top-right-radius: 5px;">
                                            <apex:outputPanel id="outputDiv" >
                                                <!-- Begin General Section -->
                                                <div class = "tabs-gen-block border-taskview" style="height : 322px; overflow-y:scroll;">
                                                    <h3><div style="padding: 3px;">General</div></h3>
                                                    <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl"  >
                                                        <tr>
                                                            <td class = "cell-left gen-block-cell-tasktab" >
                                                                Subject
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab" colspan="3"> 
                                                                <a href="/{!newSelectedTask.id}"><apex:outputField value="{!newSelectedTask.Subject}" />  </a>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Assigned To
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab"> 
                                                                <apex:outputField value="{!newSelectedTask.OwnerId}" /> 
                                                            </td>
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Status
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab"> 
                                                                <apex:outputField value="{!newSelectedTask.status}" /> 
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Due Date
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab"> 
                                                                <apex:outputField value="{!newSelectedTask.ActivityDate}" /> 
                                                            </td>
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Priority
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab"> 
                                                                <apex:outputField value="{!newSelectedTask.Priority}"/>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Related To
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab" > 
                                                                <apex:outputField value="{!newSelectedTask.WhatId}" /> 
                                                            </td>
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Name
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab" > 
                                                                <!--<apex:outputField value="{!newSelectedTask.whoId}" />--> 
                                                            </td>
                                                        </tr>
                                                       
                                                        <tr> 
                                                            <td class = "cell-left gen-block-cell-tasktab">
                                                                Comments
                                                            </td>
                                                            <td class = "gen-block-cell-tasktab" colspan="3">
                                                                <apex:outputField id="commentsView" style="width:583px;" value="{!newSelectedTask.Description}" />
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td class = "cell-left  gen-block-cell-tasktab">
                                                                Reminder
                                                            </td>
                                                            <td colspan="3" class = "gen-block-cell-tasktab" >
                                                                <apex:outputField value="{!newSelectedTask.IsReminderSet}" /><apex:outputField value="{!newSelectedTask.ReminderDateTime}" />
                                                            </td>
                                                        </tr>
                                                    </table>                                
                                                </div>
                                                <!-- End General Section --> 
                                                <!--<div style="height: 30px;border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;"></div>-->
                                                <!-- Begin Button Area (Below) -->
                                                <div style="text-align:left;margin-top:-25px;" class = "gen-bottom-btns border-btm-taskview taskBtns">
                                                    <apex:outputPanel rendered="{!editDisable}" >
                                                        <button type = "button" onclick="showEditMode()" class="popup-btn"> Edit </button>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!NOT(editDisable)}" >
                                                        <button type = "button" class="btn-disabled popup-btn" > Edit </button>
                                                    </apex:outputPanel>
                                                    <button type = "button" onclick="searchRecords();" class="popup-btn"> Close </button>
                                                </div> 
                                                <!-- End Button Area (Below)-->  
                                            </apex:outputPanel>
                                        </div>
                                    </div> 
                                </div>  
                             </div>  
                             <div  id="tabs-cha">
                                <div class = "chatter-block">
                                    <div class = "tasktabs-block-head">
                                        <div class = "chatter-tableft">
                                            <apex:outputPanel rendered="{!chatDisable}" >   
                                                <apex:iframe rendered="{!taskRecId != null}" src="/apex/chatterFeed?id={!taskRecId}" width="800" scrolling="true" height="350"/>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!NOT(chatDisable)}" >  
                                                <span style="font-weight: bold; font-size: 12pt;">Insufficient Privileges</span><br/>
                                                You do not have the level of access necessary to perform the operation you requested. Please contact the owner of the record or your administrator if access is necessary. 
                                            </apex:outputPanel>
                                            <!--<chatter:feedWithFollowers rendered="{!taskRecId != null}" id="chatter" entityId="{!taskRecId}"/>-->    
                                        </div>
                                    </div> 
                                </div>
                                <div class="taskBtnsChatter">
                                    <apex:outputPanel rendered="{!editDisable}" >
                                        <button type = "button" onclick="updateTaskDetails();" class="popup-btn"> Save </button>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!NOT(editDisable)}" >
                                        <button type = "button" class="btn-disabled popup-btn" > Save </button>
                                    </apex:outputPanel>
                                    <button type = "button" onclick="searchRecords();" class="popup-btn"> Close </button>
                                </div> 
                             </div>  
                             <!--<div  id="tabs-gen">
                                <div class = "tasktabs-block border-taskview" style="padding:808px 353px;">
                                    <div class = "tasktabs-block-head">
                                        Attachment
                                    </div> 
                                </div>  
                             </div>-->  
                             <div id="tasktabs-col" >
                                <div class = "tasktabs-block border-taskview">
                                    <div class = "tasktabs-block-head">
                                        <apex:outputPanel Id="workTab" >
                                            <apex:outputPanel id="workOutPutPanel" >
                                                <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl" style="border-top: 1px solid #ECECEC;border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;" >
                                                    <tr>
                                                        <td class = "cell-left gen-block-cell-tasktab"> 
                                                            Complexity 
                                                        </td>
                                                        <td class = "gen-block-cell-tasktab"> 
                                                            <apex:outputField value="{!newSelectedTask.Complexity__c}" /> 
                                                        </td>
                                                        <td class = "cell-left gen-block-cell-tasktab"> 
                                                            Skill Level
                                                        </td>
                                                        <td class = "gen-block-cell-tasktab"> 
                                                            <apex:outputField value="{!newSelectedTask.Skill_Level__c}" /> 
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class = "cell-left gen-block-cell-tasktab"> 
                                                            Estimated Hours
                                                        </td>
                                                        <td class = "gen-block-cell-tasktab"> 
                                                            <apex:outputField value="{!newSelectedTask.Estimated_Hours__c}" /> 
                                                        </td>
                                                        <td class = "cell-left gen-block-cell-tasktab"> 
                                                            Actual Hours
                                                        </td>
                                                        <td class = "gen-block-cell-tasktab"> 
                                                            <apex:outputField value="{!newSelectedTask.Actual_Hours__c}" /> 
                                                        </td>
                                                    </tr>
                                                </table>
                                                <!-- Begin Button Area (Below) -->
                                                <div style="height: 270px;border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;"></div>
                                                <div  style="text-align:left;border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;" class = "gen-bottom-btns border-btm-taskview taskBtnsWork">
                                                    <apex:outputPanel rendered="{!editDisable}" >
                                                        <button type = "button" onclick="showEditModeWork()" class="popup-btn"> Edit </button>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!NOT(editDisable)}" >
                                                        <button type = "button" class="btn-disabled popup-btn" > Edit </button>
                                                    </apex:outputPanel>
                                                    <button type = "button" onclick="searchRecords();" class="popup-btn"> Close </button>
                                                </div> 
                                                <!-- End Button Area (Below)-->  
                                            </apex:outputPanel>
                                            <apex:outputPanel id="workEditPanel" style="display:none;">
                                                <table cellspacing = "0" cellpadding = "0" class = "gen-block-tbl" style="border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;border-top: 1px solid #ECECEC;">
                                                    <tr>
                                                        <td class = "cell-left gen-block-cell"> 
                                                            Complexity
                                                        </td>
                                                        <td class = "gen-block-cell"> 
                                                            <apex:inputField value="{!newSelectedTask.Complexity__c}" /> 
                                                        </td>
                                                        <td class = "cell-left gen-block-cell"> 
                                                            Skill Level
                                                        </td>
                                                        <td class = "gen-block-cell"> 
                                                            <apex:inputField value="{!newSelectedTask.Skill_Level__c}" /> 
                                                        </td> 
                                                    </tr>
                                                    <tr>
                                                        <td class = "cell-left gen-block-cell"> 
                                                            Estimated Hours
                                                        </td>
                                                        <td class = "gen-block-cell"> 
                                                            <apex:inputField value="{!newSelectedTask.Estimated_Hours__c}" onkeypress="return isNumberKeyforpop(event)"  id="hrstxt"/>
                                                        </td>
                                                        <td class = "cell-left gen-block-cell"> 
                                                            Actual Hours
                                                        </td>
                                                        <td class = "gen-block-cell"> 
                                                            <apex:inputField value="{!newSelectedTask.Actual_Hours__c}" onkeypress="return isNumberKeyforpop(event)"/> 
                                                        </td>
                                                    </tr>
                                                </table>
                                                <div style="height: 220px;border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;"></div>
                                                <div class="taskBtnsWork" style="border-right: 1px solid #ECECEC;border-left: 1px solid #ECECEC;margin-top: 0px;">
                                                    <button type = "button" onclick="updateTaskDetailsWork();" class="popup-btn"> Save </button>
                                                    <button type = "button" onclick="searchRecords();" class="popup-btn"> Close </button>
                                                </div>
                                                <script>
                                                     function isNumberKeyforpop(event){
                                                         var event = event || window.event //For IE
                                                         var key = event.target;
                                                        
                                                            if( key.value.length  == 16 )
                                                            {
                                                              //alert('Maximum number of digits is 16');
                                                              return false;
                                                            }
                                                         //  var charCode = (event.which) ? event.which : event.keyCode
                                                          var key = window.event ? event.keyCode : event.which;
                                                            if (event.keyCode == 8 || event.keyCode == 46 || event.keyCode == 37 || event.keyCode == 39) {
                                                                return true;
                                                            }
                                                            else if ( key < 48 || key > 57 ) {
                                                                return false;
                                                            }
                                                            else return true;
                                                            
                                                            
                                                           /*
                                                            if (charCode < 48 || charCode > 57   )
                                                                return false;
                                                    
                                                            return true;*/
                                                        }
                                                </script>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                    </div> 
                                </div>  
                             </div>     
                        </div>
                    </apex:outputPanel>
                </apex:form>
            </div>
     
    
    <!-- --------------------- -->
</apex:component>