<apex:page controller="DecisionTab">
	<apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-ui-1.10.3.js')}"/> 
	<apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/plan-jquery-ui.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>   
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jqueryui-1.9.1.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/decision-jquery-ui.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-ui-1.10.3.js')}"/> 
	
	<apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/console.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/examples-offline.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.common.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.metro.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.dataviz.metro.min.css')}"/> 
	
    <apex:stylesheet value="{!$Page.CommonStyles}" />
    <apex:stylesheet value="{!$Page.OverrideStyles}" />
    <apex:stylesheet value="{!$Page.WorkbenchStyles}" /> 
	<apex:stylesheet value="{!$Page.DecisionStyles}" />    
    
    <!-- Kendo Library -->
    <apex:includeScript value="{!URLFOR($Resource.KendoMetroNewLibrary, '/kendoMetroNewLibrary/kendo.all.min.js')}"/> 
    
    <apex:includeScript value="{!URLFOR($Resource.TokenInput, '/TokenInput/Tokeninputjavascript1.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.TokenInput, '/TokenInput/TokenInput.css')}"/>
     
    <!--------- FT Scripts ----------->
    <apex:includeScript value="{!$Page.CommonScripts}" />
    <head>
        <c:WalkMeAndSupportButton />
        <!--<script type="text/javascript">(function() {var walkme = document.createElement('script'); walkme.type = 'text/javascript'; walkme.async = true; walkme.src = 'https://d3b3ehuo35wzeh.cloudfront.net/users/3d4e7e29fbce4945a03495f309d755c1/test/walkme_3d4e7e29fbce4945a03495f309d755c1_https.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(walkme, s);})();</script>-->
    
	    <style>
	        ul.token-input-list{
	            width: 200px !important;
	        }
	    </style>
    </head>
    <!---------- Tabs ------------->
    <div > 
    	<!---------- Start of Table View ------------->
    	<div >
					
				<div id="Dec-rec">
					 <div >
						 <div style="text-align:right"><label><input type="checkbox" name="Show Closed Decisions" value="Show Closed Decisions" onclick='closedDecisions(this);'/>Show Closed Decisions</label></div>
						 <div id="gridDecision"></div>
						 <script>
							 $(document).ready(function () {
								  //alert($.parseJSON('{!JSENCODE(decisionJSON)}'));
								  kendoDecision();
							 });
						 </script>
					 </div>    
				</div>	
				
				<script>
					function closedDecisions(isChecked){
						if(isChecked.checked){
							DecisionTab.DecisionRecord('Close', function(result, event)
							{    
								if (event.status)
								{  
								   var newTaskEvent = removeQuotes(result);
								   var grid = $("#gridDecision").data("kendoGrid");
								   grid.dataSource.data(newTaskEvent);
								}
							}, {escape:true});
						}
						else{
							DecisionTab.DecisionRecord('', function(result, event)
							{    
								if (event.status)
								{  
								   var newTaskEvent = removeQuotes(result);
								   var grid = $("#gridDecision").data("kendoGrid");
								   grid.dataSource.data(newTaskEvent);
								}
							}, {escape:true});
						}
					}
					
					function editDecision(container, options){
						//console.log(options);
						//alert(options.model.isEditable);
						if(options.model.isEditable || options.model.isEditable == 'true'){
							$('<input type="text" data-text-field="title" data-value-field="title" data-bind="value:' + options.field + '"/>' )
							 .appendTo(container);
						} else {
							$('<a href=/'+options.model.id+'><output type="text" data-text-field="title" data-value-field="title" data-bind="value:' + options.field + '"/></a>' )
							.appendTo(container);
						}
					}
				
					function kendoDecision() {
						//console.log(JSON.stringify(gridData));
					   var dataSource = new kendo.data.DataSource({ 
					   		
							//autoSync: true, 
							//batch :true,
							//sort: { field: "lastActivityDate", dir: "desc" },
							transport: {
								read: {
									      url: "/apex/TestingJson",
									       dataType: "json",
									        contentType: "application/json",
									        
									    }
									  
								/*read: function(e) {
									dataSource.sync();
									e.success(gridData);
								},
								update: function(e) { 
									
									var stringifiedData = JSON.stringify(e.data.models); 
									var updatedData = parsingModifieDataforDecision(stringifiedData);
									e.success();
								}*/
							 },
							
							 schema: {
								   model: {
									  id: "id",
									  fields: {
										  id: { type: "string" },
										  name:{type: "string" },
										  icon:{type:"string",editable: false},
										  title:{type: "string",editable: true },
										  lastActivityDate:{type: "DateTime",editable: false },
										  nextDueDate:{type: "DateTime",editable: false },
										  dType:{type:"string",editable: false},
										  phase:{type: "string",editable: false },
										  status:{type:"string",editable: false},
										  myRole:{type:"string",editable: false},
										  accountable:{type:"string",editable: false},
										  stance:{type:"string",editable: false},
										  activitiesTask:{type:"string",editable: false},
										  readsOfDecision:{type:"string",editable: false},
										  chatterPosts:{type:"number",editable: false},
										  chatterPostLikes:{type:"number",editable: false},
										  chatterPostLikesForME:{type:"number",editable: false},
										  thanksBadgesForMe:{type:"string",editable: false},
										  thanksBadges:{type:"string",editable: false},
										  isEditable:{type:"Boolean"},
										  stanceColour:{type:"String"},
										  activityColour:{type:"String"}
									  }
								  }
							   }
						   });
						   console.log(dataSource);
					   var grid = $("#gridDecision").kendoGrid({
						    
						   dataSource:dataSource, 
						   pageSize: 5,
                           scrollable: {
                            virtual: true
                        },
						   sortable: true,
						   toolbar:    ["save","cancel"] ,
						   editable:true,
						   filterable: true,
						  // scrollable: true,
						   columns: [
							  
							   {
								   field: "icon",
								   title: "Decision Image",
								   filterable: false,
								   width: 120,
								   //template: '<div><img class="user-image" height="128px" width="128px" id="dImage"  src="#:icon#" /></div>'
								   template: '<div style="text-align:center"><img height="64px" width="64px" id="dImage"  src="#:icon#" /></div>'
							   },
							   {
								   field: "title",
								   title: "Title",
								   width: 200,
								   editor: editDecision,
								   template: '<div><a href=/#:id# >#=title#</div>'
							   },
								{
								   field: "lastActivityDate",
								   title: "Last Activity Date",
								   //format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
								   //editor: dateTimeEditorforActivities,
								   width: 175,
								  //template: "<div>#:kendo.toString(( lastActivityDate== null ? '' :lastActivityDate),'{!JSENCODE(dateFormat)}')#</div>"
							   },
							   {
								   field: "nextDueDate",
								   title: "Next Due Date",
								   //format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
								   //editor: dateTimeEditorforActivities,
								   width: 175,
								   //template: "<div>#:kendo.toString(( nextDueDate== null ? '' :nextDueDate),'{!JSENCODE(dateFormat)}')#</div>"
							   },
							   {
								   field: "dType",
								   title: "Type",
								   width: 100,
								   template: '<div>#:dType#</div>'
							   },
							   {
								   field: "phase",
								   title: "Phase",
								   
								   width: 100,
								   template: '<div>#:phase#</div>'
							   },
							   {
								   field: "status",
								   title: "Status",
								   //editor: statusDropDownEditor ,
								   width: 100,
								   template: '<div>#:status#</div>'
							   },
							   {
								   field: "myRole",
								   title: "My Role",
								   width: 100,
								   template: '<div>#:myRole#</div>'
							   },
								{
								   field: "accountable",
								   title: "Accountable",
								   width: 120,
								   template: '<div style="word-wrap: break-word;">#:accountable#</div>'
							   },
							   {
								   field: "stance",
								   title: "Stances",
								   width: 100,
								   template: '<div class = "#:stanceColour#"  style="text-align:center">#:stance#</div>'
								   
							   },
							   {
								   field: "activitiesTask",
								   title: "Activities / Tasks",
								   width: 140,
								   template: '<div class = "#:activityColour#"  style="text-align:center">#:activitiesTask#</div>'
							   },
							   /*{
								   field: "readsOfDecision",
								   title: "Reads of Decision",
								   width: 200,
								   template: '<div>#:readsOfDecision#</div>'
							   },*/
							   {
								   field: "chatterPosts",
								   title: "Chatter Posts",
								   width: 120,
								   template: '<div style="word-wrap: break-word;text-align:center" >#:chatterPosts#</div>'
							   },
							   {
								   field: "chatterPostLikes",
								   title: "Chatter post likes",
								   width: 140,
								   template: '<div  style="text-align:center">#:chatterPostLikes#</div>'
							   },
							   {
								   field: "chatterPostLikesForME",
								   title: "Chatter post likes for ME",
								   width: 180,
								   template: '<div  style="text-align:center">#:chatterPostLikesForME#</div>'
							   }/*,
							   {
								   field: "thanksBadgesForMe",
								   title: "Thanks / badges for Me",
								   width: 200,
								   template: '<div>#:thanksBadgesForMe#</div>'
							   },
							   {
								   field: "thanksBadges",
								   title: "Thanks / badges",
								   width: 170,
								   template: '<div>#:thanksBadges#</div>'
							   }*/
							   
						  ],
						  //sortable: true,
						 // pageable: true ,
							 
					   });
					   
					}
					
				
				</script>
    
				<script>
					function parsingModifieDataforDecision(t){
						parseModifiedData(t);
					}
				
					 //Batch update for Decision tab method
					function parseModifiedData(modifiedData){
						// Calling controller method to update task and event
						//alert(modifiedData);
						DecisionTab.updateDecisions(modifiedData, function(result, event)
						{    
							if (event.status)
							{  
							   var newTaskEvent = removeQuotes(result);
							   var grid = $("#gridDecision").data("kendoGrid");
							   grid.dataSource.data(newTaskEvent);
							}
						}, {escape:true});
					}  
					
					// Date editior for Activity and next due date
					function dateTimeEditorforActivities(container, options) {
						if( options.model.isTask == 'Task' ) {
							$('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
									.appendTo(container)
									.kendoDatePicker({});
						} else {
							$('<input id="dateTimePicker" data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
								.appendTo(container)
								.kendoDateTimePicker({});
						}
					}
					
					// Status Dropdown
					
					function statusDropDownEditor(container, options) {
					   
							$('<input   data-text-field="StatusName" data-value-field="StatusName" data-bind="value:' + options.field + '"/>' )
							.appendTo(container)
							.kendoDropDownList({
								height:220,
								autoBind: false,
								dataSource: statusValue
							});
						
					}
					
					// remove quotes from json string 
					function removeQuotes(mystring) {
							
						newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
							return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
						});
						
						var newJ= $.parseJSON(newString);
						return newJ;
					}
				</script>
				<style>
					#gridDecision{
						width: 1500px;
						overflow-x: scroll;
					}
				
				</style>	
					
					
    	</div>
    	<!---------- End of Table View ------------->
   </div>
</apex:page>