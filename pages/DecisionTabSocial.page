<apex:page controller="DecisionTabSocialDup">
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs10, '/tabs/jquery-ui-1.10.3.js')}"/> 
    <apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/plan-jquery-ui.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jquery-1.8.3.js')}"/>   
    <apex:includeScript value="{!URLFOR($Resource.JqueryUITabs, '/tabs/jqueryui-1.9.1.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.JqueryUITabs, '/tabs/decision-jquery-ui.css')}"/>
    
    <apex:includeScript value="{!URLFOR($Resource.KendoMetro, '/kendoNew/js/console.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/examples-offline.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.common.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.metro.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoMetro, '/kendoNew/styles/kendo.dataviz.metro.min.css')}"/> 
    
    <apex:stylesheet value="{!$Page.CommonStyles}" />
    <apex:stylesheet value="{!$Page.OverrideStyles}" />
    <apex:stylesheet value="{!$Page.WorkbenchStyles}" /> 
    <apex:stylesheet value="{!$Page.DecisionStyles}" /> 
    <apex:stylesheet value="{!$Page.PlanStyles}" />      
    
    <!-- Kendo Library -->
    <apex:includeScript value="{!URLFOR($Resource.KendoMetroNewLibrary, '/kendoMetroNewLibrary/kendo.all.min.js')}"/> 
    
    <apex:includeScript value="{!URLFOR($Resource.TokenInput, '/TokenInput/Tokeninputjavascript1.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.TokenInput, '/TokenInput/TokenInput.css')}"/>
     
    <!--------- FT Scripts ----------->
    <apex:includeScript value="{!$Page.CommonScripts}" />
    <head>
        <c:WalkMeAndSupportButton />
        <!--<script type="text/javascript">(function() {var walkme = document.createElement('script'); walkme.type = 'text/javascript'; walkme.async = true; walkme.src = 'https://d3b3ehuo35wzeh.cloudfront.net/users/3d4e7e29fbce4945a03495f309d755c1/test/walkme_3d4e7e29fbce4945a03495f309d755c1_https.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(walkme, s);})();</script>-->
    
        <style>
            ul.token-input-list{
                width: 200px !important;
            }
        </style>
        <script>
            $(function (){
                changeFooterText();
                $( "#tabs" ).tabs({ active: 0 });
                $('#tabs').css('display','block');
            });
            
            // script for google analytics
            var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-34907619-2']);
          _gaq.push(['_trackPageview']);
        
          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();
        </script>
    </head>
    <!---------- Tabs ------------->
    <div id="tabs" class = "ui-tabs"> 
        <!---------- Start of Tabs ------------->
        <ul class = "ui-tabs" id = "decisionTab">
            <li><a href="#tabs-phase">Phase Board</a></li>
            <li><a href="#tabs-card">Table View</a></li>
        </ul>
        <!---------- End of Tabs ------------->
        <!---------- Start of Table View ------------->
        <div id="tabs-card">
                    
                <div id="Dec-rec">
                     <div >
                         <div style="text-align:right;width:1366px">
                            <label><input type="checkbox" id="closedDecisionCheck" name="Show Closed Decisions" value="Show Closed Decisions" onclick='closedDecisions(this);'/>Show Closed Decisions</label>
                            <select id="tab-Type" onchange="changeTable();">
                                  <option value="Contribution">Contribution</option>
                                  <option value="Social">Social</option>
                                  <option value="Financial">Financial</option>
                            </select>  
                           
                         </div>
                         <div id="gridDecision"></div>
                         <div id="gridDecisionSocial"></div>
                         <div id="gridDecisionFinancial"></div>
                         <script>
                             $(document).ready(function () {
                                 contributionTab();
                                 //kendoDecisionSocial($.parseJSON(''));
                                 //kendoDecisionFinancial($.parseJSON(''));
                                  
                             });
                             
                             function contributionTab(){
                                  //alert($.parseJSON('{!JSENCODE(decisionJSON)}'));
                                 kendoDecision($.parseJSON('{!JSENCODE(decisionJSON)}'));
                             }
                             function socialTab(){
                                  //alert($.parseJSON('{!JSENCODE(socialTabJsonData)}'));
                                  //kendoDecisionSocial($.parseJSON('{!JSENCODE(socialTabJsonData)}'));
                                  //kendoDecisionSocial($.parseJSON(''));
                                  closedDecisionsSocial();
                                  
                                 
                             }
                             function financialTab(){
                                  //alert($.parseJSON('{!JSENCODE(financialTabJsonData)}'));
                                  //kendoDecisionFinancial($.parseJSON('{!JSENCODE(financialTabJsonData)}'));
                                  //kendoDecisionFinancial($.parseJSON(''));
                                  closedDecisionsFinancial();
                                  
                             }
                            
                         </script>
                         
                     </div>    
                </div>  
                
                
                <!--2_4_2014 Start Created this script to load Social Tab data -->
                <script>
                    // this function is used to display the Table based on the selection 
                    function changeTable(){
                        var selectTab = document.getElementById("tab-Type");
                        var selectTabValue = selectTab.options[selectTab.selectedIndex].value;
                        if(selectTabValue=='Contribution'){
                            contributionTab();
                            document.getElementById('gridDecisionSocial').style.display = 'none';
                            document.getElementById('gridDecisionFinancial').style.display = 'none';
                            document.getElementById('gridDecision').style.display = 'block';
                        }
                        else if(selectTabValue=='Social'){
                            socialTab();
                            document.getElementById('gridDecision').style.display = 'none';
                            document.getElementById('gridDecisionFinancial').style.display = 'none';
                            document.getElementById('gridDecisionSocial').style.display = 'block';
                        }
                        else if(selectTabValue=='Financial'){
                            financialTab();
                            document.getElementById('gridDecision').style.display = 'none';
                            document.getElementById('gridDecisionSocial').style.display = 'none';
                            document.getElementById('gridDecisionFinancial').style.display = 'block';
                        }
                    }
                
                
                    function kendoDecisionSocial(gridData) {
                 
                    var dataSource = new kendo.data.DataSource({   
                         autoSync: true, 
                         batch :true,
                         sort: { field: "lastActivityDate", dir: "desc" },
                         transport: {
                             read: function(e) {
                                 dataSource.sync();
                                 e.success(gridData);
                             },
                             update: function(e) { 
                                 var stringifiedData = JSON.stringify(e.data.models); 
                                 var divId ='gridDecisionSocial';
                                 var updatedData = parsingModifieDataforDecision(stringifiedData,divId);
                                 e.success();
                             }
                          },
                          schema: {
                                model: {
                                   id: "id",
                                   fields: {
                                       id: { type: "string" },
                                       name:{type: "string" },
                                       icon:{type:"string",editable: false},
                                       title:{type: "string",editable: true },
                                       lastActivityDate:{type: "string",editable: false },
                                       myRole:{type:"string",editable: false},
                                       accountable:{type:"string",editable: false},
                                       myMood:{type:"string",editable: true},
                                       averageMood:{type:"string",editable: false},
                                       likes:{type:"number",editable: false},
                                       unlikes:{type:"number",editable: false},
                                       relevance:{type:"number",editable: false},
                                       relevanceClass:{type:"string",editable: false},
                                       outcome:{type:"string",editable: false},
                                       effort:{type:"string",editable: false},
                                       relevanceStarPosition: {type:"String",editable: false}
                                   }
                               }
                            },
                            pageSize: 10
                        });
                        
                    var grid = $("#gridDecisionSocial").kendoGrid({
                        
                        dataSource:dataSource,
                        sortable: true,
                        toolbar:    ["save","cancel"] ,
                        editable:true,
                        filterable: true,
                        scrollable: true,
                        columns: [
                           
                            {
                                field: "icon",
                                title: "Decision Image",
                                filterable: false,
                                width: 110,
                                template: '<div style="text-align:center"><img height="64px" width="64px" id="dImage"  src="#:icon#" /></div>'
                            },
                            {
                                field: "title",
                                title: "Title",
                                width: 200,
                                editor: editDecision,
                                template: '<div><a href=/#:id# >#:title#</div>'
                            },
                            {
                                field: "lastActivityDate",
                                title: "Last Activity Date",
                                width: 140,
                                
                                //template: '<div>#: kendo.parseDate(lastActivityDate)#</div>'
                                
                            },
                            {
                                field: "myRole",
                                title: "My Role",
                                width: 90,
                                template: '<div>#:myRole#</div>'
                            },
                             {
                                field: "accountable",
                                title: "Accountable",
                                width: 120,
                                template: '<div style="word-wrap: break-word;">#:accountable#</div>'
                            },
                            {
                                field: "myMood",
                                title: "My Mood",
                                width: 90,
                                template: '<div align="center"><div  class="#:myMoodClass#" height="25px" width="24px" align="center"></div></div>'
                                
                            },
                            {
                                field: "averageMood",
                                title: "Average Mood",
                                width: 120,
                                template: '<div align="center"><div class="#:moodClass#"></div></div>'
                            },
                           {
                                field: "likes",
                                title: "Likes",
                                width: 70,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:likes#</div>'
                            },
                            {
                                field: "unlikes",
                                title: "Unlikes",
                                width: 80,
                                template: '<div  style="text-align:center">#:unlikes#</div>'
                            },
                            {
                                field: "relevance",
                                title: "Average Relevance",
                                width: 150,
                                template: '<div style="background:url(\'/{!starImage}\') #:relevanceStarPosition# ; height:18px"></div>'
                            },
                            {
                                field: "outcome",
                                title: "Average Outcome",
                                width: 140,
                                template: '<div style="text-align:center">#:outcome#</div>'
                            },
                            {
                                field: "effort",
                                title: "Average Effort",
                                width: 120,
                                template: '<div style="text-align:center">#:effort#</div>'
                            }
                            
                       ],
                       sortable: true,
                       pageable: true
                    });
                    
                 }
                </script>
                <!--2_4_2014  end of the social tab    -->
                
                <!--4_4_2014 start of financial Tab    -->
                <script>
                function kendoDecisionFinancial(gridData) {
                    var gridRemoveTab = $("#gridDecisionFinancial").kendoGrid();
                    if(gridRemoveTab.find("thead").find("#top-Header").length!=0){
                        
                        gridRemoveTab.find("thead").find("#top-Header").remove();
                        b=false;
                    }
                    
                    var dataSource = new kendo.data.DataSource({   
                         autoSync: true, 
                         batch :true,
                         
                         transport: {
                             read: function(e) {
                                 dataSource.sync();
                                 e.success(gridData);
                             },
                             update: function(e) { 
                                 var stringifiedData = JSON.stringify(e.data.models); 
                                  var divId ='gridDecisionFinancial';
                                 var updatedData = parsingModifieDataforDecision(stringifiedData,divId);
                                 e.success();
                             }
                          },
                          schema: {
                                model: {
                                   id: "id",
                                   fields: {
                                       id: { type: "string" },
                                       name:{type: "string" },
                                       icon:{type:"string",editable: false},
                                       title:{type: "string",editable: true },
                                       investmentEstimate:{type:"number",editable:true },
                                       investmentActual:{type:"number",editable:true },
                                       investmentPercent:{type:"number",editable:false },
                                       directCostEstimate:{type:"number",editable: true },
                                       directCostActual:{type:"number",editable: true },
                                       directCostPercent:{type:"number",editable: false },
                                       revenueEstimate:{type:"number",editable: true },
                                       revenueActual:{type:"number",editable: true },
                                       revenuePercent:{type:"number",editable: false },
                                       NPVEstimate:{type:"number",editable: true },
                                       NPVActual:{type:"number",editable: true },
                                       NPVPercent:{type:"number",editable: false },
                                       peopleInvolvedEstimate:{type:"number",editable: true },
                                       peopleInvolvedinvestmentActual:{type:"number",editable: true },
                                       peopleInvolvedPercent:{type:"number",editable: false },
                                       FTEEstimate:{type:"number",editable: true },
                                       FTEActual:{type:"number",editable: true },
                                       FTEPercent:{type:"number",editable: false },
                                       
                                       investmentPercentColour:{type:"string",editable: false },
                                       directCostPercentColour:{type:"string",editable: false },
                                       NPVPercentColour:{type:"string",editable: false },
                                       peopleInvolvedPercentColour:{type:"string",editable: false },
                                       FTEPercentColour:{type:"number",editable: false },
                                   }
                               }
                            },
                            pageSize: 10
                        });
                        
                    var grid = $("#gridDecisionFinancial").kendoGrid({
                        
                        dataSource:dataSource,
                        sortable: true,
                        toolbar:    ["save","cancel"] ,
                        editable:true,
                        filterable: true,
                        scrollable: true,
                        columns: [
                           
                            {
                                field: "icon",
                                title: "Decision Image",
                                filterable: false,
                                width: 110,
                                template: '<div style="text-align:center"><img height="64px" width="64px" id="dImage"  src="#:icon#" /></div>'
                            },
                            {
                                field: "title",
                                title: "Title",
                                width: 200,
                                editor: editDecision,
                                template: '<div><a href=/#:id# >#:title#</div>'
                            },
                            
                            {
                                field: "investmentEstimate",
                                title: "Estimate",
                                width: 120,
                                editor: editDecisionEstimate,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:investmentEstimate#</div>'                               
                            },
                            {
                                field: "investmentActual",
                                title: "Actual",
                                width: 120,
                                editor: editDecisionActual,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:investmentActual#</div>'
                            },
                            {   field: "investmentPercent", 
                                title: "%",
                                width: 120,
                                template: '<div class="#:investmentPercentColour#" style="word-wrap: break-word;text-align:center" >#:investmentPercent#</div>' 
                                
                            },
                            {
                                field: "directCostEstimate",
                                title: "Estimate",
                                width: 120,
                                editor: editDecisionEstimate,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:directCostEstimate#</div>'
                            },
                            {
                                field: "directCostActual",
                                title: "Actual",
                                width: 120,
                                editor: editDecisionActual,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:directCostActual#</div>'
                                
                            },
                            {   field: "directCostPercent", 
                                title: "%",
                                width: 120,
                                template: '<div class="#:directCostPercentColour#" style="word-wrap: break-word;text-align:center" >#:directCostPercent#</div>'  
                            },
                            {
                                field: "revenueEstimate",
                                title: "Estimate",
                                width: 120,
                                editor: editDecisionEstimate,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:revenueEstimate#</div>'
                            },
                           {
                                field: "revenueActual",
                                title: "Actual",
                                width: 120,
                                editor: editDecisionActual,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:revenueActual#</div>'
                            },
                            {   field: "revenuePercent", 
                                title: "%",
                                width: 120,
                                template: '<div class="#:revenuePercentColour#" style="word-wrap: break-word;text-align:center" >#:revenuePercent#</div>'  
                            },
                            {
                                field: "NPVEstimate",
                                title: "Estimate",
                                width: 120,
                                editor: editDecisionEstimate,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:NPVEstimate#</div>'
                            },
                            {
                                field: "NPVActual",
                                title: "Actual",
                                width: 120,
                                editor: editDecisionActual,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:NPVActual#</div>'
                            },
                            {   field: "NPVPercent", 
                                title: "%",
                                width: 120,
                                template: '<div class="#:NPVPercentColour#" style="word-wrap: break-word;text-align:center" >#:NPVPercent#</div>'   
                            },
                            {
                                field: "peopleInvolvedEstimate",
                                title: "Estimate",
                                width: 120,
                                editor: editDecisionEstimate,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:peopleInvolvedEstimate#</div>'
                            },
                            {
                                field: "peopleInvolvedinvestmentActual",
                                title: "Actual",
                                width: 120,
                                editor: editDecisionActual,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:peopleInvolvedinvestmentActual#</div>'
                            },
                            {   field: "peopleInvolvedPercent", 
                                title: "%",
                                width: 120,
                                template: '<div class="#:peopleInvolvedPercentColour#" style="word-wrap: break-word;text-align:center" >#:peopleInvolvedPercent#</div>'  
                            },
                            {
                                field: "FTEEstimate",
                                title: "Estimate",
                                width: 120,
                                editor: editDecisionEstimate,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:FTEEstimate#</div>'
                            },
                            {
                                field: "FTEActual",
                                title: "Actual",
                                width: 120,
                                editor: editDecisionActual,
                                template: '<div style="word-wrap: break-word;text-align:center" >#:FTEActual#</div>'
                            },
                            {   field: "FTEPercent", 
                                title: "%",
                                width: 120,
                                template: '<div class="#:FTEPercentColour#" style="word-wrap: break-word;text-align:center" >#:FTEPercent#</div>' 
                                
                            }
                            
                       ],
                       sortable: true,
                       pageable: true
                    });
                    
                    if(grid.find("thead").find("#top-Header").length==0 ){
                        
                        grid.find("thead").prepend('<tr id="top-Header"> <th style="border-bottom:1px solid #DADADA" colspan="2"></th> <th class="k-header" style="text-align:center;border-bottom:1px solid #DADADA" colspan="3">Investment</th> <th class="k-header" style="text-align:center;border-bottom:1px solid #DADADA" colspan="3">Direct Cost</th> <th class="k-header" style="text-align:center;border-bottom:1px solid #DADADA" colspan="3">Revenue</th> <th class="k-header" style="text-align:center;border-bottom:1px solid #DADADA" colspan="3">NPV</th> <th class="k-header" style="text-align:center;border-bottom:1px solid #DADADA" colspan="3">People Involved</th> <th class="k-header" style="text-align:center;border-bottom:1px solid #DADADA" colspan="3">FTE</th> <th></th> </tr> ');
                    }
                 }
                </script>
                <!--4_4_2014 end of financial Tab  -->
                <script>
                    function closedDecisions(isChecked){
                        if(isChecked.checked){
                            DecisionTabSocialDup.DecisionRecord('Close', function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var newTaskEvent = removeQuotes(result);
                                   var grid = $("#gridDecision").data("kendoGrid");
                                   grid.dataSource.data(newTaskEvent);
                                }
                            }, {escape:true});
                        }
                        else{
                            DecisionTabSocialDup.DecisionRecord('', function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var newTaskEvent = removeQuotes(result);
                                   var grid = $("#gridDecision").data("kendoGrid");
                                   grid.dataSource.data(newTaskEvent);
                                }
                            }, {escape:true});
                        }
                    }
                    
                    // for social view
                    function closedDecisionsSocial(){
                        var isChecked = document.getElementById('closedDecisionCheck');
                        //alert(isChecked.checked);
                        if(isChecked.checked){
                            DecisionTabSocialDup.buildSocialTabData('Close', function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var newTaskEvent = removeQuotes(result);
                                   //kendoDecisionSocial($.parseJSON(''));
                                   var grid = $("#gridDecisionSocial").data("kendoGrid");
                                   grid.dataSource.data(newTaskEvent);
                                }
                            }, {escape:true});
                        }
                        else{
                            DecisionTabSocialDup.buildSocialTabData('', function(result, event)
                            {    
                                //alert(result);
                                if (event.status)
                                {  
                                   //alert(result );
                                   //alert($.parseJSON('{!JSENCODE(socialTabJsonData)}'));
                                   var newTaskEvent = removeQuotes(result);
                                   kendoDecisionSocial(newTaskEvent);
                                   //var grid = $("#gridDecisionSocial").data("kendoGrid");
                                   //grid.dataSource.data(newTaskEvent);
                                }
                            }, {escape:true});
                        }
                    }
                    
                    // for financialView
                    function closedDecisionsFinancial(){
                        var isChecked = document.getElementById('closedDecisionCheck');
                        if(isChecked.checked){
                            DecisionTabSocialDup.buildFinancialTabData('Close', function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var newTaskEvent = removeQuotes(result);
                                   //alert(financialTabJsonData);
                                   //kendoDecisionSocial($.parseJSON('{!JSENCODE(socialTabJsonData)}'));
                                   //kendoDecisionFinancial($.parseJSON('{!JSENCODE(financialTabJsonData)}'));
                                   var grid = $("#gridDecisionFinancial").data("kendoGrid");
                                   
                                   grid.dataSource.data(newTaskEvent);
                                }
                            }, {escape:true});
                        }
                        else{
                            DecisionTabSocialDup.buildFinancialTabData('', function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var newTaskEvent = removeQuotes(result);
                                   //alert(result);
                                   //kendoDecisionFinancial($.parseJSON('{!JSENCODE(financialTabJsonData)}'));
                                   var grid = $("#gridDecisionFinancial").data("kendoGrid");
                                   grid.dataSource.data(newTaskEvent);
                                   
                                }
                            }, {escape:true});
                        }
                    }
                    
                    function editDecision(container, options){
                        //alert(options.model.isEditable);
                        if(options.model.isEditable || options.model.isEditable == 'true'){
                            $('<input type="text" data-text-field="title" data-value-field="title" data-bind="value:' + options.field + '"/>' )
                             .appendTo(container);
                        } else {
                            $('<a href=/'+options.model.id+'><output type="text" data-text-field="title" data-value-field="title" data-bind="value:' + options.field + '"/></a>' )
                            .appendTo(container);
                        }
                    }
                    
                    // to edit the Actual field
                    function editDecisionActual(container, options){
                         if(options.model.isEditableActual || options.model.isEditableActual == 'true'){
                            $('<input type="text"  data-type="number" data-role="numerictextbox" data-text-field="options.field" data-value-field="options.field"  data-bind="value:' + options.field + '"/>' )
                             .appendTo(container);
                            
                        } else {
                            $('<div style="text-align:center"><output type="text" style="text-align:center" data-text-field="directCostEstimate" data-value-field="directCostEstimate" data-bind="value:' + options.field + '"/></div>' )
                            .appendTo(container);
                        }
                    }
                    
                    // to edit Estimate field
                    function editDecisionEstimate(container, options){
                         if(options.model.isEditableEstimate|| options.model.isEditableEstimate == 'true'){
                            $('<input type="text"  data-type="number" data-role="numerictextbox" data-text-field="options.field" data-value-field="options.field"  data-bind="value:' + options.field + '"/>' )
                             .appendTo(container);
                        } else {
                            $('<div style="text-align:center"><output type="text" style="text-align:center" data-text-field="directCostEstimate" data-value-field="directCostEstimate" data-bind="value:' + options.field + '"/></div>' )
                            .appendTo(container);
                        }
                    }
                    
                    function kendoDecision(gridData) {
                    
                       var dataSource = new kendo.data.DataSource({   
                            autoSync: true, 
                            batch :true,
                            sort: { field: "lastActivityDate", dir: "desc" },
                            transport: {
                                read: function(e) {
                                    dataSource.sync();
                                    e.success(gridData);
                                },
                                update: function(e) { 
                                    var stringifiedData = JSON.stringify(e.data.models); 
                                    var divId ='gridDecision';
                                    var updatedData = parsingModifieDataforDecision(stringifiedData,divId);
                                    e.success();
                                }
                             },
                             schema: {
                                   model: {
                                      id: "id",
                                      fields: {
                                          id: { type: "string" },
                                          name:{type: "string" },
                                          icon:{type:"string",editable: false},
                                          title:{type: "string",editable: true },
                                          lastActivityDate:{type: "DateTime",editable: false },
                                          nextDueDate:{type: "DateTime",editable: false },
                                          dType:{type:"string",editable: false},
                                          phase:{type: "string",editable: false },
                                          status:{type:"string",editable: false},
                                          myRole:{type:"string",editable: false},
                                          accountable:{type:"string",editable: false},
                                          stance:{type:"string",editable: false},
                                          activitiesTask:{type:"string",editable: false},
                                          readsOfDecision:{type:"string",editable: false},
                                          chatterPosts:{type:"number",editable: false},
                                          chatterPostLikes:{type:"number",editable: false},
                                          chatterPostLikesForME:{type:"number",editable: false},
                                          thanksBadgesForMe:{type:"string",editable: false},
                                          thanksBadges:{type:"string",editable: false},
                                          isEditable:{type:"Boolean"},
                                          stanceColour:{type:"String"},
                                          activityColour:{type:"String"}
                                      }
                                  }
                               },
                               pageSize: 10
                           });
                           
                       var grid = $("#gridDecision").kendoGrid({
                           
                           dataSource:dataSource,
                           sortable: true,
                           toolbar:    ["save","cancel"] ,
                           editable:true,
                           filterable: true,
                           scrollable: true,
                           columns: [
                              
                               {
                                   field: "icon",
                                   title: "Decision Image",
                                   filterable: false,
                                   width: 120,
                                   //template: '<div><img class="user-image" height="128px" width="128px" id="dImage"  src="#:icon#" /></div>'
                                   template: '<div style="text-align:center"><img height="64px" width="64px" id="dImage"  src="#:icon#" /></div>'
                               },
                               {
                                   field: "title",
                                   title: "Title",
                                   width: 200,
                                   editor: editDecision,
                                   template: '<div><a href=/#:id# >#=title#</div>'
                               },
                               {
                                   field: "lastActivityDate",
                                   title: "Last Activity Date",
                                   //format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                                   //editor: dateTimeEditorforActivities,
                                   width: 150,
                                  //template: "<div>#:kendo.toString(( lastActivityDate== null ? '' :lastActivityDate),'{!JSENCODE(dateFormat)}')#</div>"
                               },
                               {
                                   field: "nextDueDate",
                                   title: "Next Due Date",
                                   //format:'{0:{!JSENCODE(dateFormat)} HH:mm}',
                                   //editor: dateTimeEditorforActivities,
                                   width: 130,
                                   //template: "<div>#:kendo.toString(( nextDueDate== null ? '' :nextDueDate),'{!JSENCODE(dateFormat)}')#</div>"
                               },
                               /*{
                                   field: "dType",
                                   title: "Type",
                                   width: 80,
                                   template: '<div>#:dType#</div>'
                               },
                               {
                                   field: "phase",
                                   title: "Phase",
                                   
                                   width: 80,
                                   template: '<div>#:phase#</div>'
                               },
                               {
                                   field: "status",
                                   title: "Status",
                                   //editor: statusDropDownEditor ,
                                   width: 80,
                                   template: '<div>#:status#</div>'
                               },*/
                               {
                                   field: "myRole",
                                   title: "My Role",
                                   width: 90,
                                   template: '<div>#:myRole#</div>'
                               },
                                {
                                   field: "accountable",
                                   title: "Accountable",
                                   width: 120,
                                   template: '<div style="word-wrap: break-word;">#:accountable#</div>'
                               },
                               {
                                   field: "stance",
                                   title: "Stances",
                                   width: 90,
                                   template: '<div class = "#:stanceColour#"  style="text-align:center">#:stance#</div>'
                                   
                               },
                               {
                                   field: "activitiesTask",
                                   title: "Activities / Tasks",
                                   width: 140,
                                   template: '<div class = "#:activityColour#"  style="text-align:center">#:activitiesTask#</div>'
                               },
                               /*{
                                   field: "readsOfDecision",
                                   title: "Reads of Decision",
                                   width: 200,
                                   template: '<div>#:readsOfDecision#</div>'
                               },*/
                               {
                                   field: "chatterPosts",
                                   title: "Chatter Posts",
                                   width: 120,
                                   template: '<div style="word-wrap: break-word;text-align:center" >#:chatterPosts#</div>'
                               },
                               {
                                   field: "chatterPostLikes",
                                   title: "Chatter post likes",
                                   width: 140,
                                   template: '<div  style="text-align:center">#:chatterPostLikes#</div>'
                               },
                               /*{
                                   field: "chatterPostLikesForME",
                                   title: "Chatter post likes for ME",
                                   width: 180,
                                   template: '<div  style="text-align:center">#:chatterPostLikesForME#</div>'
                               },
                               {
                                   field: "thanksBadgesForMe",
                                   title: "Thanks / badges for Me",
                                   width: 200,
                                   template: '<div>#:thanksBadgesForMe#</div>'
                               },*/
                               {
                                   field: "thanksBadges",
                                   title: "Thanks / badges",
                                   headerAttributes: {
                                      "class": "table-header-cell",
                                      style: "word-wrap:break-word;"
                                   },
                                   width: 140,
                                   template: '<div>#:thanksBadges#</div>'
                               }
                               
                          ],
                          sortable: true,
                          pageable: true
                       });
                       
                    }
                    
                
                </script>
    
                <script>
                    function parsingModifieDataforDecision(t,divId){
                        parseModifiedData(t,divId);
                    }
                
                     //Batch update for Decision tab method
                    function parseModifiedData(modifiedData,divId){
                        // Calling controller method to update task and event
                        //alert(modifiedData);
                        if(divId == 'gridDecision'){
                            DecisionTabSocialDup.updateDecisions(modifiedData, function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var cleanedData = removeQuotes(result);
                                   var grid = $("#"+divId).data("kendoGrid");
                                   grid.dataSource.data(cleanedData);
                                }
                            }, {escape:true});
                        }
                        else if(divId == 'gridDecisionSocial'){
                            DecisionTabSocialDup.updateDecisionsSocial(modifiedData, function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var cleanedData = removeQuotes(result);
                                   var grid = $("#"+divId).data("kendoGrid");
                                   grid.dataSource.data(cleanedData);
                                }
                            }, {escape:true});
                        }
                        else if(divId == 'gridDecisionFinancial'){
                            //alert(divId);
                            DecisionTabSocialDup.updateDecisionsFinancial(modifiedData, function(result, event)
                            {    
                                if (event.status)
                                {  
                                   var cleanedData = removeQuotes(result);
                                   var grid = $("#"+divId).data("kendoGrid");
                                   grid.dataSource.data(cleanedData);
                                }
                            }, {escape:true}); 
                        }
                    }  
                    
                    // Date editior for Activity and next due date
                    function dateTimeEditorforActivities(container, options) {
                        if( options.model.isTask == 'Task' ) {
                            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                                    .appendTo(container)
                                    .kendoDatePicker({});
                        } else {
                            $('<input id="dateTimePicker" data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                                .appendTo(container)
                                .kendoDateTimePicker({});
                        }
                    }
                    
                    // Status Dropdown
                    
                    function statusDropDownEditor(container, options) {
                       
                            $('<input   data-text-field="StatusName" data-value-field="StatusName" data-bind="value:' + options.field + '"/>' )
                            .appendTo(container)
                            .kendoDropDownList({
                                height:220,
                                autoBind: false,
                                dataSource: statusValue
                            });
                        
                    }
                    
                    // remove quotes from json string 
                    function removeQuotes(mystring) {
                        
                            newString = mystring.replace(/&(lt|gt|quot);/g, function (m, p) { 
                                return (p == "lt") ? "<" : ((p == "gt") ? ">" : "\"");
                            });
                             var newJ= $.parseJSON(newString);
                            return newJ;
                        
                       
                    }
                </script>
                <style>
                    #gridDecision{
                       width:1366px;
                       overflow-x: scroll;
                    }
                    #gridDecisionSocial{
                        width:1366px;
                        overflow-x: scroll;
                    }
                    #gridDecisionFinancial{
                        width:1366px;
                        overflow-x: scroll;
                    }
                    
                </style>    
                    
                    
        </div>
        <!---------- End of Table View ------------->
        <!---------- Start of Phase Board ------------->
        <div id="tabs-phase">
            <!---------- Start of Filters ------------->
            <apex:outputPanel id="filterPanelComponent">
                <div class = "workbench-filter">
                    <p class = "filter-help" id = "filterHelp">Select the criteria and press Go to see the decisions a person is working on</p>
                    <div >  
                        <div class = "filter-option ft-left">
                            <div class = "filter-text">Timeframe</div>
                            <select id="timeFrame">
                              <option value="1 Week">1 Week</option>
                              <option value="2 Weeks">2 Weeks</option>
                              <option value="3 Weeks">3 Weeks</option>
                              <option value="4 Weeks">4 Weeks</option>  
                            <!-- <option value="1 Month">1 Month</option>  -->
                              <option value="2 Months">2 Months</option>
                              <option value="3 Months">3 Months</option>
                              <option value="4 Months">4 Months</option>
                              <option value="All">All</option>
                            </select>
                        </div>
                        <div class = "filter-option ft-left">
                            <div class = "filter-text">Name</div>
                            <input type="text" class = "qcd-input" id="demo-input-pre-populated-with-tokenlimit" name="acc" required="True" />
                        </div>   
                        <div class = "filter-option ft-left">
                            <div class = "filter-text">Role</div>
                            <select id="roleOfUser">
                                <option selected="selected" value="All">All</option>
                                <option value="Accountable">Accountable</option>
                                <option value="Responsible">Responsible</option>
                                <option value="Consulted">Consulted</option>
                                <option value="Informed">Informed</option>
                            </select>
                        </div>   
                        <div class = "filter-option ft-left"> 
                            <div class = "filter-text">Phases</div>
                            <select id="decisionPhases" onchange="disableSelect('decisionStatus','decisionPhases');">
                                    <option value="All">All</option>
                                    <option value="Draft">Draft</option>
                                    <option value="Share">Share</option>
                                    <option value="Propose">Propose</option>
                                    <option value="Decide">Decide</option>
                                    <option value="Execute">Execute</option>
                                    <option value="Evaluate">Evaluate</option>
                                    <option value="Close">Close</option>
                            </select>
                        </div>    
                        <div class = "filter-option ft-left">
                            <div class = "filter-text">Status</div>
                            <select id="decisionStatus" onchange="disableSelect('decisionPhases','decisionStatus');">
                                    <option value="All">All</option>
                                    <option value="Undecided">Undecided</option>
                                    <option value="Approved">Approved</option>
                                    <option value="Rejected">Rejected</option>
                                    <option value="Executed">Executed</option>
                                    <option value="Evaluated">Evaluated</option>
                                    <option value="Closed">Closed</option>
                                    <option value="Withdrawn">Withdrawn</option>
                                    <option value="Cancelled">Cancelled</option>
                            </select>
                        </div>
                        <div class = "filter-option filter-btn ft-left">            
                            <button type="button" style="width:75px;height:25px;" onclick="getElementalData();" >Go</button>
                            <button type="button" style="width:75px;height:25px;" onclick="setDefaultData();">Clear</button>
                        </div>
                    </div>
                </div>
                <script>
                    var userId = 'default';
                    var chkUserId = 'yes';
                    $("#demo-input-pre-populated-with-tokenlimit").tokenInput(  $.parseJSON('{!JSENCODE(userDataJSON)}') , {
                        prePopulate: 
                           $.parseJSON('{!JSENCODE(defaultUserJson)}') 
                        ,onAdd: function (item) {
                           //alert(item.id); 
                           chkUserId = 'yes';
                           userId = item.id;
                           //storeIdAcc(item.id);
                        },
                        onDelete: function (item) {
                            chkUserId = 'no';
                            //delIdAcc(item.id);
                        },
                        tokenLimit: 1,
                        propertyToSearch: "name",
                        resultsFormatter: function(item){ 
                            return "<li>" + "<img src='" + item.url + "' title='" + item.name+ "' height='25px' width='25px' />" + "<div style='display: inline-block; padding-left: 10px;'>" + item.name+ "</div>" 
                       },
                    });
                    
                    function getElementalData(){
                        if(chkUserId == 'yes'){
                            var timeFrame = $('#timeFrame').val();
                            var roleOfUser = $('#roleOfUser').val();
                            var phases = $('#decisionPhases').val();
                            var status = $('#decisionStatus').val();
                            getMyDecisions(timeFrame,roleOfUser,phases,status,userId);
                        }else{
                            alert('please select user');
                        }
                    }
                    
                    function getDefaultData(){ 
                        var timeFrame = document.getElementById('timeFrame').options[0].value;
                        var roleOfUser = document.getElementById('roleOfUser').options[0].value;
                        document.getElementById('timeFrame').value = document.getElementById('timeFrame').options[0].value;
                        document.getElementById('roleOfUser').value = document.getElementById('roleOfUser').options[0].value;
                        if(document.getElementById('decisionPhases').disabled == true){
                            document.getElementById('decisionPhases').disabled = false;
                        }
                        if(document.getElementById('decisionStatus').disabled == true){
                            document.getElementById('decisionStatus').disabled = false;
                        }
                        document.getElementById('decisionPhases').value = document.getElementById('decisionPhases').options[0].value;
                        var status = document.getElementById('decisionStatus').options[0].value;
                        document.getElementById('decisionStatus').value = document.getElementById('decisionStatus').options[0].value;
                        var phases = document.getElementById('decisionPhases').options[0].value;
                        getMyDecisions(timeFrame,roleOfUser,phases,status,'default');
                    }
                    
                    function setMyData(){
                        getDefaultData();
                    }
                </script>
            </apex:outputPanel>
            <apex:form >
                <apex:actionFunction name="setDefaultData" action="{!dummyMethod}" reRender="filterPanelComponent" oncomplete="setMyData();" />
            </apex:form>
            <!---------- End of Filters ------------->
            <c:WorkbenchDecisionView />
       </div>
       <!---------- End of Phase Board ------------->
   </div>
</apex:page>